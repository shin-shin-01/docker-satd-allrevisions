,CommitID,Dockerfile,Comment
0,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
4,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
7,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
8,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jdk/alpine/Dockerfile,#!/bin/sh'; \
10,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
15,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
18,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,# backwards compatibility shim
19,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
20,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
21,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
22,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,# arm64v8
23,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,# amd64
24,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,# fallback
25,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
26,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
27,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
28,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
29,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
30,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,# basic smoke test
31,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
32,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
33,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
34,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
35,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
36,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
37,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
38,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
39,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
40,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
41,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
42,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
43,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
44,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
45,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
46,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
47,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
48,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
49,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
50,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
51,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
52,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
53,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
54,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
55,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
56,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
57,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
58,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
59,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
60,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
61,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,# backwards compatibility shim
62,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
63,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
64,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
65,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
66,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
67,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
68,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
69,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
70,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
71,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
72,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,# basic smoke test
73,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
74,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
75,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
76,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
77,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
78,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
79,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
80,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
81,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
82,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
83,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
84,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
85,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
86,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
87,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
88,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
89,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
90,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
91,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
92,aed2d23dbcc88926f8aaab61b3ea4f68506702af,/13/jdk/alpine/Dockerfile,# https://jdk.java.net/
93,aed2d23dbcc88926f8aaab61b3ea4f68506702af,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
94,aed2d23dbcc88926f8aaab61b3ea4f68506702af,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
95,aed2d23dbcc88926f8aaab61b3ea4f68506702af,/13/jdk/alpine/Dockerfile,# basic smoke test
96,aed2d23dbcc88926f8aaab61b3ea4f68506702af,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
97,5f603d0b657d0a87212ad16d304a1ce5e2533d82,/14/jdk/alpine/Dockerfile,# https://jdk.java.net/
98,5f603d0b657d0a87212ad16d304a1ce5e2533d82,/14/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
99,5f603d0b657d0a87212ad16d304a1ce5e2533d82,/14/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
100,5f603d0b657d0a87212ad16d304a1ce5e2533d82,/14/jdk/alpine/Dockerfile,# basic smoke test
101,5f603d0b657d0a87212ad16d304a1ce5e2533d82,/14/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
102,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
103,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
104,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
105,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
106,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
107,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
108,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
109,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
110,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
111,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
112,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
113,bd65529778e956612c0bd689aa6ff1ace391859e,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
114,bd65529778e956612c0bd689aa6ff1ace391859e,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
115,bd65529778e956612c0bd689aa6ff1ace391859e,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
116,bd65529778e956612c0bd689aa6ff1ace391859e,/8-jdk/alpine/Dockerfile,#!/bin/sh -e'; \
117,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/8/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
118,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
119,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
120,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
121,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
122,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
123,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
124,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
125,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
126,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
127,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
128,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
129,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,#!/bin/sh'; \
130,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
131,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
132,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
133,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
134,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
135,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
136,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
137,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
138,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
139,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
140,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
141,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
142,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
143,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
144,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
145,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
146,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
147,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
148,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
149,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
150,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
151,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
152,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
153,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
154,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/oracle/Dockerfile,# basic smoke test
155,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
156,c34391ea981c804c097981bad8403ec4bd934285,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
157,c34391ea981c804c097981bad8403ec4bd934285,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
158,c34391ea981c804c097981bad8403ec4bd934285,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
159,c34391ea981c804c097981bad8403ec4bd934285,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
160,c34391ea981c804c097981bad8403ec4bd934285,/9-jdk/Dockerfile,#!/bin/sh'; \
161,c34391ea981c804c097981bad8403ec4bd934285,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
162,c34391ea981c804c097981bad8403ec4bd934285,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
163,c34391ea981c804c097981bad8403ec4bd934285,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
164,c34391ea981c804c097981bad8403ec4bd934285,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
165,c34391ea981c804c097981bad8403ec4bd934285,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
166,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
167,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
168,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
169,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
170,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
171,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
172,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
173,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
174,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
175,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/oracle/Dockerfile,# basic smoke test
176,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
177,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
178,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
179,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,# Default to UTF-8 file.encoding
180,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
181,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
182,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,# arm64v8
183,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,# amd64
184,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,# fallback
185,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
186,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
187,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
188,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,# basic smoke test
189,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
190,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
191,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
192,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jdk/Dockerfile,# Default to UTF-8 file.encoding
193,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
194,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jdk/Dockerfile,#!/bin/bash'; \
195,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
196,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
197,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
198,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
199,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
200,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
201,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
202,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
203,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
204,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/slim/Dockerfile,#!/bin/sh'; \
205,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
206,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
207,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
208,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
209,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
210,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
211,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/alpine/Dockerfile,# https://jdk.java.net/
212,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
213,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
214,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/alpine/Dockerfile,# basic smoke test
215,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
216,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
217,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
218,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
219,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
220,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,# backwards compatibility shim
221,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
222,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
223,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
224,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,# arm64v8
225,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,# amd64
226,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,# fallback
227,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
228,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
229,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
230,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
231,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
232,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,# basic smoke test
233,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
234,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
235,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
236,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,# backwards compatibility shim
237,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
238,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,# https://jdk.java.net/
239,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
240,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
241,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
242,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
243,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
244,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,# basic smoke test
245,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
246,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
247,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
248,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
249,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
250,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
251,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,#!/bin/sh'; \
252,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
253,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
254,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
255,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
256,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
257,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
258,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
259,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
260,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
261,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
262,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
263,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
264,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,#!/bin/sh'; \
265,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
266,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
267,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
268,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
269,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
270,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
271,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
272,54c64cf47d2b705418feb68b811419a223c5a040,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
273,54c64cf47d2b705418feb68b811419a223c5a040,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
274,54c64cf47d2b705418feb68b811419a223c5a040,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
275,54c64cf47d2b705418feb68b811419a223c5a040,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
276,54c64cf47d2b705418feb68b811419a223c5a040,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
277,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
278,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
279,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
280,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
281,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
282,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
283,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,# Default to UTF-8 file.encoding
284,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
285,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,#!/bin/sh'; \
286,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
287,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
288,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
289,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
290,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
291,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
292,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
293,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
294,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
295,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
296,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
297,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
298,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/oracle/Dockerfile,# basic smoke test
299,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
300,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
301,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
302,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
303,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
304,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
305,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
306,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
307,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
308,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
309,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
310,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
311,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
312,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,# backwards compatibility shim
313,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
314,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
315,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
316,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
317,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
318,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
319,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
320,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,# basic smoke test
321,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
322,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
323,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
324,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
325,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
326,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
327,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
328,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
329,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
330,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,# Default to UTF-8 file.encoding
331,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,# backwards compatibility shim
332,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
333,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
334,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
335,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,#!/usr/bin/env bash'; \
336,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
337,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
338,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
339,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,# basic smoke test
340,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
341,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
342,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
343,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
344,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
345,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
346,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
347,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
348,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
349,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
350,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
351,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
352,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
353,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
354,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
355,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jdk/Dockerfile,#!/bin/sh'; \
356,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
357,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
358,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
359,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
360,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
361,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
362,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
363,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
364,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
365,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
366,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
367,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
368,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
369,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
370,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
371,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
372,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,# arm64v8
373,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,# amd64
374,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,# fallback
375,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
376,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
377,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
378,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,# basic smoke test
379,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
380,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
381,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
382,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
383,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,# backwards compatibility shim
384,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
385,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
386,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
387,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
388,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,# arm64v8
389,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,# amd64
390,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,# fallback
391,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
392,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
393,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
394,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
395,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
396,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
397,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
398,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,# basic smoke test
399,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
400,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
401,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
402,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,# backwards compatibility shim
403,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
404,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
405,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
406,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,# amd64
407,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,# fallback
408,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
409,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
410,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
411,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
412,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
413,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,# basic smoke test
414,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
415,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
416,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
417,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
418,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
419,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
420,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
421,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
422,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
423,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
424,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
425,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
426,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
427,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
428,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
429,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
430,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,# arm64v8
431,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,# amd64
432,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,# fallback
433,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
434,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
435,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,# basic smoke test
436,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
437,0467df283134a79840c25808093c00f7c94b9a88,/6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
438,0467df283134a79840c25808093c00f7c94b9a88,/6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
439,0467df283134a79840c25808093c00f7c94b9a88,/6-jdk/Dockerfile,# Default to UTF-8 file.encoding
440,0467df283134a79840c25808093c00f7c94b9a88,/6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
441,0467df283134a79840c25808093c00f7c94b9a88,/6-jdk/Dockerfile,#!/bin/sh'; \
442,0467df283134a79840c25808093c00f7c94b9a88,/6-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
443,0467df283134a79840c25808093c00f7c94b9a88,/6-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
444,0467df283134a79840c25808093c00f7c94b9a88,/6-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
445,0467df283134a79840c25808093c00f7c94b9a88,/6-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
446,0467df283134a79840c25808093c00f7c94b9a88,/6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
447,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
448,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
449,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
450,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
451,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
452,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
453,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
454,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
455,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jre/Dockerfile,#!/bin/sh'; \
456,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
457,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
458,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
459,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
460,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
461,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
462,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
463,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
464,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
465,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
466,f45f3f269d4b515201f290360b345790663e657e,/10/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
467,f45f3f269d4b515201f290360b345790663e657e,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
468,f45f3f269d4b515201f290360b345790663e657e,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
469,f45f3f269d4b515201f290360b345790663e657e,/10/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
470,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
471,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
472,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
473,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
474,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,#!/bin/sh'; \
475,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
476,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
477,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
478,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
479,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
480,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
481,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
482,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
483,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
484,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jdk/Dockerfile,# Default to UTF-8 file.encoding
485,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
486,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jdk/Dockerfile,#!/bin/bash'; \
487,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
488,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
489,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
490,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
491,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
492,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
493,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,# arm64v8
494,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,# amd64
495,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,# fallback
496,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
497,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
498,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,# basic smoke test
499,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
500,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
501,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
502,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
503,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
504,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
505,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,# arm64v8
506,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,# amd64
507,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,# fallback
508,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
509,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
510,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,# basic smoke test
511,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
512,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
513,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
514,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
515,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/alpine/Dockerfile,#!/bin/sh -e'; \
516,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
517,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
518,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
519,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
520,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
521,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
522,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
523,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
524,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
525,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
526,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
527,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/oracle/Dockerfile,# basic smoke test
528,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
529,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
530,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
531,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
532,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
533,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
534,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,# amd64
535,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,# fallback
536,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
537,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
538,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
539,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,# basic smoke test
540,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
541,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
542,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
543,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
544,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
545,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
546,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
547,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
548,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
549,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
550,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
551,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
552,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
553,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
554,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
555,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/windows/nanoserver/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
556,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
557,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/windows/nanoserver/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
558,030bf19db79998e9f9861d1ce848bbf1f41ee050,/openjdk-8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
559,030bf19db79998e9f9861d1ce848bbf1f41ee050,/openjdk-8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
560,030bf19db79998e9f9861d1ce848bbf1f41ee050,/openjdk-8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
561,030bf19db79998e9f9861d1ce848bbf1f41ee050,/openjdk-8-jre/alpine/Dockerfile,#!/bin/sh -e'; \
562,8b20818d91705361ff42b597369620680d0af98c,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
563,8b20818d91705361ff42b597369620680d0af98c,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
564,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
565,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
566,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,# Default to UTF-8 file.encoding
567,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
568,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,#!/bin/sh'; \
569,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
570,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
571,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
572,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
573,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
574,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
575,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
576,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
577,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
578,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
579,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
580,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
581,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
582,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
583,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jre/Dockerfile,# Default to UTF-8 file.encoding
584,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
585,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jre/Dockerfile,#!/bin/bash'; \
586,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
587,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
588,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
589,2695acad7bb0cd43353dc6c7d5cfc6424ab12b54,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
590,2695acad7bb0cd43353dc6c7d5cfc6424ab12b54,/openjdk-8-jdk/Dockerfile,# Default to UTF-8 file.encoding
591,2695acad7bb0cd43353dc6c7d5cfc6424ab12b54,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
592,2695acad7bb0cd43353dc6c7d5cfc6424ab12b54,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
593,2695acad7bb0cd43353dc6c7d5cfc6424ab12b54,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
594,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
595,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
596,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,# Default to UTF-8 file.encoding
597,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
598,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
599,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,# amd64
600,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,# fallback
601,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
602,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
603,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
604,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,# basic smoke test
605,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
606,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
607,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
608,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
609,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
610,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,#!/bin/sh'; \
611,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
612,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
613,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
614,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
615,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
616,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
617,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
618,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
619,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
620,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
621,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
622,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
623,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
624,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
625,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
626,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
627,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
628,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
629,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,# arm64v8
630,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,# amd64
631,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,# fallback
632,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
633,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
634,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
635,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,# basic smoke test
636,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
637,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
638,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
639,2b59d89bfa05b13f397b7e30562d6ab6ca177da0,/openjdk-8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
640,2b59d89bfa05b13f397b7e30562d6ab6ca177da0,/openjdk-8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
641,2b59d89bfa05b13f397b7e30562d6ab6ca177da0,/openjdk-8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
642,2b59d89bfa05b13f397b7e30562d6ab6ca177da0,/openjdk-8-jdk/alpine/Dockerfile,#!/bin/sh -e'; \
643,d912163e5aa10f916be7ac40ac0de7e8a82c4547,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
644,d912163e5aa10f916be7ac40ac0de7e8a82c4547,/openjdk-8-jdk/Dockerfile,# Default to UTF-8 file.encoding
645,d912163e5aa10f916be7ac40ac0de7e8a82c4547,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
646,d912163e5aa10f916be7ac40ac0de7e8a82c4547,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
647,d912163e5aa10f916be7ac40ac0de7e8a82c4547,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
648,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
649,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
650,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
651,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
652,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
653,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
654,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
655,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
656,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
657,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
658,4135ad55c2577bd722c575a41211c59669353d54,/8-jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
659,4135ad55c2577bd722c575a41211c59669353d54,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
660,4135ad55c2577bd722c575a41211c59669353d54,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
661,4135ad55c2577bd722c575a41211c59669353d54,/8-jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
662,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
663,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
664,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
665,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
666,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
667,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
668,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,# Default to UTF-8 file.encoding
669,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,# backwards compatibility shim
670,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
671,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
672,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
673,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
674,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,# amd64
675,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,# fallback
676,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
677,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
678,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
679,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
680,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,#!/usr/bin/env bash'; \
681,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
682,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
683,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,# basic smoke test
684,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
685,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
686,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,# backwards compatibility shim
687,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
688,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
689,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
690,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,# arm64v8
691,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,# amd64
692,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,# fallback
693,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
694,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
695,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
696,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
697,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
698,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,# basic smoke test
699,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
700,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
701,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
702,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
703,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
704,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
705,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
706,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
707,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
708,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
709,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
710,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
711,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
712,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
713,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
714,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
715,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
716,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,#!/bin/sh'; \
717,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
718,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
719,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
720,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
721,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
722,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
723,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
724,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
725,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
726,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
727,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
728,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,# backwards compatibility shim
729,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
730,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
731,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
732,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,# amd64
733,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,# fallback
734,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
735,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
736,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
737,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
738,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
739,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,# basic smoke test
740,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
741,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
742,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
743,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
744,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
745,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
746,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
747,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
748,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
749,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
750,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
751,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
752,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
753,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
754,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
755,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
756,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
757,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
758,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
759,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/nanoserver-1803/Dockerfile,# https://jdk.java.net/
760,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
761,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
762,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
763,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
764,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
765,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,#!/bin/sh'; \
766,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
767,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
768,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
769,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
770,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
771,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
772,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
773,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
774,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
775,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
776,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
777,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,# backwards compatibility shim
778,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
779,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
780,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
781,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,# arm64v8
782,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,# amd64
783,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,# fallback
784,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
785,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
786,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
787,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
788,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
789,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,# basic smoke test
790,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
791,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
792,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
793,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
794,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
795,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
796,b4a3c296023e590e410f645ab83d3c11a30cf535,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
797,b4a3c296023e590e410f645ab83d3c11a30cf535,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
798,b4a3c296023e590e410f645ab83d3c11a30cf535,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
799,b4a3c296023e590e410f645ab83d3c11a30cf535,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
800,b4a3c296023e590e410f645ab83d3c11a30cf535,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
801,fdf3bb8d168120655fe39e4098713e704db809df,/8/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
802,fdf3bb8d168120655fe39e4098713e704db809df,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
803,fdf3bb8d168120655fe39e4098713e704db809df,/8/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
804,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
805,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
806,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,# backwards compatibility shim
807,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
808,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
809,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
810,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,# amd64
811,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,# fallback
812,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
813,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
814,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
815,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
816,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
817,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,# basic smoke test
818,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
819,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
820,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
821,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
822,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
823,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jdk/Dockerfile,#!/bin/sh'; \
824,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
825,504b1cde5b2a8649731b3a0b73e1280cc790c61e,/7/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
826,504b1cde5b2a8649731b3a0b73e1280cc790c61e,/7/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
827,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
828,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
829,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
830,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
831,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
832,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
833,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
834,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
835,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
836,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
837,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
838,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
839,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
840,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
841,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
842,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
843,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
844,9089afd69bd69c34413b064bc36c15509b2ed4df,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
845,9089afd69bd69c34413b064bc36c15509b2ed4df,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
846,9089afd69bd69c34413b064bc36c15509b2ed4df,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
847,9089afd69bd69c34413b064bc36c15509b2ed4df,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
848,9089afd69bd69c34413b064bc36c15509b2ed4df,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
849,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
850,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
851,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
852,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
853,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/Dockerfile,#!/bin/sh'; \
854,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
855,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
856,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
857,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
858,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
859,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
860,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
861,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
862,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
863,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1809/Dockerfile,# http://jdk.java.net/
864,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
865,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
866,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
867,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
868,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
869,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jdk/Dockerfile,#!/bin/sh'; \
870,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
871,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
872,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
873,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
874,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
875,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/alpine/Dockerfile,#!/bin/sh'; \
876,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
877,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
878,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
879,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
880,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
881,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
882,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
883,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
884,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
885,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
886,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
887,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
888,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
889,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
890,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
891,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
892,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
893,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,#!/bin/sh'; \
894,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
895,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
896,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
897,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
898,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
899,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
900,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
901,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
902,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
903,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,# backwards compatibility shim
904,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
905,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,# https://jdk.java.net/
906,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
907,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
908,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
909,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
910,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
911,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,# basic smoke test
912,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
913,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
914,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
915,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
916,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
917,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
918,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jre/Dockerfile,#!/bin/sh'; \
919,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
920,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
921,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
922,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
923,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
924,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
925,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
926,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
927,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
928,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
929,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
930,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
931,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
932,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
933,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
934,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
935,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
936,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
937,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
938,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
939,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
940,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
941,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
942,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
943,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/Dockerfile,#!/bin/sh'; \
944,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
945,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
946,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
947,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
948,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
949,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
950,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
951,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
952,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
953,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,# backwards compatibility shim
954,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
955,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
956,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
957,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
958,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
959,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
960,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
961,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,#!/usr/bin/env bash'; \
962,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
963,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
964,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,# basic smoke test
965,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
966,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
967,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
968,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
969,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
970,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,#!/bin/sh'; \
971,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
972,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
973,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
974,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
975,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
976,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
977,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
978,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
979,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
980,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
981,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
982,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
983,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jre/Dockerfile,#!/bin/sh'; \
984,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
985,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
986,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
987,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
988,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
989,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
990,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
991,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
992,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
993,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
994,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
995,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
996,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
997,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
998,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
999,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1000,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1001,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1002,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1003,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1004,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1005,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
1006,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,# backwards compatibility shim
1007,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1008,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
1009,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
1010,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
1011,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
1012,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
1013,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1014,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
1015,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1016,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1017,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,# basic smoke test
1018,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
1019,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1020,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,# Default to UTF-8 file.encoding
1021,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
1022,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
1023,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,# arm64v8
1024,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,# amd64
1025,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,# fallback
1026,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
1027,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1028,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
1029,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,# basic smoke test
1030,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1031,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1032,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
1033,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,# backwards compatibility shim
1034,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1035,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1036,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1037,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
1038,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1039,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1040,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1041,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,# basic smoke test
1042,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1043,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
1044,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1045,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
1046,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
1047,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1048,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,#!/bin/sh'; \
1049,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1050,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1051,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
1052,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
1053,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1054,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1055,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1056,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1057,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1058,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1059,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
1060,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
1061,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1062,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/slim/Dockerfile,#!/bin/sh'; \
1063,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1064,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1065,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1066,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1067,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1068,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1069,d617d7e4b951735c512f3d5ac7672f7394115c91,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1070,d617d7e4b951735c512f3d5ac7672f7394115c91,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1071,d617d7e4b951735c512f3d5ac7672f7394115c91,/8/jdk/windows/windowsservercore-1809/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
1072,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1073,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1074,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
1075,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,# backwards compatibility shim
1076,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1077,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
1078,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
1079,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
1080,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
1081,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
1082,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1083,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,#!/usr/bin/env bash'; \
1084,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1085,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1086,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,# basic smoke test
1087,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1088,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
1089,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
1090,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1091,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/Dockerfile,#!/bin/sh'; \
1092,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1093,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1094,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1095,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1096,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1097,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1098,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1099,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1100,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1101,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
1102,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1103,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1104,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
1105,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
1106,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1107,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/slim/Dockerfile,#!/bin/sh'; \
1108,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1109,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1110,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1111,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1112,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1113,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1114,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1115,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1116,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1117,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
1118,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1119,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1120,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1121,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1122,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
1123,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1124,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1125,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1126,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1127,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
1128,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1129,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1130,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1131,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
1132,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1133,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1134,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1135,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1136,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1137,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1138,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
1139,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,# backwards compatibility shim
1140,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1141,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1142,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1143,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
1144,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1145,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1146,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1147,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,# basic smoke test
1148,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1149,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
1150,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1151,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1152,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1153,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
1154,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1155,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1156,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
1157,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1158,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
1159,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,# backwards compatibility shim
1160,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1161,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
1162,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
1163,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,# arm64v8
1164,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,# amd64
1165,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,# fallback
1166,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1167,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
1168,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1169,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1170,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1171,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,# basic smoke test
1172,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1173,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1174,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1175,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1176,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
1177,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1178,3110fbc370293c071cc995c4a89e4b1814553ad5,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1179,3110fbc370293c071cc995c4a89e4b1814553ad5,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1180,3110fbc370293c071cc995c4a89e4b1814553ad5,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
1181,3110fbc370293c071cc995c4a89e4b1814553ad5,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1182,3110fbc370293c071cc995c4a89e4b1814553ad5,/9-jdk/Dockerfile,#!/bin/sh'; \
1183,3110fbc370293c071cc995c4a89e4b1814553ad5,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1184,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1185,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/7-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1186,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/7-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
1187,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1188,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/7-jre/alpine/Dockerfile,#!/bin/sh'; \
1189,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1190,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1191,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
1192,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
1193,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
1194,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1195,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
1196,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,# backwards compatibility shim
1197,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1198,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1199,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1200,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
1201,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1202,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1203,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1204,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,# basic smoke test
1205,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1206,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
1207,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1208,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
1209,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/oracle/Dockerfile,# http://jdk.java.net/
1210,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
1211,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
1212,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/oracle/Dockerfile,# basic smoke test
1213,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
1214,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1215,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
1216,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
1217,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1218,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/slim/Dockerfile,#!/bin/sh'; \
1219,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1220,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1221,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1222,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1223,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1224,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1225,54c64cf47d2b705418feb68b811419a223c5a040,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1226,54c64cf47d2b705418feb68b811419a223c5a040,/7-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1227,54c64cf47d2b705418feb68b811419a223c5a040,/7-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
1228,54c64cf47d2b705418feb68b811419a223c5a040,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1229,54c64cf47d2b705418feb68b811419a223c5a040,/7-jre/alpine/Dockerfile,#!/bin/sh'; \
1230,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1231,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1232,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
1233,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1234,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jre/Dockerfile,#!/bin/sh'; \
1235,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1236,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jre/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
1237,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jre/windows/nanoserver-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
1238,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jre/windows/nanoserver-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
1239,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jre/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1240,42abb498353aae46a5766659faf3853edc441bde,/6/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1241,42abb498353aae46a5766659faf3853edc441bde,/6/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1242,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1243,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1244,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
1245,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1246,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,#!/bin/sh'; \
1247,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1248,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
1249,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1250,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1251,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1252,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
1253,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1254,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1255,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1256,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1257,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
1258,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1259,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1260,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
1261,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
1262,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1263,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,#!/bin/sh'; \
1264,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1265,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1266,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
1267,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
1268,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1269,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1270,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1271,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1272,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1273,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1274,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
1275,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
1276,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
1277,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1278,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
1279,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
1280,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1281,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,#!/bin/sh'; \
1282,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1283,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
1284,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1285,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1286,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1287,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1288,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
1289,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1290,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1291,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1292,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1293,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
1294,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1295,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1296,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
1297,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
1298,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
1299,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1300,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/oracle/Dockerfile,# basic smoke test
1301,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
1302,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1303,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1304,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
1305,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1306,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jre/Dockerfile,#!/bin/sh'; \
1307,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1308,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1309,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1310,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1311,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
1312,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1313,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1314,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
1315,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1316,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
1317,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,# backwards compatibility shim
1318,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1319,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
1320,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
1321,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,# amd64
1322,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,# fallback
1323,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1324,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
1325,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1326,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1327,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1328,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,# basic smoke test
1329,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1330,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1331,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
1332,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1333,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
1334,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,# backwards compatibility shim
1335,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1336,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1337,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
1338,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,# amd64
1339,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,# fallback
1340,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1341,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
1342,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1343,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1344,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1345,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,# basic smoke test
1346,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1347,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1348,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
1349,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
1350,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1351,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,#!/bin/sh'; \
1352,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1353,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1354,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1355,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1356,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1357,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1358,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1359,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1360,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
1361,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,# backwards compatibility shim
1362,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1363,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,# https://jdk.java.net/
1364,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1365,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
1366,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1367,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1368,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1369,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,# basic smoke test
1370,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1371,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
1372,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1373,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1374,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1375,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
1376,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1377,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1378,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1379,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1380,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
1381,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1382,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1383,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1384,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
1385,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
1386,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
1387,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1388,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1389,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1390,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
1391,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1392,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1393,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1394,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1395,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
1396,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1397,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1398,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1399,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
1400,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1401,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1402,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1403,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1404,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
1405,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1406,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1407,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
1408,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
1409,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1410,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/slim/Dockerfile,#!/bin/sh'; \
1411,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1412,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1413,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1414,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1415,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1416,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1417,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/alpine3.12/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
1418,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/alpine3.12/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
1419,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/alpine3.12/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
1420,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/alpine3.12/Dockerfile,# amd64
1421,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/alpine3.12/Dockerfile,# fallback
1422,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/alpine3.12/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
1423,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/alpine3.12/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1424,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/alpine3.12/Dockerfile,# basic smoke test
1425,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/alpine3.12/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1426,cee45bcb0f2d6db2e3e96c5465ebd5dbddcb2aea,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1427,cee45bcb0f2d6db2e3e96c5465ebd5dbddcb2aea,/openjdk-7-jdk/Dockerfile,# Default to UTF-8 file.encoding
1428,cee45bcb0f2d6db2e3e96c5465ebd5dbddcb2aea,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1429,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1430,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1431,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
1432,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1433,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jdk/Dockerfile,#!/bin/sh'; \
1434,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1435,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
1436,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1437,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,# Default to UTF-8 file.encoding
1438,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
1439,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
1440,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,# arm64v8
1441,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,# amd64
1442,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,# fallback
1443,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
1444,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1445,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
1446,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,# basic smoke test
1447,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1448,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1449,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
1450,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1451,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
1452,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,# backwards compatibility shim
1453,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1454,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1455,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1456,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
1457,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1458,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1459,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1460,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,# basic smoke test
1461,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1462,25c0a52bf0c70eafc6341bdb621580f4f282e1a1,/12/jdk/alpine/Dockerfile,# http://jdk.java.net/
1463,25c0a52bf0c70eafc6341bdb621580f4f282e1a1,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
1464,25c0a52bf0c70eafc6341bdb621580f4f282e1a1,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
1465,25c0a52bf0c70eafc6341bdb621580f4f282e1a1,/12/jdk/alpine/Dockerfile,# basic smoke test
1466,25c0a52bf0c70eafc6341bdb621580f4f282e1a1,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
1467,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1468,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1469,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jre/Dockerfile,# Default to UTF-8 file.encoding
1470,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1471,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jre/Dockerfile,#!/bin/bash'; \
1472,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1473,8b20818d91705361ff42b597369620680d0af98c,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1474,8b20818d91705361ff42b597369620680d0af98c,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1475,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1476,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1477,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
1478,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
1479,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
1480,45c21bc4b2492f962d726eb31b1535ca15c4a726,/13/jdk/alpine/Dockerfile,# https://jdk.java.net/
1481,45c21bc4b2492f962d726eb31b1535ca15c4a726,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
1482,45c21bc4b2492f962d726eb31b1535ca15c4a726,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1483,45c21bc4b2492f962d726eb31b1535ca15c4a726,/13/jdk/alpine/Dockerfile,# basic smoke test
1484,45c21bc4b2492f962d726eb31b1535ca15c4a726,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
1485,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1486,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
1487,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,# Default to UTF-8 file.encoding
1488,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1489,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,#!/bin/sh'; \
1490,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1491,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1492,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
1493,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1494,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1495,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1496,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1497,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1498,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1499,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
1500,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1501,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
1502,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1503,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
1504,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1505,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/oracle/Dockerfile,# basic smoke test
1506,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
1507,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1508,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
1509,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,# Default to UTF-8 file.encoding
1510,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1511,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,#!/bin/sh'; \
1512,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1513,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1514,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1515,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1516,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1517,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1518,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1519,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1520,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
1521,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,# backwards compatibility shim
1522,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1523,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1524,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
1525,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,# arm64v8
1526,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,# amd64
1527,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,# fallback
1528,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1529,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
1530,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1531,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1532,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1533,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,# basic smoke test
1534,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1535,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1536,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1537,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1538,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
1539,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1540,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1541,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
1542,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
1543,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
1544,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1545,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/oracle/Dockerfile,# basic smoke test
1546,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
1547,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1548,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
1549,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,# backwards compatibility shim
1550,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1551,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
1552,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
1553,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
1554,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
1555,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
1556,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1557,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
1558,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1559,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1560,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,# basic smoke test
1561,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1562,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1563,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1564,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
1565,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1566,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1567,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
1568,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,# Default to UTF-8 file.encoding
1569,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1570,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,#!/bin/sh'; \
1571,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1572,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1573,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1574,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1575,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1576,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1577,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1578,906bdc14f53c6eff33c007511701ef0444705993,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1579,906bdc14f53c6eff33c007511701ef0444705993,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1580,906bdc14f53c6eff33c007511701ef0444705993,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
1581,906bdc14f53c6eff33c007511701ef0444705993,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1582,906bdc14f53c6eff33c007511701ef0444705993,/9-jre/Dockerfile,#!/bin/sh'; \
1583,906bdc14f53c6eff33c007511701ef0444705993,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1584,906bdc14f53c6eff33c007511701ef0444705993,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1585,906bdc14f53c6eff33c007511701ef0444705993,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1586,906bdc14f53c6eff33c007511701ef0444705993,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1587,906bdc14f53c6eff33c007511701ef0444705993,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1588,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1589,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1590,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1591,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
1592,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1593,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1594,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1595,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1596,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
1597,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1598,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1599,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
1600,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1601,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
1602,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,# backwards compatibility shim
1603,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1604,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1605,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1606,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
1607,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1608,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1609,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1610,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,# basic smoke test
1611,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1612,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1613,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1614,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1615,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
1616,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1617,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1618,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1619,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1620,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1621,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1622,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
1623,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1624,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1625,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1626,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1627,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
1628,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1629,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jdk/Dockerfile,#!/bin/sh'; \
1630,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1631,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1632,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1633,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1634,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1635,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
1636,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,# backwards compatibility shim
1637,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1638,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
1639,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
1640,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
1641,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
1642,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
1643,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1644,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,#!/usr/bin/env bash'; \
1645,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1646,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1647,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,# basic smoke test
1648,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1649,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
1650,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
1651,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1652,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jre/alpine/Dockerfile,#!/bin/sh'; \
1653,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1654,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1655,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
1656,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1657,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
1658,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,# backwards compatibility shim
1659,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1660,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1661,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
1662,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,# arm64v8
1663,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,# amd64
1664,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,# fallback
1665,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1666,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
1667,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1668,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1669,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1670,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,# basic smoke test
1671,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1672,9a0822673dffd3e5ba66f18a8547aa60faed6d08,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1673,9a0822673dffd3e5ba66f18a8547aa60faed6d08,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1674,9a0822673dffd3e5ba66f18a8547aa60faed6d08,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
1675,9a0822673dffd3e5ba66f18a8547aa60faed6d08,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1676,9a0822673dffd3e5ba66f18a8547aa60faed6d08,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
1677,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1678,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1679,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
1680,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1681,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,#!/bin/sh'; \
1682,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1683,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
1684,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1685,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1686,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1687,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
1688,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1689,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1690,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
1691,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1692,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
1693,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,# backwards compatibility shim
1694,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1695,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1696,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1697,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
1698,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1699,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1700,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1701,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,# basic smoke test
1702,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1703,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1704,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
1705,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
1706,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1707,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
1708,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1709,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1710,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1711,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1712,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1713,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1714,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1715,b734af2a8ee4697604035d14064fb7f3b1d5f050,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1716,b734af2a8ee4697604035d14064fb7f3b1d5f050,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1717,b734af2a8ee4697604035d14064fb7f3b1d5f050,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
1718,b734af2a8ee4697604035d14064fb7f3b1d5f050,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1719,b734af2a8ee4697604035d14064fb7f3b1d5f050,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
1720,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1721,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1722,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1723,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1724,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1725,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1726,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
1727,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
1728,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
1729,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1730,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/oracle/Dockerfile,# basic smoke test
1731,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
1732,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
1733,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1734,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
1735,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1736,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
1737,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1738,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/oracle/Dockerfile,# basic smoke test
1739,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
1740,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1741,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
1742,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1743,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
1744,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,# backwards compatibility shim
1745,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1746,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,# https://jdk.java.net/
1747,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1748,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
1749,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1750,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1751,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1752,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,# basic smoke test
1753,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1754,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1755,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
1756,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
1757,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1758,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,#!/bin/sh'; \
1759,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1760,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1761,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-reccomends:
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
1762,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1763,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1764,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1765,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1766,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1767,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
1768,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
1769,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1770,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jre/alpine/Dockerfile,#!/bin/sh'; \
1771,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1772,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1773,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
1774,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
1775,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1776,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,#!/bin/sh'; \
1777,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1778,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1779,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
1780,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1781,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1782,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1783,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1784,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1785,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1786,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1787,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1788,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
1789,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1790,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1791,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1792,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
1793,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1794,c7846edc14a25304288c85e2e7bebe4609626512,/7/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1795,c7846edc14a25304288c85e2e7bebe4609626512,/7/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
1796,c7846edc14a25304288c85e2e7bebe4609626512,/7/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
1797,c7846edc14a25304288c85e2e7bebe4609626512,/7/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1798,c7846edc14a25304288c85e2e7bebe4609626512,/7/jre/alpine/Dockerfile,#!/bin/sh'; \
1799,c7846edc14a25304288c85e2e7bebe4609626512,/7/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1800,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1801,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1802,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1803,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
1804,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1805,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1806,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
1807,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
1808,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
1809,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
1810,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/oracle/Dockerfile,# basic smoke test
1811,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
1812,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1813,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1814,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
1815,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1816,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jre/Dockerfile,#!/bin/sh'; \
1817,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1818,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1819,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
1820,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
1821,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1822,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
1823,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1824,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1825,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1826,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1827,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1828,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1829,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1830,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1831,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1832,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
1833,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1834,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1835,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1836,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1837,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
1838,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1839,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1840,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1841,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
1842,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1843,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1844,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
1845,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
1846,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1847,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/Dockerfile,#!/bin/sh'; \
1848,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1849,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1850,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1851,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1852,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1853,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1854,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1855,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1856,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
1857,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
1858,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
1859,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1860,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1861,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1862,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
1863,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1864,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1865,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
1866,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
1867,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1868,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,#!/bin/sh'; \
1869,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1870,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
1871,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1872,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1873,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1874,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1875,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
1876,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1877,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1878,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
1879,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
1880,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1881,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/Dockerfile,#!/bin/sh'; \
1882,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1883,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1884,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1885,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1886,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1887,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1888,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1889,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
1890,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
1891,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1892,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
1893,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1894,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1895,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1896,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1897,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
1898,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1899,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1900,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
1901,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
1902,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
1903,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
1904,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/oracle/Dockerfile,# basic smoke test
1905,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
1906,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1907,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1908,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1909,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1809/Dockerfile,# http://jdk.java.net/
1910,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1911,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1912,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1913,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1914,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
1915,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1916,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1917,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
1918,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,# Default to UTF-8 file.encoding
1919,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1920,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,#!/bin/sh'; \
1921,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1922,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1923,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
1924,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1925,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1926,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1927,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1928,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1929,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1930,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1931,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1932,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
1933,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1934,5527e8e319a1451b9e302af846b9939da36d8992,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1935,5527e8e319a1451b9e302af846b9939da36d8992,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1936,5527e8e319a1451b9e302af846b9939da36d8992,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1937,5527e8e319a1451b9e302af846b9939da36d8992,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
1938,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
1939,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
1940,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
1941,0467df283134a79840c25808093c00f7c94b9a88,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1942,0467df283134a79840c25808093c00f7c94b9a88,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1943,0467df283134a79840c25808093c00f7c94b9a88,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
1944,0467df283134a79840c25808093c00f7c94b9a88,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1945,0467df283134a79840c25808093c00f7c94b9a88,/9-jdk/Dockerfile,#!/bin/sh'; \
1946,0467df283134a79840c25808093c00f7c94b9a88,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1947,0467df283134a79840c25808093c00f7c94b9a88,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1948,0467df283134a79840c25808093c00f7c94b9a88,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1949,0467df283134a79840c25808093c00f7c94b9a88,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1950,0467df283134a79840c25808093c00f7c94b9a88,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1951,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1952,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
1953,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
1954,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
1955,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1956,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/oracle/Dockerfile,# basic smoke test
1957,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
1958,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1959,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1960,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1961,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
1962,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1963,50c491c7c2378182866d89e857eb1f0c77985507,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1964,50c491c7c2378182866d89e857eb1f0c77985507,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1965,50c491c7c2378182866d89e857eb1f0c77985507,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
1966,50c491c7c2378182866d89e857eb1f0c77985507,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1967,50c491c7c2378182866d89e857eb1f0c77985507,/9-jdk/Dockerfile,#!/bin/sh'; \
1968,50c491c7c2378182866d89e857eb1f0c77985507,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1969,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1970,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
1971,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,# backwards compatibility shim
1972,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1973,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
1974,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
1975,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
1976,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,# arm64v8
1977,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,# amd64
1978,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,# fallback
1979,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
1980,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
1981,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
1982,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1983,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
1984,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1985,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1986,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,# basic smoke test
1987,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1988,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1989,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1990,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
1991,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1992,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1993,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1994,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1995,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1996,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1997,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1998,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
1999,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
2000,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2001,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jdk/alpine/Dockerfile,#!/bin/sh'; \
2002,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2003,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2004,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
2005,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
2006,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2007,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
2008,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2009,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2010,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2011,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2012,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2013,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2014,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2015,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
2016,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
2017,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2018,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2019,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2020,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
2021,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,# backwards compatibility shim
2022,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2023,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
2024,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
2025,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
2026,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
2027,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
2028,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2029,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,#!/usr/bin/env bash'; \
2030,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2031,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,# basic smoke test
2032,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2033,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
2034,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
2035,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
2036,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2037,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/oracle/Dockerfile,# basic smoke test
2038,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
2039,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
2040,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
2041,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2042,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2043,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2044,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2045,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
2046,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2047,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
2048,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2049,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
2050,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
2051,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
2052,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,# arm64v8
2053,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,# amd64
2054,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,# fallback
2055,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
2056,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2057,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,# basic smoke test
2058,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
2059,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2060,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2061,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
2062,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2063,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jdk/Dockerfile,#!/bin/sh'; \
2064,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2065,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2066,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
2067,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
2068,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2069,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jre/alpine/Dockerfile,#!/bin/sh'; \
2070,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2071,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
2072,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/nanoserver-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
2073,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/nanoserver-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
2074,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2075,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2076,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2077,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
2078,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2079,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2080,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2081,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
2082,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
2083,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
2084,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2085,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2086,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2087,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
2088,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2089,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2090,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2091,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
2092,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2093,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2094,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
2095,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,# backwards compatibility shim
2096,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2097,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
2098,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
2099,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
2100,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
2101,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
2102,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2103,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
2104,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2105,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2106,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,# basic smoke test
2107,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2108,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
2109,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
2110,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2111,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2112,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2113,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2114,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
2115,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2116,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2117,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2118,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
2119,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,# backwards compatibility shim
2120,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2121,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
2122,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
2123,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
2124,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,# arm64v8
2125,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,# amd64
2126,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,# fallback
2127,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
2128,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
2129,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
2130,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2131,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
2132,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2133,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2134,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,# basic smoke test
2135,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2136,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2137,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/7-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2138,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/7-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
2139,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2140,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/7-jre/alpine/Dockerfile,#!/bin/sh'; \
2141,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2142,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2143,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-7-jre/Dockerfile,# Default to UTF-8 file.encoding
2144,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2145,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2146,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
2147,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
2148,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2149,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,#!/bin/sh'; \
2150,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2151,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2152,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
2153,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
2154,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2155,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2156,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2157,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2158,930076b47e3a318fa0428c39579fe00f36e3b8b0,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2159,930076b47e3a318fa0428c39579fe00f36e3b8b0,/openjdk-7-jre/Dockerfile,# Default to UTF-8 file.encoding
2160,930076b47e3a318fa0428c39579fe00f36e3b8b0,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2161,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2162,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
2163,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,# backwards compatibility shim
2164,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2165,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
2166,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
2167,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,# arm64v8
2168,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,# amd64
2169,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,# fallback
2170,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2171,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
2172,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2173,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2174,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2175,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,# basic smoke test
2176,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2177,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
2178,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/nanoserver-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
2179,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/nanoserver-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
2180,9089afd69bd69c34413b064bc36c15509b2ed4df,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2181,9089afd69bd69c34413b064bc36c15509b2ed4df,/7-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2182,9089afd69bd69c34413b064bc36c15509b2ed4df,/7-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
2183,9089afd69bd69c34413b064bc36c15509b2ed4df,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2184,9089afd69bd69c34413b064bc36c15509b2ed4df,/7-jre/alpine/Dockerfile,#!/bin/sh'; \
2185,fdf3bb8d168120655fe39e4098713e704db809df,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2186,fdf3bb8d168120655fe39e4098713e704db809df,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2187,fdf3bb8d168120655fe39e4098713e704db809df,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
2188,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2189,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
2190,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
2191,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2192,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,#!/bin/sh'; \
2193,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2194,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
2195,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2196,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2197,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2198,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2199,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
2200,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2201,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2202,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2203,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2204,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
2205,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2206,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2207,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
2208,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
2209,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2210,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/Dockerfile,#!/bin/sh'; \
2211,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2212,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2213,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2214,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2215,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2216,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2217,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2218,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2219,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
2220,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,# backwards compatibility shim
2221,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2222,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
2223,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
2224,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
2225,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
2226,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
2227,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2228,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,#!/usr/bin/env bash'; \
2229,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2230,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2231,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,# basic smoke test
2232,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2233,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2234,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2235,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
2236,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
2237,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
2238,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2239,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2240,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jdk/Dockerfile,# Default to UTF-8 file.encoding
2241,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2242,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jdk/Dockerfile,#!/bin/bash'; \
2243,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
2244,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
2245,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2246,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2247,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2248,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2249,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
2250,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2251,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2252,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
2253,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2254,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
2255,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,# backwards compatibility shim
2256,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2257,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,# https://jdk.java.net/
2258,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2259,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
2260,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2261,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2262,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2263,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,# basic smoke test
2264,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2265,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2266,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2267,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2268,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
2269,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2270,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2271,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2272,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2273,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
2274,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2275,d368a4f37bed4dc5d0b61ec889c8e7bad438eacf,/13/jdk/alpine/Dockerfile,# https://jdk.java.net/
2276,d368a4f37bed4dc5d0b61ec889c8e7bad438eacf,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
2277,d368a4f37bed4dc5d0b61ec889c8e7bad438eacf,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2278,d368a4f37bed4dc5d0b61ec889c8e7bad438eacf,/13/jdk/alpine/Dockerfile,# basic smoke test
2279,d368a4f37bed4dc5d0b61ec889c8e7bad438eacf,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
2280,9745c87a15896ec558429a826e23926e721e4846,/8-jdk/windows/nanoserver/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2281,9745c87a15896ec558429a826e23926e721e4846,/8-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2282,9745c87a15896ec558429a826e23926e721e4846,/8-jdk/windows/nanoserver/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
2283,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2284,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
2285,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
2286,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2287,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jdk/alpine/Dockerfile,#!/bin/sh'; \
2288,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2289,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2290,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2291,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
2292,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,# backwards compatibility shim
2293,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2294,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
2295,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
2296,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
2297,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
2298,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
2299,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2300,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,#!/usr/bin/env bash'; \
2301,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2302,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2303,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,# basic smoke test
2304,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2305,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-6-jdk/Dockerfile,# Default to UTF-8 file.encoding
2306,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2307,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2308,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
2309,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,# Default to UTF-8 file.encoding
2310,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2311,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,#!/bin/sh'; \
2312,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2313,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2314,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
2315,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2316,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2317,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2318,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2319,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2320,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2321,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
2322,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
2323,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2324,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,#!/bin/sh'; \
2325,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2326,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
2327,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2328,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2329,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2330,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2331,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
2332,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2333,37ac51ae06458726bfd2d5e2286232d9ca07a8a5,/12/jdk/alpine/Dockerfile,# http://jdk.java.net/
2334,37ac51ae06458726bfd2d5e2286232d9ca07a8a5,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
2335,37ac51ae06458726bfd2d5e2286232d9ca07a8a5,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
2336,37ac51ae06458726bfd2d5e2286232d9ca07a8a5,/12/jdk/alpine/Dockerfile,# basic smoke test
2337,37ac51ae06458726bfd2d5e2286232d9ca07a8a5,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
2338,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2339,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2340,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
2341,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2342,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2343,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2344,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
2345,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,# backwards compatibility shim
2346,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2347,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
2348,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
2349,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
2350,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
2351,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
2352,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2353,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,#!/usr/bin/env bash'; \
2354,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2355,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2356,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,# basic smoke test
2357,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
2358,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/nanoserver-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
2359,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/nanoserver-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
2360,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2361,8502712f6e80904b766505805c894c2008afa700,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2362,8502712f6e80904b766505805c894c2008afa700,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
2363,8502712f6e80904b766505805c894c2008afa700,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
2364,8502712f6e80904b766505805c894c2008afa700,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
2365,8502712f6e80904b766505805c894c2008afa700,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
2366,8502712f6e80904b766505805c894c2008afa700,/12/jdk/oracle/Dockerfile,# basic smoke test
2367,8502712f6e80904b766505805c894c2008afa700,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
2368,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2369,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2370,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
2371,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2372,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jre/Dockerfile,#!/bin/sh'; \
2373,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
2374,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2375,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2376,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2377,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
2378,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2379,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2380,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
2381,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,# Default to UTF-8 file.encoding
2382,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2383,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,#!/bin/sh'; \
2384,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2385,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2386,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
2387,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2388,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2389,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2390,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2391,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2392,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2393,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
2394,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2395,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,# Default to UTF-8 file.encoding
2396,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,# backwards compatibility shim
2397,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2398,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
2399,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
2400,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,# arm64v8
2401,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,# amd64
2402,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,# fallback
2403,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2404,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,#!/usr/bin/env bash'; \
2405,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2406,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2407,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2408,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,# basic smoke test
2409,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2410,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2411,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2412,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2413,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
2414,d7094b23b9c6957d72d2af540f866ec4a751ae71,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2415,d7094b23b9c6957d72d2af540f866ec4a751ae71,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
2416,d7094b23b9c6957d72d2af540f866ec4a751ae71,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
2417,d7094b23b9c6957d72d2af540f866ec4a751ae71,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2418,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2419,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
2420,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
2421,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2422,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/slim/Dockerfile,#!/bin/sh'; \
2423,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2424,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2425,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2426,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2427,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2428,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2429,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2430,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2431,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2432,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
2433,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2434,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2435,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2436,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2437,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
2438,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2439,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2440,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
2441,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
2442,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2443,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,#!/bin/sh'; \
2444,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2445,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2446,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
2447,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2448,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2449,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2450,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2451,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2452,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2453,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2454,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
2455,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2456,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2457,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2458,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2459,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
2460,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2461,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2462,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2463,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
2464,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2465,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2466,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
2467,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
2468,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
2469,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2470,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/oracle/Dockerfile,# basic smoke test
2471,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
2472,47a6539cd18023dafb45db9013455136cc0bca07,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2473,47a6539cd18023dafb45db9013455136cc0bca07,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
2474,47a6539cd18023dafb45db9013455136cc0bca07,/8/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
2475,47a6539cd18023dafb45db9013455136cc0bca07,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2476,47a6539cd18023dafb45db9013455136cc0bca07,/8/jre/alpine/Dockerfile,#!/bin/sh'; \
2477,47a6539cd18023dafb45db9013455136cc0bca07,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2478,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2479,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
2480,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,# backwards compatibility shim
2481,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2482,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
2483,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
2484,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,# arm64v8
2485,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,# amd64
2486,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,# fallback
2487,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2488,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
2489,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2490,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2491,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2492,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,# basic smoke test
2493,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2494,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2495,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2496,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2497,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
2498,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2499,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2500,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2501,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2502,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
2503,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2504,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2505,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2506,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
2507,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2508,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jre/Dockerfile,#!/bin/sh'; \
2509,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2510,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2511,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
2512,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,# backwards compatibility shim
2513,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2514,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
2515,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
2516,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
2517,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
2518,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
2519,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2520,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
2521,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2522,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2523,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,# basic smoke test
2524,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2525,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2526,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
2527,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
2528,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2529,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2530,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2531,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jre/Dockerfile,# Default to UTF-8 file.encoding
2532,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2533,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jre/Dockerfile,#!/bin/sh'; \
2534,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2535,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
2536,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/nanoserver-1809/Dockerfile,# https://jdk.java.net/
2537,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2538,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2539,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2540,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2541,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
2542,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2543,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2544,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2545,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2546,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
2547,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2548,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2549,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
2550,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,# backwards compatibility shim
2551,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2552,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
2553,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
2554,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
2555,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,# amd64
2556,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,# fallback
2557,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
2558,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
2559,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
2560,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2561,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
2562,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2563,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2564,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,# basic smoke test
2565,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2566,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
2567,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,# backwards compatibility shim
2568,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2569,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
2570,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
2571,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,# amd64
2572,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,# fallback
2573,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2574,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
2575,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2576,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2577,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2578,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,# basic smoke test
2579,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2580,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
2581,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jre/windows/nanoserver-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
2582,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jre/windows/nanoserver-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
2583,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2584,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2585,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
2586,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2587,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
2588,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2589,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
2590,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,# backwards compatibility shim
2591,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2592,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
2593,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
2594,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,# amd64
2595,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,# fallback
2596,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2597,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
2598,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2599,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2600,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2601,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,# basic smoke test
2602,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2603,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2604,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2605,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
2606,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2607,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jre/Dockerfile,#!/bin/sh'; \
2608,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2609,6cc25ee35281099423e521713f710d2549209600,/6/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2610,6cc25ee35281099423e521713f710d2549209600,/6/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2611,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2612,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
2613,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,# backwards compatibility shim
2614,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2615,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
2616,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2617,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
2618,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2619,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2620,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2621,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,# basic smoke test
2622,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2623,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
2624,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
2625,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2626,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
2627,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
2628,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
2629,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2630,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/oracle/Dockerfile,# basic smoke test
2631,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
2632,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2633,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2634,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
2635,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2636,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
2637,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
2638,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2639,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/slim/Dockerfile,#!/bin/sh'; \
2640,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2641,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2642,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2643,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2644,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2645,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2646,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2647,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2648,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2649,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
2650,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2651,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2652,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
2653,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,# backwards compatibility shim
2654,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2655,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
2656,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2657,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
2658,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2659,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2660,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2661,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,# basic smoke test
2662,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2663,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
2664,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2665,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2666,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
2667,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2668,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jre/Dockerfile,#!/bin/sh'; \
2669,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2670,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2671,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2672,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2673,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2674,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2675,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2676,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2677,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
2678,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2679,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2680,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
2681,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
2682,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2683,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,#!/bin/sh'; \
2684,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2685,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
2686,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2687,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2688,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2689,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2690,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
2691,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2692,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
2693,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
2694,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2695,fdf3bb8d168120655fe39e4098713e704db809df,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2696,fdf3bb8d168120655fe39e4098713e704db809df,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2697,fdf3bb8d168120655fe39e4098713e704db809df,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2698,fdf3bb8d168120655fe39e4098713e704db809df,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
2699,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2700,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
2701,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,# backwards compatibility shim
2702,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2703,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
2704,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
2705,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
2706,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
2707,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
2708,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2709,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
2710,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2711,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2712,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,# basic smoke test
2713,6294b7d4b299639ec519dfd92782632f498eb1d2,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2714,6294b7d4b299639ec519dfd92782632f498eb1d2,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2715,6294b7d4b299639ec519dfd92782632f498eb1d2,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
2716,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2717,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
2718,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
2719,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2720,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,#!/bin/sh'; \
2721,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2722,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2723,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2724,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2725,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2726,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2727,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2728,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2729,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
2730,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2731,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
2732,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,# backwards compatibility shim
2733,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2734,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
2735,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2736,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
2737,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2738,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2739,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2740,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,# basic smoke test
2741,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2742,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/8-jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2743,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2744,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2745,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/8-jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
2746,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2747,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
2748,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
2749,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
2750,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2751,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/oracle/Dockerfile,# basic smoke test
2752,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
2753,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2754,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
2755,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
2756,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
2757,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2758,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/oracle/Dockerfile,# basic smoke test
2759,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
2760,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
2761,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/nanoserver-1803/Dockerfile,# https://jdk.java.net/
2762,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2763,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2764,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
2765,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
2766,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2767,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jdk/alpine/Dockerfile,#!/bin/sh'; \
2768,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2769,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2770,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
2771,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/Dockerfile,# Default to UTF-8 file.encoding
2772,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2773,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/Dockerfile,#!/bin/sh'; \
2774,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2775,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2776,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2777,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2778,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2779,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2780,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2781,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2782,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jdk/Dockerfile,# Default to UTF-8 file.encoding
2783,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2784,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jdk/Dockerfile,#!/bin/bash'; \
2785,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
2786,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
2787,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2788,4c0594da82d2528637a9345938ee92396fd73d4b,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2789,4c0594da82d2528637a9345938ee92396fd73d4b,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
2790,4c0594da82d2528637a9345938ee92396fd73d4b,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
2791,4c0594da82d2528637a9345938ee92396fd73d4b,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
2792,4c0594da82d2528637a9345938ee92396fd73d4b,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586"
2793,4c0594da82d2528637a9345938ee92396fd73d4b,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2794,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2795,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2796,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2797,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
2798,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2799,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2800,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2801,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2802,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
2803,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2804,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2805,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2806,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2807,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2808,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2809,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
2810,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2811,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2812,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2813,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
2814,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,# backwards compatibility shim
2815,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2816,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
2817,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
2818,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
2819,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
2820,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
2821,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2822,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,#!/usr/bin/env bash'; \
2823,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2824,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2825,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,# basic smoke test
2826,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2827,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2828,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2829,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
2830,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2831,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jdk/Dockerfile,#!/bin/sh'; \
2832,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2833,15835397954c9ec123e42e685035ecd239e0a1db,/11/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
2834,15835397954c9ec123e42e685035ecd239e0a1db,/11/jdk/windows/nanoserver-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
2835,15835397954c9ec123e42e685035ecd239e0a1db,/11/jdk/windows/nanoserver-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
2836,15835397954c9ec123e42e685035ecd239e0a1db,/11/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2837,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2838,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
2839,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
2840,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2841,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,#!/bin/sh'; \
2842,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2843,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2844,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
2845,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2846,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2847,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2848,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2849,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2850,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2851,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2852,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
2853,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2854,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jre/Dockerfile,#!/bin/sh'; \
2855,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2856,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2857,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2858,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
2859,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
2860,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
2861,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2862,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2863,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2864,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
2865,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2866,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2867,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2868,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
2869,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2870,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jdk/Dockerfile,#!/bin/sh'; \
2871,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
2872,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
2873,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2874,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2875,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
2876,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,# backwards compatibility shim
2877,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2878,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,# https://jdk.java.net/
2879,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2880,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
2881,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2882,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2883,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2884,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,# basic smoke test
2885,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2886,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
2887,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2888,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
2889,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
2890,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2891,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,#!/bin/sh'; \
2892,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2893,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2894,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2895,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2896,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2897,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2898,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2899,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
2900,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2901,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
2902,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
2903,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
2904,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2905,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/oracle/Dockerfile,# basic smoke test
2906,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
2907,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2908,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2909,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
2910,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2911,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2912,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
2913,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
2914,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2915,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,#!/bin/sh'; \
2916,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2917,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
2918,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2919,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2920,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2921,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2922,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
2923,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2924,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2925,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2926,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2927,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
2928,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2929,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
2930,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
2931,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2932,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2933,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2934,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2935,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1809/Dockerfile,# http://jdk.java.net/
2936,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2937,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2938,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2939,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
2940,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
2941,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
2942,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2943,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
2944,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
2945,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2946,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
2947,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2948,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2949,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (a case of https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
2950,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2951,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2952,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2953,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2954,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2955,2057305e0474ebf6461daea607ff02874d690914,/7/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2956,2057305e0474ebf6461daea607ff02874d690914,/7/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
2957,2057305e0474ebf6461daea607ff02874d690914,/7/jre/Dockerfile,# Default to UTF-8 file.encoding
2958,2057305e0474ebf6461daea607ff02874d690914,/7/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2959,2057305e0474ebf6461daea607ff02874d690914,/7/jre/Dockerfile,#!/bin/sh'; \
2960,2057305e0474ebf6461daea607ff02874d690914,/7/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2961,2057305e0474ebf6461daea607ff02874d690914,/7/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2962,2057305e0474ebf6461daea607ff02874d690914,/7/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2963,2057305e0474ebf6461daea607ff02874d690914,/7/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2964,2057305e0474ebf6461daea607ff02874d690914,/7/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2965,2057305e0474ebf6461daea607ff02874d690914,/7/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2966,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2967,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2968,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2969,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
2970,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2971,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/8/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2972,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2973,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/8/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
2974,41b92f2f30079cd364e9619d1fd4633ef138dca4,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2975,41b92f2f30079cd364e9619d1fd4633ef138dca4,/openjdk-7-jre/Dockerfile,# Default to UTF-8 file.encoding
2976,41b92f2f30079cd364e9619d1fd4633ef138dca4,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2977,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2978,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2979,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2980,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
2981,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2982,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2983,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
2984,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
2985,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2986,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,#!/bin/sh'; \
2987,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2988,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2989,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2990,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2991,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2992,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2993,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2994,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2995,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2996,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2997,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
2998,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2999,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3000,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
3001,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
3002,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3003,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jdk/alpine/Dockerfile,#!/bin/sh'; \
3004,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3005,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3006,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3007,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
3008,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
3009,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
3010,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
3011,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3012,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
3013,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3014,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
3015,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3016,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/oracle/Dockerfile,# basic smoke test
3017,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
3018,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
3019,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3020,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
3021,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3022,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
3023,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3024,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/oracle/Dockerfile,# basic smoke test
3025,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
3026,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3027,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3028,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3029,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
3030,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3031,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3032,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
3033,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,# backwards compatibility shim
3034,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3035,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3036,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
3037,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,# arm64v8
3038,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,# amd64
3039,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,# fallback
3040,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3041,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
3042,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3043,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3044,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3045,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,# basic smoke test
3046,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3047,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3048,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3049,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3050,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
3051,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3052,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/8-jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3053,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3054,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/8-jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
3055,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3056,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3057,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3058,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
3059,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
3060,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3061,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
3062,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3063,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
3064,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3065,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/oracle/Dockerfile,# basic smoke test
3066,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
3067,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3068,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
3069,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,# backwards compatibility shim
3070,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3071,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3072,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3073,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
3074,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3075,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3076,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3077,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,# basic smoke test
3078,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3079,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
3080,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3081,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
3082,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
3083,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3084,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jdk/alpine/Dockerfile,#!/bin/sh'; \
3085,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3086,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3087,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3088,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
3089,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3090,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3091,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
3092,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3093,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jre/Dockerfile,#!/bin/sh'; \
3094,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3095,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3096,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3097,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3098,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
3099,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3100,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3101,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3102,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3103,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3104,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3105,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3106,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3107,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3108,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
3109,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3110,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3111,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3112,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3113,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
3114,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3115,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3116,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3117,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3118,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3119,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3120,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3121,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3122,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
3123,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3124,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jdk/Dockerfile,#!/bin/sh'; \
3125,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3126,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3127,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
3128,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,# backwards compatibility shim
3129,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3130,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,# https://jdk.java.net/
3131,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3132,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
3133,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3134,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3135,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3136,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,# basic smoke test
3137,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3138,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
3139,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3140,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3141,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3142,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
3143,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3144,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3145,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3146,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3147,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
3148,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3149,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3150,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3151,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
3152,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
3153,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
3154,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3155,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
3156,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,# backwards compatibility shim
3157,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3158,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
3159,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
3160,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
3161,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
3162,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
3163,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3164,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
3165,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3166,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3167,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,# basic smoke test
3168,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3169,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
3170,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3171,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,# Default to UTF-8 file.encoding
3172,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,# backwards compatibility shim
3173,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3174,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,# https://jdk.java.net/
3175,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3176,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,#!/usr/bin/env bash'; \
3177,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3178,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3179,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3180,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,# basic smoke test
3181,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3182,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3183,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3184,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3185,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
3186,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3187,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3188,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3189,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3190,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
3191,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3192,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3193,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3194,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
3195,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,# backwards compatibility shim
3196,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3197,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
3198,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
3199,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
3200,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
3201,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
3202,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3203,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,#!/usr/bin/env bash'; \
3204,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3205,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3206,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,# basic smoke test
3207,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3208,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3209,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
3210,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
3211,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3212,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/Dockerfile,#!/bin/sh'; \
3213,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3214,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3215,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3216,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3217,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3218,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3219,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3220,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3221,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
3222,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3223,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3224,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-7-jdk/Dockerfile,# Default to UTF-8 file.encoding
3225,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3226,882461ade8207de7647d083009200de85eb978bc,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3227,882461ade8207de7647d083009200de85eb978bc,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3228,882461ade8207de7647d083009200de85eb978bc,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
3229,882461ade8207de7647d083009200de85eb978bc,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3230,882461ade8207de7647d083009200de85eb978bc,/7-jdk/Dockerfile,#!/bin/sh'; \
3231,882461ade8207de7647d083009200de85eb978bc,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3232,882461ade8207de7647d083009200de85eb978bc,/7-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3233,882461ade8207de7647d083009200de85eb978bc,/7-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3234,882461ade8207de7647d083009200de85eb978bc,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3235,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3236,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
3237,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
3238,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3239,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/slim/Dockerfile,#!/bin/sh'; \
3240,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3241,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3242,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3243,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3244,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3245,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3246,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3247,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3248,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3249,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
3250,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3251,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/windows/nanoserver/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3252,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3253,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/windows/nanoserver/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
3254,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/windows/nanoserver/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3255,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3256,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
3257,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
3258,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3259,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,#!/bin/sh'; \
3260,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3261,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
3262,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3263,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3264,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3265,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3266,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
3267,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3268,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3269,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3270,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3271,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3272,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3273,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3274,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3275,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3276,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
3277,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3278,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3279,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3280,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3281,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
3282,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3283,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3284,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3285,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3286,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3287,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3288,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3289,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3290,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
3291,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
3292,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
3293,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3294,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3295,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3296,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3297,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
3298,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3299,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3300,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3301,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
3302,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3303,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3304,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3305,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
3306,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3307,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3308,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
3309,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
3310,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3311,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,#!/bin/sh'; \
3312,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3313,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3314,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
3315,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3316,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3317,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3318,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3319,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3320,e9243a2c830d88c2684cbe2949def5984c5033d6,/16/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3321,e9243a2c830d88c2684cbe2949def5984c5033d6,/16/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
3322,e9243a2c830d88c2684cbe2949def5984c5033d6,/16/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3323,e9243a2c830d88c2684cbe2949def5984c5033d6,/16/jdk/alpine/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
3324,e9243a2c830d88c2684cbe2949def5984c5033d6,/16/jdk/alpine/Dockerfile,# basic smoke test
3325,e9243a2c830d88c2684cbe2949def5984c5033d6,/16/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
3326,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3327,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3328,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
3329,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3330,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jdk/Dockerfile,#!/bin/bash'; \
3331,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3332,4016bc190db90b9254f01ea808a91981f50500a2,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3333,4016bc190db90b9254f01ea808a91981f50500a2,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3334,4016bc190db90b9254f01ea808a91981f50500a2,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
3335,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3336,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3337,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3338,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1809/Dockerfile,# http://jdk.java.net/
3339,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3340,ef8af39fafdaaf4eeb8137c194aa8a51f8c56334,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3341,ef8af39fafdaaf4eeb8137c194aa8a51f8c56334,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3342,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3343,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
3344,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
3345,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
3346,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
3347,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/oracle/Dockerfile,# basic smoke test
3348,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
3349,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3350,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3351,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,# Default to UTF-8 file.encoding
3352,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,# backwards compatibility shim
3353,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3354,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
3355,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
3356,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
3357,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,# amd64
3358,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,# fallback
3359,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
3360,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
3361,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
3362,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3363,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,#!/usr/bin/env bash'; \
3364,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3365,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3366,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,# basic smoke test
3367,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3368,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3369,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3370,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
3371,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3372,d93be18f4f2d5e8457169cac00e559d953b6028e,/12/jdk/alpine/Dockerfile,# https://jdk.java.net/
3373,d93be18f4f2d5e8457169cac00e559d953b6028e,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
3374,d93be18f4f2d5e8457169cac00e559d953b6028e,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3375,d93be18f4f2d5e8457169cac00e559d953b6028e,/12/jdk/alpine/Dockerfile,# basic smoke test
3376,d93be18f4f2d5e8457169cac00e559d953b6028e,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
3377,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3378,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
3379,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,# backwards compatibility shim
3380,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3381,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3382,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
3383,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,# amd64
3384,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,# fallback
3385,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3386,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
3387,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3388,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3389,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3390,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,# basic smoke test
3391,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3392,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3393,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3394,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
3395,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3396,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jdk/alpine/Dockerfile,#!/bin/sh'; \
3397,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
3398,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/nanoserver-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3399,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3400,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3401,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
3402,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/Dockerfile,# backwards compatibility shim
3403,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3404,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
3405,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
3406,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
3407,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
3408,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
3409,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/Dockerfile,# basic smoke test
3410,a080def2a36003e85485d07b3f047bd3c91508c2,/8-jdk/windows/windowsservercore/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3411,a080def2a36003e85485d07b3f047bd3c91508c2,/8-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3412,a080def2a36003e85485d07b3f047bd3c91508c2,/8-jdk/windows/windowsservercore/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
3413,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3414,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
3415,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
3416,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3417,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,#!/bin/sh'; \
3418,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3419,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3420,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3421,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3422,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3423,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3424,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3425,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3426,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
3427,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3428,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
3429,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,# backwards compatibility shim
3430,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3431,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3432,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
3433,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,# arm64v8
3434,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,# amd64
3435,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,# fallback
3436,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3437,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
3438,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3439,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3440,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3441,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,# basic smoke test
3442,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3443,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3444,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3445,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
3446,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3447,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3448,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
3449,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/Dockerfile,# Default to UTF-8 file.encoding
3450,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3451,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/Dockerfile,#!/bin/sh'; \
3452,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3453,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3454,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3455,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3456,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3457,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3458,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3459,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
3460,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/oracle/Dockerfile,# https://jdk.java.net/
3461,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
3462,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3463,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/oracle/Dockerfile,# basic smoke test
3464,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
3465,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3466,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-8-jdk/Dockerfile,# Default to UTF-8 file.encoding
3467,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
3468,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
3469,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3470,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3471,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
3472,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3473,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
3474,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,# backwards compatibility shim
3475,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3476,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
3477,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
3478,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,# arm64v8
3479,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,# amd64
3480,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,# fallback
3481,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3482,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
3483,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3484,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3485,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3486,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,# basic smoke test
3487,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3488,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3489,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
3490,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
3491,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3492,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,#!/bin/sh'; \
3493,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3494,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3495,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
3496,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
3497,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3498,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3499,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3500,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3501,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3502,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3503,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3504,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
3505,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3506,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3507,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3508,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
3509,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3510,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jre/Dockerfile,#!/bin/sh'; \
3511,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3512,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3513,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3514,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3515,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3516,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3517,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3518,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
3519,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3520,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jre/Dockerfile,#!/bin/sh'; \
3521,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3522,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3523,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3524,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3525,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
3526,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3527,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3528,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
3529,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,# backwards compatibility shim
3530,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3531,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
3532,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
3533,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
3534,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
3535,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
3536,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3537,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
3538,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3539,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,# basic smoke test
3540,fb0dd5fe5842959f774c60da6195e2d61b813fdd,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3541,fb0dd5fe5842959f774c60da6195e2d61b813fdd,/7-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3542,fb0dd5fe5842959f774c60da6195e2d61b813fdd,/7-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
3543,fb0dd5fe5842959f774c60da6195e2d61b813fdd,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3544,fb0dd5fe5842959f774c60da6195e2d61b813fdd,/7-jdk/alpine/Dockerfile,#!/bin/sh'; \
3545,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3546,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3547,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3548,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
3549,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3550,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
3551,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
3552,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3553,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3554,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
3555,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
3556,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
3557,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3558,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/oracle/Dockerfile,# basic smoke test
3559,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
3560,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3561,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
3562,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,# Default to UTF-8 file.encoding
3563,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3564,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,#!/bin/sh'; \
3565,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3566,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3567,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
3568,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3569,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3570,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3571,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3572,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3573,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3574,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3575,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
3576,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,# backwards compatibility shim
3577,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3578,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
3579,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
3580,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
3581,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
3582,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
3583,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3584,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,#!/usr/bin/env bash'; \
3585,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3586,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3587,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,# basic smoke test
3588,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3589,882461ade8207de7647d083009200de85eb978bc,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3590,882461ade8207de7647d083009200de85eb978bc,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3591,882461ade8207de7647d083009200de85eb978bc,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
3592,882461ade8207de7647d083009200de85eb978bc,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3593,882461ade8207de7647d083009200de85eb978bc,/8-jdk/Dockerfile,#!/bin/sh'; \
3594,882461ade8207de7647d083009200de85eb978bc,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
3595,882461ade8207de7647d083009200de85eb978bc,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3596,882461ade8207de7647d083009200de85eb978bc,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3597,882461ade8207de7647d083009200de85eb978bc,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3598,882461ade8207de7647d083009200de85eb978bc,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
3599,882461ade8207de7647d083009200de85eb978bc,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3600,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3601,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3602,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3603,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
3604,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3605,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3606,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3607,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3608,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
3609,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3610,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/alpine3.12/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
3611,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/alpine3.12/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
3612,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/alpine3.12/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
3613,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/alpine3.12/Dockerfile,# amd64
3614,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/alpine3.12/Dockerfile,# fallback
3615,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/alpine3.12/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
3616,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/alpine3.12/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3617,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/alpine3.12/Dockerfile,# basic smoke test
3618,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/alpine3.12/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3619,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3620,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
3621,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
3622,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3623,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
3624,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3625,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3626,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3627,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3628,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3629,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3630,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3631,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3632,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
3633,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
3634,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
3635,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3636,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
3637,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3638,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3639,ef8af39fafdaaf4eeb8137c194aa8a51f8c56334,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3640,ef8af39fafdaaf4eeb8137c194aa8a51f8c56334,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3641,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
3642,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3643,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
3644,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
3645,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
3646,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,# arm64v8
3647,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,# amd64
3648,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,# fallback
3649,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
3650,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3651,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
3652,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,# basic smoke test
3653,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3654,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3655,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3656,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
3657,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3658,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3659,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3660,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
3661,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3662,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/Dockerfile,#!/bin/bash'; \
3663,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
3664,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
3665,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3666,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3667,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
3668,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3669,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
3670,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,# backwards compatibility shim
3671,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3672,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
3673,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
3674,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,# arm64v8
3675,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,# amd64
3676,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,# fallback
3677,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3678,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
3679,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3680,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3681,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3682,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,# basic smoke test
3683,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3684,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3685,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3686,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3687,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
3688,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3689,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3690,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
3691,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
3692,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3693,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/Dockerfile,#!/bin/sh'; \
3694,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3695,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3696,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3697,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3698,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3699,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3700,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
3701,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/nanoserver-1809/Dockerfile,# https://jdk.java.net/
3702,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3703,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3704,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3705,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
3706,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3707,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jre/Dockerfile,#!/bin/sh'; \
3708,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3709,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3710,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3711,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3712,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3713,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3714,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3715,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3716,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
3717,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
3718,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
3719,5257acb51a1230a2dc46b1c349d674a725562f9d,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3720,5257acb51a1230a2dc46b1c349d674a725562f9d,/7-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3721,5257acb51a1230a2dc46b1c349d674a725562f9d,/7-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
3722,5257acb51a1230a2dc46b1c349d674a725562f9d,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3723,5257acb51a1230a2dc46b1c349d674a725562f9d,/7-jre/alpine/Dockerfile,#!/bin/sh'; \
3724,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3725,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
3726,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
3727,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3728,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
3729,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3730,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3731,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3732,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3733,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3734,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3735,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3736,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3737,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
3738,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/oracle/Dockerfile,# http://jdk.java.net/
3739,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
3740,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
3741,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/oracle/Dockerfile,# basic smoke test
3742,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
3743,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3744,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3745,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3746,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
3747,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3748,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3749,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3750,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3751,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
3752,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3753,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3754,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3755,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
3756,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
3757,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
3758,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3759,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-6-jre/Dockerfile,# Default to UTF-8 file.encoding
3760,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3761,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3762,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3763,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jdk/Dockerfile,# Default to UTF-8 file.encoding
3764,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3765,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jdk/Dockerfile,#!/bin/sh'; \
3766,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3767,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3768,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3769,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
3770,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,# backwards compatibility shim
3771,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3772,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
3773,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
3774,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
3775,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,# amd64
3776,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,# fallback
3777,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
3778,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
3779,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
3780,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3781,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
3782,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3783,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3784,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,# basic smoke test
3785,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3786,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
3787,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
3788,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3789,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/Dockerfile,#!/bin/sh'; \
3790,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3791,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3792,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3793,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3794,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3795,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3796,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3797,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
3798,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,# backwards compatibility shim
3799,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3800,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3801,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3802,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
3803,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3804,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3805,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3806,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,# basic smoke test
3807,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3808,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
3809,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3810,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
3811,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
3812,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3813,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/Dockerfile,#!/bin/sh'; \
3814,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3815,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3816,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3817,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3818,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3819,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3820,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3821,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3822,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3823,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3824,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3825,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3826,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
3827,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
3828,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3829,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/Dockerfile,#!/bin/sh'; \
3830,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3831,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3832,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3833,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3834,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3835,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3836,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
3837,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3838,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3839,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3840,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
3841,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3842,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
3843,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,# backwards compatibility shim
3844,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3845,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3846,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3847,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
3848,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3849,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3850,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3851,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,# basic smoke test
3852,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3853,e740b6fad61854adfbdf553638d33f1c80176d79,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3854,e740b6fad61854adfbdf553638d33f1c80176d79,/openjdk-8-jdk/Dockerfile,# Default to UTF-8 file.encoding
3855,e740b6fad61854adfbdf553638d33f1c80176d79,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
3856,e740b6fad61854adfbdf553638d33f1c80176d79,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
3857,e740b6fad61854adfbdf553638d33f1c80176d79,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3858,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3859,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
3860,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,# backwards compatibility shim
3861,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3862,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
3863,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
3864,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
3865,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
3866,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
3867,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3868,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
3869,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3870,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3871,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,# basic smoke test
3872,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3873,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
3874,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,# backwards compatibility shim
3875,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3876,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3877,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3878,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
3879,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3880,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3881,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3882,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,# basic smoke test
3883,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3884,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
3885,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3886,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
3887,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/Dockerfile,# Default to UTF-8 file.encoding
3888,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3889,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/Dockerfile,#!/bin/sh'; \
3890,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3891,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3892,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3893,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3894,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3895,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3896,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3897,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3898,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3899,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3900,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3901,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3902,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
3903,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3904,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
3905,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,# backwards compatibility shim
3906,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3907,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
3908,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
3909,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,# arm64v8
3910,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,# amd64
3911,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,# fallback
3912,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3913,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
3914,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3915,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3916,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3917,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,# basic smoke test
3918,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3919,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3920,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
3921,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3922,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
3923,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,# backwards compatibility shim
3924,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3925,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3926,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3927,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
3928,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3929,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3930,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3931,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,# basic smoke test
3932,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3933,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3934,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
3935,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,# backwards compatibility shim
3936,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3937,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
3938,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
3939,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
3940,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
3941,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
3942,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3943,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
3944,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3945,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3946,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,# basic smoke test
3947,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3948,15835397954c9ec123e42e685035ecd239e0a1db,/8/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
3949,15835397954c9ec123e42e685035ecd239e0a1db,/8/jdk/windows/nanoserver-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
3950,15835397954c9ec123e42e685035ecd239e0a1db,/8/jdk/windows/nanoserver-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
3951,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3952,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3953,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3954,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
3955,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3956,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3957,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
3958,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
3959,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3960,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,#!/bin/sh'; \
3961,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3962,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3963,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3964,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3965,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3966,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3967,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3968,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3969,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jdk/Dockerfile,# Default to UTF-8 file.encoding
3970,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
3971,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
3972,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586"
3973,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3974,e6e9cf8b21516ba764189916d35be57486203c95,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3975,e6e9cf8b21516ba764189916d35be57486203c95,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3976,e6e9cf8b21516ba764189916d35be57486203c95,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
3977,e6e9cf8b21516ba764189916d35be57486203c95,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3978,e6e9cf8b21516ba764189916d35be57486203c95,/8-jdk/Dockerfile,#!/bin/sh'; \
3979,e6e9cf8b21516ba764189916d35be57486203c95,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
3980,e6e9cf8b21516ba764189916d35be57486203c95,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
3981,e6e9cf8b21516ba764189916d35be57486203c95,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3982,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3983,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3984,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
3985,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3986,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,#!/bin/sh'; \
3987,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3988,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
3989,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3990,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3991,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3992,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
3993,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3994,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3995,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
3996,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3997,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
3998,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,# backwards compatibility shim
3999,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4000,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4001,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4002,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
4003,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4004,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4005,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4006,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,# basic smoke test
4007,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4008,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4009,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
4010,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
4011,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
4012,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
4013,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/oracle/Dockerfile,# basic smoke test
4014,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
4015,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4016,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
4017,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
4018,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4019,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/slim/Dockerfile,#!/bin/sh'; \
4020,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4021,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4022,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4023,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4024,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4025,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4026,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4027,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
4028,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
4029,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4030,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/slim/Dockerfile,#!/bin/sh'; \
4031,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4032,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4033,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4034,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4035,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4036,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4037,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4038,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
4039,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,# backwards compatibility shim
4040,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4041,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
4042,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
4043,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
4044,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
4045,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
4046,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4047,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
4048,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4049,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4050,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,# basic smoke test
4051,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4052,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
4053,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
4054,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4055,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
4056,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4057,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4058,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4059,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4060,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4061,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4062,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4063,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4064,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
4065,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,# Default to UTF-8 file.encoding
4066,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4067,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,#!/bin/sh'; \
4068,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4069,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4070,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
4071,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4072,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4073,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4074,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4075,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4076,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4077,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
4078,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
4079,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4080,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
4081,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4082,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4083,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4084,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4085,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4086,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4087,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4088,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4089,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4090,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4091,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
4092,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4093,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4094,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
4095,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
4096,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4097,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
4098,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4099,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4100,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4101,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4102,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4103,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4104,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4105,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4106,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4107,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
4108,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4109,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4110,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
4111,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
4112,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4113,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,#!/bin/sh'; \
4114,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4115,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
4116,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4117,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4118,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4119,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4120,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
4121,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4122,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4123,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-6-jre/Dockerfile,# Default to UTF-8 file.encoding
4124,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4125,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4126,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4127,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4128,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
4129,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4130,9859b8586dd2511d005c84694736e2121ceb11d7,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4131,9859b8586dd2511d005c84694736e2121ceb11d7,/openjdk-6-jdk/Dockerfile,# Default to UTF-8 file.encoding
4132,9859b8586dd2511d005c84694736e2121ceb11d7,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4133,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
4134,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4135,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
4136,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4137,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
4138,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4139,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/oracle/Dockerfile,# basic smoke test
4140,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
4141,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4142,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
4143,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
4144,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4145,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/slim/Dockerfile,#!/bin/sh'; \
4146,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4147,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4148,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4149,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4150,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4151,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4152,200ecf22e5a23cb48cbb3ce47aa08aa3b49a0d2d,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4153,200ecf22e5a23cb48cbb3ce47aa08aa3b49a0d2d,/openjdk-8-jdk/Dockerfile,# Default to UTF-8 file.encoding
4154,200ecf22e5a23cb48cbb3ce47aa08aa3b49a0d2d,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
4155,200ecf22e5a23cb48cbb3ce47aa08aa3b49a0d2d,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
4156,200ecf22e5a23cb48cbb3ce47aa08aa3b49a0d2d,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4157,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4158,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4159,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
4160,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,# backwards compatibility shim
4161,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4162,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
4163,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
4164,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
4165,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
4166,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
4167,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4168,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,#!/usr/bin/env bash'; \
4169,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4170,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4171,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,# basic smoke test
4172,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4173,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
4174,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,# backwards compatibility shim
4175,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4176,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
4177,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
4178,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,# arm64v8
4179,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,# amd64
4180,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,# fallback
4181,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4182,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
4183,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4184,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4185,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4186,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,# basic smoke test
4187,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4188,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4189,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4190,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4191,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
4192,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4193,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4194,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4195,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4196,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
4197,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4198,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4199,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4200,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4201,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4202,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4203,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4204,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4205,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4206,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4207,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4208,c2a9c2169b3cb215e3200440bc1cc2d6a2284d8b,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4209,c2a9c2169b3cb215e3200440bc1cc2d6a2284d8b,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
4210,c2a9c2169b3cb215e3200440bc1cc2d6a2284d8b,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
4211,c2a9c2169b3cb215e3200440bc1cc2d6a2284d8b,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4212,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
4213,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4214,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4215,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4216,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4217,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4218,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
4219,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4220,873fb56728befef8ecaf8436c3a27fd239cba301,/8-jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4221,873fb56728befef8ecaf8436c3a27fd239cba301,/8-jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4222,873fb56728befef8ecaf8436c3a27fd239cba301,/8-jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
4223,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4224,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4225,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
4226,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4227,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jdk/Dockerfile,#!/bin/sh'; \
4228,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4229,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4230,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4231,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4232,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
4233,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4234,98726c6f8efe30e3a40a51a0c4de7fb7193d9f58,/7/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4235,98726c6f8efe30e3a40a51a0c4de7fb7193d9f58,/7/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4236,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4237,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4238,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
4239,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
4240,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
4241,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4242,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4243,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4244,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
4245,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4246,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4247,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4248,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
4249,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4250,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4251,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
4252,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
4253,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4254,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/Dockerfile,#!/bin/sh'; \
4255,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4256,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4257,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4258,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4259,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4260,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4261,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
4262,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/slim/Dockerfile,# backwards compatibility shim
4263,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4264,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
4265,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
4266,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
4267,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
4268,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
4269,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/slim/Dockerfile,# basic smoke test
4270,68c66124d85712115f1aefa0c60e766ac8e7da66,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4271,68c66124d85712115f1aefa0c60e766ac8e7da66,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
4272,68c66124d85712115f1aefa0c60e766ac8e7da66,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
4273,68c66124d85712115f1aefa0c60e766ac8e7da66,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4274,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
4275,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
4276,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
4277,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
4278,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4279,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
4280,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4281,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
4282,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,# amd64
4283,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,# fallback
4284,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
4285,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4286,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
4287,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,# basic smoke test
4288,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
4289,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4290,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4291,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
4292,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4293,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
4294,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4295,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4296,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
4297,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,# backwards compatibility shim
4298,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4299,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
4300,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
4301,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
4302,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
4303,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
4304,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4305,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,#!/usr/bin/env bash'; \
4306,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4307,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4308,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,# basic smoke test
4309,b57ab1457d190f313c46ffbec2b994b041b4d08c,/14/jdk/alpine/Dockerfile,# https://jdk.java.net/
4310,b57ab1457d190f313c46ffbec2b994b041b4d08c,/14/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
4311,b57ab1457d190f313c46ffbec2b994b041b4d08c,/14/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4312,b57ab1457d190f313c46ffbec2b994b041b4d08c,/14/jdk/alpine/Dockerfile,# basic smoke test
4313,b57ab1457d190f313c46ffbec2b994b041b4d08c,/14/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
4314,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4315,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4316,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4317,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1809/Dockerfile,# http://jdk.java.net/
4318,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4319,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4320,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
4321,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
4322,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
4323,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4324,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/oracle/Dockerfile,# basic smoke test
4325,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
4326,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4327,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4328,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4329,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
4330,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
4331,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
4332,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4333,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4334,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
4335,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
4336,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4337,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/slim/Dockerfile,#!/bin/sh'; \
4338,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4339,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4340,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4341,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4342,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4343,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4344,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4345,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4346,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4347,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
4348,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
4349,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4350,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jre/alpine/Dockerfile,#!/bin/sh'; \
4351,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4352,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
4353,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4354,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
4355,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
4356,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
4357,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,# arm64v8
4358,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,# amd64
4359,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,# fallback
4360,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
4361,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4362,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
4363,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,# basic smoke test
4364,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4365,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4366,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4367,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4368,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
4369,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4370,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4371,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
4372,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
4373,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4374,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,#!/bin/sh'; \
4375,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4376,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4377,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
4378,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4379,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4380,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4381,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4382,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4383,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4384,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4385,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
4386,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4387,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jdk/Dockerfile,#!/bin/sh'; \
4388,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4389,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4390,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4391,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
4392,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4393,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4394,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
4395,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4396,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
4397,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,# backwards compatibility shim
4398,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4399,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4400,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4401,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
4402,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4403,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4404,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4405,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,# basic smoke test
4406,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4407,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4408,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
4409,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4410,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
4411,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,# backwards compatibility shim
4412,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4413,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,# https://jdk.java.net/
4414,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4415,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
4416,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4417,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4418,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4419,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,# basic smoke test
4420,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4421,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4422,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4423,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4424,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4425,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4426,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4427,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4428,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4429,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
4430,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4431,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/alpine3.12/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
4432,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/alpine3.12/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
4433,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/alpine3.12/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
4434,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/alpine3.12/Dockerfile,# amd64
4435,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/alpine3.12/Dockerfile,# fallback
4436,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/alpine3.12/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
4437,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/alpine3.12/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4438,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/alpine3.12/Dockerfile,# basic smoke test
4439,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/alpine3.12/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4440,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
4441,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4442,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4443,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4444,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
4445,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
4446,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4447,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
4448,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4449,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4450,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4451,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
4452,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4453,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jre/Dockerfile,#!/bin/sh'; \
4454,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4455,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4456,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4457,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4458,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4459,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
4460,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,# backwards compatibility shim
4461,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4462,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4463,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4464,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
4465,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4466,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4467,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4468,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,# basic smoke test
4469,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4470,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
4471,4815a7dc43f0fb212c40f357624fb4ec943992bf,/8-jdk/windows/windowsservercore/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4472,4815a7dc43f0fb212c40f357624fb4ec943992bf,/8-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4473,4815a7dc43f0fb212c40f357624fb4ec943992bf,/8-jdk/windows/windowsservercore/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
4474,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4475,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
4476,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
4477,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4478,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/slim/Dockerfile,#!/bin/sh'; \
4479,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4480,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4481,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4482,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4483,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4484,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4485,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4486,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4487,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4488,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
4489,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4490,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jdk/windows/windowsservercore/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4491,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4492,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jdk/windows/windowsservercore/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
4493,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4494,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jdk/Dockerfile,# Default to UTF-8 file.encoding
4495,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
4496,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
4497,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586"
4498,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4499,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4500,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4501,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4502,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
4503,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4504,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4505,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4506,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4507,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
4508,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4509,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4510,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4511,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4512,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
4513,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4514,5fb0ba0b6f08e6647a1ba4fbdf8263895b1cf61f,/8-jdk/windows/nanoserver/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4515,5fb0ba0b6f08e6647a1ba4fbdf8263895b1cf61f,/8-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4516,5fb0ba0b6f08e6647a1ba4fbdf8263895b1cf61f,/8-jdk/windows/nanoserver/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
4517,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4518,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4519,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jre/Dockerfile,# Default to UTF-8 file.encoding
4520,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4521,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jre/Dockerfile,#!/bin/bash'; \
4522,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
4523,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
4524,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4525,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4526,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4527,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4528,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
4529,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4530,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4531,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4532,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4533,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4534,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4535,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
4536,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/Dockerfile,# backwards compatibility shim
4537,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4538,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
4539,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
4540,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
4541,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
4542,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/Dockerfile,# basic smoke test
4543,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4544,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4545,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
4546,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4547,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jre/Dockerfile,#!/bin/sh'; \
4548,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
4549,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
4550,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4551,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4552,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
4553,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
4554,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4555,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,#!/bin/sh'; \
4556,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4557,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4558,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4559,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4560,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4561,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4562,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4563,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4564,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4565,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
4566,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4567,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jre/Dockerfile,#!/bin/sh'; \
4568,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
4569,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
4570,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4571,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4572,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4573,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
4574,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4575,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jre/Dockerfile,#!/bin/sh'; \
4576,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
4577,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
4578,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4579,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4580,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4581,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4582,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4583,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4584,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4585,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4586,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
4587,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
4588,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
4589,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
4590,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4591,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4592,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4593,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
4594,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4595,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
4596,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,# backwards compatibility shim
4597,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4598,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4599,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4600,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
4601,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4602,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4603,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4604,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,# basic smoke test
4605,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4606,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4607,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
4608,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
4609,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
4610,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4611,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/oracle/Dockerfile,# basic smoke test
4612,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
4613,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4614,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
4615,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4616,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
4617,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,# backwards compatibility shim
4618,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4619,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4620,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4621,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
4622,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4623,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4624,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4625,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,# basic smoke test
4626,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4627,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4628,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
4629,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,# backwards compatibility shim
4630,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4631,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
4632,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
4633,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
4634,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
4635,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
4636,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4637,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
4638,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4639,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4640,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,# basic smoke test
4641,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4642,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4643,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4644,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4645,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
4646,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4647,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4648,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4649,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4650,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
4651,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4652,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4653,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4654,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4655,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
4656,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4657,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
4658,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4659,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
4660,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4661,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
4662,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4663,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/oracle/Dockerfile,# basic smoke test
4664,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
4665,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4666,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4667,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4668,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1809/Dockerfile,# http://jdk.java.net/
4669,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4670,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4671,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
4672,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
4673,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4674,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/slim/Dockerfile,#!/bin/sh'; \
4675,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4676,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4677,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4678,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4679,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4680,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4681,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4682,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4683,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4684,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
4685,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4686,1992f5ab6b5b6b4748c9628125dbea37df405d99,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4687,1992f5ab6b5b6b4748c9628125dbea37df405d99,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
4688,1992f5ab6b5b6b4748c9628125dbea37df405d99,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
4689,1992f5ab6b5b6b4748c9628125dbea37df405d99,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4690,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4691,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
4692,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,# backwards compatibility shim
4693,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4694,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
4695,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
4696,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,# arm64v8
4697,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,# amd64
4698,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,# fallback
4699,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4700,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
4701,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4702,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4703,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4704,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,# basic smoke test
4705,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4706,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4707,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4708,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
4709,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4710,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jdk/Dockerfile,#!/bin/sh'; \
4711,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4712,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4713,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4714,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4715,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4716,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4717,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4718,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4719,4735dcec5fec2833635b8f6634d24d7e22c617b2,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4720,4735dcec5fec2833635b8f6634d24d7e22c617b2,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
4721,4735dcec5fec2833635b8f6634d24d7e22c617b2,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
4722,4735dcec5fec2833635b8f6634d24d7e22c617b2,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4723,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4724,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
4725,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
4726,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4727,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/slim/Dockerfile,#!/bin/sh'; \
4728,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4729,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4730,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4731,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4732,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4733,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4734,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4735,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
4736,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
4737,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4738,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,#!/bin/sh'; \
4739,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4740,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4741,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4742,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4743,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4744,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4745,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4746,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4747,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4748,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4749,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4750,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4751,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4752,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4753,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4754,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
4755,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4756,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4757,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
4758,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
4759,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4760,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,#!/bin/sh'; \
4761,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4762,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4763,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
4764,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4765,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4766,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4767,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4768,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4769,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
4770,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4771,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
4772,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
4773,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
4774,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,# arm64v8
4775,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,# amd64
4776,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,# fallback
4777,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
4778,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4779,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
4780,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,# basic smoke test
4781,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4782,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4783,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4784,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
4785,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
4786,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
4787,6930db691f13efa925c1de3bbc8bc393783b7b2f,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4788,6930db691f13efa925c1de3bbc8bc393783b7b2f,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4789,6930db691f13efa925c1de3bbc8bc393783b7b2f,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
4790,6930db691f13efa925c1de3bbc8bc393783b7b2f,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4791,6930db691f13efa925c1de3bbc8bc393783b7b2f,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
4792,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4793,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4794,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
4795,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
4796,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
4797,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
4798,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4799,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
4800,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
4801,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
4802,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4803,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/oracle/Dockerfile,# basic smoke test
4804,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
4805,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4806,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4807,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4808,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4809,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4810,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4811,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4812,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
4813,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4814,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4815,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4816,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
4817,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,# backwards compatibility shim
4818,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4819,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
4820,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
4821,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
4822,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
4823,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
4824,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4825,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,#!/usr/bin/env bash'; \
4826,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4827,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4828,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,# basic smoke test
4829,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4830,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4831,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
4832,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,# backwards compatibility shim
4833,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4834,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
4835,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
4836,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
4837,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
4838,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
4839,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4840,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,#!/usr/bin/env bash'; \
4841,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4842,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4843,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,# basic smoke test
4844,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4845,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
4846,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4847,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
4848,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,# backwards compatibility shim
4849,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4850,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4851,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
4852,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,# arm64v8
4853,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,# amd64
4854,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,# fallback
4855,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4856,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
4857,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4858,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4859,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4860,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,# basic smoke test
4861,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4862,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
4863,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4864,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
4865,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4866,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
4867,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4868,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/oracle/Dockerfile,# basic smoke test
4869,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
4870,73bb0adbae399094463dec65d1cdec506860c7e2,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4871,73bb0adbae399094463dec65d1cdec506860c7e2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4872,73bb0adbae399094463dec65d1cdec506860c7e2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4873,73bb0adbae399094463dec65d1cdec506860c7e2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
4874,73bb0adbae399094463dec65d1cdec506860c7e2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4875,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4876,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4877,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jre/Dockerfile,# Default to UTF-8 file.encoding
4878,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4879,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jre/Dockerfile,#!/bin/bash'; \
4880,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4881,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4882,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
4883,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,# backwards compatibility shim
4884,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4885,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
4886,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
4887,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
4888,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
4889,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
4890,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4891,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
4892,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4893,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4894,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,# basic smoke test
4895,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4896,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4897,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4898,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4899,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
4900,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4901,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4902,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4903,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
4904,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4905,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jre/Dockerfile,#!/bin/sh'; \
4906,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4907,8b20818d91705361ff42b597369620680d0af98c,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4908,8b20818d91705361ff42b597369620680d0af98c,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4909,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4910,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4911,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4912,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
4913,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4914,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4915,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4916,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4917,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1809/Dockerfile,# http://jdk.java.net/
4918,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4919,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4920,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
4921,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,# backwards compatibility shim
4922,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4923,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
4924,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
4925,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
4926,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
4927,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
4928,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4929,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
4930,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4931,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4932,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,# basic smoke test
4933,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
4934,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/nanoserver-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
4935,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/nanoserver-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
4936,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4937,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
4938,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
4939,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
4940,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4941,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/oracle/Dockerfile,# basic smoke test
4942,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
4943,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4944,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
4945,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
4946,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4947,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/Dockerfile,#!/bin/sh'; \
4948,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4949,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4950,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4951,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4952,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4953,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4954,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4955,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4956,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4957,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
4958,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4959,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
4960,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4961,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
4962,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
4963,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
4964,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,# amd64
4965,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,# fallback
4966,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
4967,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4968,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
4969,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,# basic smoke test
4970,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4971,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4972,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
4973,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
4974,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4975,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/slim/Dockerfile,#!/bin/sh'; \
4976,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4977,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4978,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4979,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4980,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4981,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4982,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4983,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
4984,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
4985,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4986,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/alpine/Dockerfile,#!/bin/sh'; \
4987,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4988,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
4989,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4990,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
4991,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4992,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
4993,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4994,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/oracle/Dockerfile,# basic smoke test
4995,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
4996,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4997,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4998,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
4999,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5000,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5001,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
5002,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
5003,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5004,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,#!/bin/sh'; \
5005,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5006,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
5007,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5008,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5009,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5010,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5011,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
5012,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5013,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5014,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
5015,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5016,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
5017,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,# backwards compatibility shim
5018,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5019,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5020,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5021,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
5022,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5023,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5024,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5025,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,# basic smoke test
5026,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5027,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
5028,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5029,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5030,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
5031,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5032,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5033,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
5034,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/nanoserver-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
5035,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/nanoserver-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
5036,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5037,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
5038,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,# backwards compatibility shim
5039,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5040,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
5041,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
5042,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,# amd64
5043,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,# fallback
5044,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5045,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
5046,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5047,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5048,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5049,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,# basic smoke test
5050,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5051,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5052,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
5053,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
5054,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5055,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,#!/bin/sh'; \
5056,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5057,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
5058,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5059,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5060,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5061,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5062,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
5063,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5064,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5065,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5066,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5067,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1809/Dockerfile,# http://jdk.java.net/
5068,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5069,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5070,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5071,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5072,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
5073,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5074,6cc25ee35281099423e521713f710d2549209600,/8/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5075,6cc25ee35281099423e521713f710d2549209600,/8/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5076,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5077,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5078,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
5079,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
5080,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
5081,3faf377815bd5409f91a007b092d38a36134baf5,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5082,3faf377815bd5409f91a007b092d38a36134baf5,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5083,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5084,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5085,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
5086,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,# backwards compatibility shim
5087,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5088,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
5089,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
5090,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
5091,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
5092,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
5093,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5094,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,#!/usr/bin/env bash'; \
5095,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5096,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5097,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,# basic smoke test
5098,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5099,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5100,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
5101,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5102,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jre/Dockerfile,#!/bin/sh'; \
5103,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5104,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5105,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5106,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5107,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5108,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5109,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5110,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5111,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5112,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5113,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
5114,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5115,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
5116,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5117,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
5118,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5119,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/oracle/Dockerfile,# basic smoke test
5120,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
5121,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5122,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
5123,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5124,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,# Default to UTF-8 file.encoding
5125,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,# backwards compatibility shim
5126,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5127,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,# https://jdk.java.net/
5128,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5129,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,#!/usr/bin/env bash'; \
5130,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5131,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5132,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5133,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,# basic smoke test
5134,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5135,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5136,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5137,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5138,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
5139,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5140,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5141,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
5142,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
5143,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
5144,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5145,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/oracle/Dockerfile,# basic smoke test
5146,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
5147,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
5148,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5149,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5150,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
5151,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
5152,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
5153,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5154,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5155,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5156,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
5157,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5158,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5159,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
5160,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,# Default to UTF-8 file.encoding
5161,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5162,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,#!/bin/sh'; \
5163,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5164,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5165,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
5166,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5167,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5168,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5169,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5170,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5171,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5172,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5173,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
5174,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
5175,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
5176,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5177,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5178,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
5179,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
5180,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
5181,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5182,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5183,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5184,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
5185,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5186,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5187,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5188,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5189,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5190,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5191,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5192,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5193,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
5194,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5195,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
5196,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5197,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
5198,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5199,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
5200,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,# backwards compatibility shim
5201,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5202,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,# https://jdk.java.net/
5203,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5204,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
5205,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5206,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5207,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5208,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,# basic smoke test
5209,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5210,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5211,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5212,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5213,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
5214,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5215,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5216,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-6"
5217,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/Dockerfile,# Default to UTF-8 file.encoding
5218,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5219,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/Dockerfile,#!/bin/sh'; \
5220,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5221,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5222,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5223,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5224,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5225,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5226,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5227,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5228,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
5229,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5230,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
5231,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,# Default to UTF-8 file.encoding
5232,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5233,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,#!/bin/sh'; \
5234,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5235,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5236,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
5237,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5238,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5239,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5240,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5241,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
5242,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5243,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
5244,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
5245,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
5246,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5247,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/oracle/Dockerfile,# basic smoke test
5248,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
5249,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5250,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5251,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jdk/Dockerfile,# Default to UTF-8 file.encoding
5252,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5253,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jdk/Dockerfile,#!/bin/bash'; \
5254,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
5255,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
5256,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5257,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5258,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
5259,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,# backwards compatibility shim
5260,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5261,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5262,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5263,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
5264,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5265,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5266,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5267,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,# basic smoke test
5268,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5269,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
5270,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5271,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5272,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5273,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
5274,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5275,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5276,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
5277,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,# backwards compatibility shim
5278,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5279,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5280,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5281,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
5282,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5283,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5284,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5285,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,# basic smoke test
5286,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5287,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
5288,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5289,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5290,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-6-jre/Dockerfile,# Default to UTF-8 file.encoding
5291,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5292,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/windows/windowsservercore/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5293,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5294,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/windows/windowsservercore/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
5295,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5296,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5297,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5298,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
5299,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5300,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5301,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
5302,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
5303,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5304,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/alpine/Dockerfile,#!/bin/sh'; \
5305,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5306,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5307,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
5308,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/oracle/Dockerfile,# http://jdk.java.net/
5309,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
5310,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
5311,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/oracle/Dockerfile,# basic smoke test
5312,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
5313,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5314,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5315,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
5316,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5317,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jre/Dockerfile,#!/bin/sh'; \
5318,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5319,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5320,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5321,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5322,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
5323,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5324,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5325,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
5326,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,# Default to UTF-8 file.encoding
5327,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5328,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,#!/bin/sh'; \
5329,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5330,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5331,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
5332,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5333,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5334,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5335,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5336,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
5337,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5338,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5339,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5340,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5341,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
5342,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
5343,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
5344,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5345,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
5346,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,# backwards compatibility shim
5347,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5348,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
5349,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
5350,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
5351,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,# arm64v8
5352,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,# amd64
5353,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,# fallback
5354,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
5355,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
5356,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
5357,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5358,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
5359,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5360,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5361,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,# basic smoke test
5362,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5363,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5364,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5365,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
5366,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5367,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
5368,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5369,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
5370,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
5371,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5372,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/slim/Dockerfile,#!/bin/sh'; \
5373,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5374,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5375,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5376,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5377,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5378,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5379,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5380,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
5381,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
5382,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5383,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/Dockerfile,#!/bin/sh'; \
5384,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5385,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5386,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5387,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5388,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5389,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5390,73bb0adbae399094463dec65d1cdec506860c7e2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5391,73bb0adbae399094463dec65d1cdec506860c7e2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5392,73bb0adbae399094463dec65d1cdec506860c7e2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5393,73bb0adbae399094463dec65d1cdec506860c7e2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
5394,73bb0adbae399094463dec65d1cdec506860c7e2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5395,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5396,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
5397,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
5398,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5399,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,#!/bin/sh'; \
5400,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5401,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5402,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5403,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5404,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5405,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5406,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5407,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5408,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5409,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
5410,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5411,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5412,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
5413,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
5414,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5415,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,#!/bin/sh'; \
5416,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5417,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5418,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
5419,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
5420,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5421,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5422,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5423,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5424,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5425,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5426,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5427,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
5428,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
5429,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
5430,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5431,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
5432,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jre/windows/nanoserver-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
5433,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jre/windows/nanoserver-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
5434,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5435,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5436,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5437,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
5438,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,# backwards compatibility shim
5439,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5440,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
5441,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
5442,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
5443,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,# amd64
5444,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,# fallback
5445,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
5446,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
5447,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
5448,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5449,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
5450,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5451,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5452,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,# basic smoke test
5453,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5454,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5455,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
5456,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
5457,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
5458,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5459,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5460,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5461,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
5462,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5463,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5464,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5465,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
5466,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5467,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5468,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5469,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5470,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5471,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
5472,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5473,4135ad55c2577bd722c575a41211c59669353d54,/8-jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5474,4135ad55c2577bd722c575a41211c59669353d54,/8-jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5475,4135ad55c2577bd722c575a41211c59669353d54,/8-jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
5476,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5477,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5478,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5479,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
5480,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5481,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5482,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
5483,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
5484,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5485,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,#!/bin/sh'; \
5486,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5487,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5488,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5489,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5490,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5491,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5492,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5493,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5494,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5495,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5496,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5497,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5498,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5499,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5500,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5501,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
5502,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5503,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5504,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
5505,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/Dockerfile,# Default to UTF-8 file.encoding
5506,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5507,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/Dockerfile,#!/bin/sh'; \
5508,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5509,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5510,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5511,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5512,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5513,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5514,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5515,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
5516,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
5517,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5518,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jdk/alpine/Dockerfile,#!/bin/sh'; \
5519,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jdk/alpine/Dockerfile,# https://bugs.alpinelinux.org/issues/10126
5520,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5521,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5522,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5523,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
5524,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,# backwards compatibility shim
5525,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5526,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
5527,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
5528,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
5529,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
5530,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
5531,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5532,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,#!/usr/bin/env bash'; \
5533,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5534,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,# basic smoke test
5535,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5536,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5537,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5538,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
5539,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5540,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jdk/Dockerfile,#!/bin/sh'; \
5541,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5542,1f4de8c3b677e8c74ac400ef8faa05d75df8d4de,/8/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5543,1f4de8c3b677e8c74ac400ef8faa05d75df8d4de,/8/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5544,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5545,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5546,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
5547,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5548,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,#!/bin/sh'; \
5549,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5550,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
5551,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5552,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5553,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5554,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
5555,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5556,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
5557,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5558,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5559,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5560,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5561,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5562,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
5563,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5564,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5565,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jdk/Dockerfile,# Default to UTF-8 file.encoding
5566,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
5567,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
5568,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586"
5569,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5570,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
5571,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5572,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5573,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5574,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
5575,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
5576,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
5577,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5578,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/oracle/Dockerfile,# basic smoke test
5579,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
5580,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5581,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
5582,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
5583,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5584,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jre/alpine/Dockerfile,#!/bin/sh'; \
5585,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5586,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5587,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
5588,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
5589,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5590,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/slim/Dockerfile,#!/bin/sh'; \
5591,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5592,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5593,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5594,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5595,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5596,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5597,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5598,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
5599,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
5600,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5601,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,#!/bin/sh'; \
5602,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5603,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5604,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
5605,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
5606,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5607,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5608,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5609,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5610,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5611,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5612,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
5613,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5614,6294b7d4b299639ec519dfd92782632f498eb1d2,/8-jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5615,6294b7d4b299639ec519dfd92782632f498eb1d2,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5616,6294b7d4b299639ec519dfd92782632f498eb1d2,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5617,6294b7d4b299639ec519dfd92782632f498eb1d2,/8-jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
5618,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/alpine3.12/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
5619,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/alpine3.12/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
5620,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/alpine3.12/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
5621,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/alpine3.12/Dockerfile,# amd64
5622,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/alpine3.12/Dockerfile,# fallback
5623,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/alpine3.12/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
5624,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/alpine3.12/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5625,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/alpine3.12/Dockerfile,# basic smoke test
5626,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/alpine3.12/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5627,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5628,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5629,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
5630,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5631,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5632,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
5633,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
5634,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
5635,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5636,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
5637,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
5638,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
5639,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
5640,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/oracle/Dockerfile,# basic smoke test
5641,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
5642,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5643,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5644,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5645,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
5646,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5647,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5648,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
5649,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
5650,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5651,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,#!/bin/sh'; \
5652,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5653,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5654,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5655,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5656,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5657,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5658,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5659,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5660,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5661,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5662,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
5663,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5664,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5665,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
5666,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,# backwards compatibility shim
5667,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5668,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
5669,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
5670,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
5671,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
5672,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
5673,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5674,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
5675,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5676,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5677,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,# basic smoke test
5678,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5679,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5680,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
5681,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,# backwards compatibility shim
5682,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5683,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
5684,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
5685,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,# arm64v8
5686,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,# amd64
5687,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,# fallback
5688,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5689,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
5690,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5691,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5692,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5693,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,# basic smoke test
5694,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5695,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
5696,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5697,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
5698,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
5699,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
5700,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,# arm64v8
5701,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,# amd64
5702,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,# fallback
5703,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
5704,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5705,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
5706,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,# basic smoke test
5707,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5708,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
5709,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/slim/Dockerfile,# backwards compatibility shim
5710,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5711,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
5712,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
5713,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
5714,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
5715,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
5716,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/slim/Dockerfile,# basic smoke test
5717,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5718,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5719,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5720,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5721,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5722,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5723,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5724,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
5725,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
5726,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5727,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/slim/Dockerfile,#!/bin/sh'; \
5728,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5729,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5730,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5731,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5732,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5733,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5734,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5735,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5736,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5737,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
5738,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5739,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5740,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
5741,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
5742,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5743,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,#!/bin/sh'; \
5744,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5745,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5746,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5747,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5748,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5749,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5750,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5751,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5752,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5753,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
5754,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5755,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jre/Dockerfile,#!/bin/sh'; \
5756,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5757,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5758,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5759,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5760,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
5761,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5762,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5763,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
5764,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5765,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
5766,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,# backwards compatibility shim
5767,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5768,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5769,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5770,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
5771,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5772,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5773,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5774,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,# basic smoke test
5775,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5776,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5777,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
5778,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
5779,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5780,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/Dockerfile,#!/bin/sh'; \
5781,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5782,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5783,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5784,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5785,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5786,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5787,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5788,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5789,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jdk/Dockerfile,# Default to UTF-8 file.encoding
5790,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5791,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jdk/Dockerfile,#!/bin/bash'; \
5792,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
5793,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
5794,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5795,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5796,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5797,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5798,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
5799,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5800,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5801,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
5802,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
5803,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5804,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/Dockerfile,#!/bin/sh'; \
5805,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5806,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5807,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5808,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5809,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5810,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5811,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5812,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5813,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5814,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
5815,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5816,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5817,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5818,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5819,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5820,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5821,238cc35696423794b1951fc63d4cc9ffb8ca9685,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5822,238cc35696423794b1951fc63d4cc9ffb8ca9685,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5823,238cc35696423794b1951fc63d4cc9ffb8ca9685,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
5824,238cc35696423794b1951fc63d4cc9ffb8ca9685,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5825,238cc35696423794b1951fc63d4cc9ffb8ca9685,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
5826,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5827,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
5828,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
5829,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5830,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
5831,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5832,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5833,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5834,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5835,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5836,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5837,1ffa4d8285908a0524d4031315781c95025654b7,/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5838,1ffa4d8285908a0524d4031315781c95025654b7,/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5839,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
5840,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/nanoserver-1809/Dockerfile,# https://jdk.java.net/
5841,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5842,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5843,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
5844,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,# Default to UTF-8 file.encoding
5845,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5846,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,#!/bin/sh'; \
5847,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5848,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5849,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
5850,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5851,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5852,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5853,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5854,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5855,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
5856,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
5857,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5858,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
5859,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5860,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5861,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5862,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5863,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5864,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5865,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5866,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5867,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5868,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5869,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
5870,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5871,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5872,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5873,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5874,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5875,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5876,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
5877,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5878,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
5879,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5880,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
5881,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5882,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/oracle/Dockerfile,# basic smoke test
5883,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
5884,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5885,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jre/Dockerfile,# Default to UTF-8 file.encoding
5886,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
5887,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
5888,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586"
5889,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5890,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5891,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5892,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5893,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
5894,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5895,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5896,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5897,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5898,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5899,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5900,0467df283134a79840c25808093c00f7c94b9a88,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5901,0467df283134a79840c25808093c00f7c94b9a88,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5902,0467df283134a79840c25808093c00f7c94b9a88,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
5903,0467df283134a79840c25808093c00f7c94b9a88,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5904,0467df283134a79840c25808093c00f7c94b9a88,/7-jdk/Dockerfile,#!/bin/sh'; \
5905,0467df283134a79840c25808093c00f7c94b9a88,/7-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5906,0467df283134a79840c25808093c00f7c94b9a88,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5907,0467df283134a79840c25808093c00f7c94b9a88,/7-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5908,0467df283134a79840c25808093c00f7c94b9a88,/7-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5909,0467df283134a79840c25808093c00f7c94b9a88,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5910,1c98a9032d1a19122074c4009326eade264903b7,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5911,1c98a9032d1a19122074c4009326eade264903b7,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5912,1c98a9032d1a19122074c4009326eade264903b7,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
5913,1c98a9032d1a19122074c4009326eade264903b7,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5914,1c98a9032d1a19122074c4009326eade264903b7,/9-jdk/Dockerfile,#!/bin/sh'; \
5915,1c98a9032d1a19122074c4009326eade264903b7,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5916,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5917,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5918,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5919,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
5920,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5921,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
5922,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5923,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
5924,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5925,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
5926,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5927,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/oracle/Dockerfile,# basic smoke test
5928,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
5929,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5930,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5931,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jdk/Dockerfile,# Default to UTF-8 file.encoding
5932,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5933,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jdk/Dockerfile,#!/bin/bash'; \
5934,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5935,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
5936,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5937,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5938,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5939,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
5940,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5941,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,# Default to UTF-8 file.encoding
5942,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,# backwards compatibility shim
5943,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5944,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5945,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
5946,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,# arm64v8
5947,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,# amd64
5948,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,# fallback
5949,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5950,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,#!/usr/bin/env bash'; \
5951,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5952,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5953,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5954,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,# basic smoke test
5955,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5956,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5957,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
5958,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5959,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
5960,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,# backwards compatibility shim
5961,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5962,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
5963,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
5964,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,# arm64v8
5965,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,# amd64
5966,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,# fallback
5967,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5968,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
5969,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5970,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5971,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5972,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,# basic smoke test
5973,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5974,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5975,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
5976,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,# backwards compatibility shim
5977,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5978,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5979,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5980,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
5981,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5982,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5983,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5984,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,# basic smoke test
5985,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5986,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
5987,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5988,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5989,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5990,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5991,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5992,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
5993,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
5994,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
5995,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5996,c0b708fc06d1b52d10eee7320067ccd0b5ad06d9,/15/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5997,c0b708fc06d1b52d10eee7320067ccd0b5ad06d9,/15/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
5998,c0b708fc06d1b52d10eee7320067ccd0b5ad06d9,/15/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5999,c0b708fc06d1b52d10eee7320067ccd0b5ad06d9,/15/jdk/alpine/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
6000,c0b708fc06d1b52d10eee7320067ccd0b5ad06d9,/15/jdk/alpine/Dockerfile,# basic smoke test
6001,c0b708fc06d1b52d10eee7320067ccd0b5ad06d9,/15/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
6002,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6003,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
6004,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6005,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
6006,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,# backwards compatibility shim
6007,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6008,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6009,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6010,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
6011,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6012,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6013,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6014,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,# basic smoke test
6015,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6016,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
6017,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
6018,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
6019,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6020,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
6021,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
6022,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
6023,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6024,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6025,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
6026,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,# backwards compatibility shim
6027,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6028,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,# https://jdk.java.net/
6029,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6030,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
6031,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6032,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6033,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6034,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,# basic smoke test
6035,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6036,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
6037,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6038,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
6039,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
6040,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6041,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jre/alpine/Dockerfile,#!/bin/sh'; \
6042,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6043,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6044,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6045,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6046,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
6047,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6048,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6049,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6050,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6051,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
6052,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6053,5527e8e319a1451b9e302af846b9939da36d8992,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6054,5527e8e319a1451b9e302af846b9939da36d8992,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6055,5527e8e319a1451b9e302af846b9939da36d8992,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
6056,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6057,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
6058,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,# backwards compatibility shim
6059,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6060,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,# https://jdk.java.net/
6061,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6062,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
6063,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6064,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6065,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6066,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,# basic smoke test
6067,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6068,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
6069,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
6070,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/nanoserver-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
6071,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/nanoserver-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
6072,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6073,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6074,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
6075,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/Dockerfile,# backwards compatibility shim
6076,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6077,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
6078,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
6079,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
6080,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
6081,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
6082,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/Dockerfile,# basic smoke test
6083,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6084,a2b245fc1ab64df2de145b87e631b5e89ca67388,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6085,a2b245fc1ab64df2de145b87e631b5e89ca67388,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6086,a2b245fc1ab64df2de145b87e631b5e89ca67388,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
6087,a2b245fc1ab64df2de145b87e631b5e89ca67388,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6088,a2b245fc1ab64df2de145b87e631b5e89ca67388,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
6089,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6090,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
6091,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,# backwards compatibility shim
6092,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6093,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
6094,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
6095,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,# arm64v8
6096,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,# amd64
6097,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,# fallback
6098,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6099,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
6100,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6101,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6102,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6103,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,# basic smoke test
6104,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6105,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6106,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6107,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6108,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
6109,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6110,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6111,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
6112,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
6113,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6114,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
6115,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6116,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6117,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6118,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6119,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6120,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6121,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6122,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6123,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6124,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
6125,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6126,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jdk/Dockerfile,#!/bin/sh'; \
6127,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
6128,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6129,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6130,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,# Default to UTF-8 file.encoding
6131,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,# backwards compatibility shim
6132,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6133,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
6134,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
6135,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
6136,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,# arm64v8
6137,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,# amd64
6138,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,# fallback
6139,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
6140,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
6141,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
6142,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6143,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,#!/usr/bin/env bash'; \
6144,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6145,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6146,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,# basic smoke test
6147,d617d7e4b951735c512f3d5ac7672f7394115c91,/8/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6148,d617d7e4b951735c512f3d5ac7672f7394115c91,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6149,d617d7e4b951735c512f3d5ac7672f7394115c91,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
6150,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6151,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6152,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6153,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
6154,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6155,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6156,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
6157,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
6158,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6159,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
6160,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6161,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6162,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-reccomends:
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
6163,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6164,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6165,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6166,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6167,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6168,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6169,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
6170,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
6171,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6172,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,#!/bin/sh'; \
6173,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6174,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6175,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
6176,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6177,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6178,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6179,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6180,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6181,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
6182,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6183,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,# Default to UTF-8 file.encoding
6184,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,# backwards compatibility shim
6185,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6186,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6187,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
6188,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,# arm64v8
6189,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,# amd64
6190,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,# fallback
6191,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6192,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,#!/usr/bin/env bash'; \
6193,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6194,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6195,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6196,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,# basic smoke test
6197,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6198,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6199,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6200,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jdk/Dockerfile,# Default to UTF-8 file.encoding
6201,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6202,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jdk/Dockerfile,#!/bin/bash'; \
6203,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
6204,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
6205,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6206,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6207,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6208,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6209,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
6210,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
6211,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
6212,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6213,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
6214,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
6215,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6216,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/Dockerfile,#!/bin/sh'; \
6217,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6218,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6219,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6220,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6221,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6222,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6223,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6224,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6225,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-1809/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
6226,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6227,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
6228,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
6229,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6230,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/slim/Dockerfile,#!/bin/sh'; \
6231,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6232,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6233,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6234,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6235,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6236,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6237,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6238,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6239,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jre/Dockerfile,# Default to UTF-8 file.encoding
6240,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
6241,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
6242,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
6243,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6244,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
6245,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/oracle/Dockerfile,# https://jdk.java.net/
6246,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
6247,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6248,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/oracle/Dockerfile,# basic smoke test
6249,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
6250,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6251,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
6252,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,# backwards compatibility shim
6253,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6254,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,# https://jdk.java.net/
6255,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6256,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
6257,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6258,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6259,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6260,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,# basic smoke test
6261,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6262,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
6263,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6264,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6265,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6266,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
6267,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6268,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6269,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
6270,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,# Default to UTF-8 file.encoding
6271,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6272,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,#!/bin/sh'; \
6273,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6274,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6275,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
6276,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6277,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6278,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6279,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6280,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6281,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6282,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
6283,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
6284,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6285,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,#!/bin/sh'; \
6286,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6287,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6288,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
6289,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6290,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6291,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6292,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6293,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6294,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6295,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
6296,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6297,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
6298,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,# backwards compatibility shim
6299,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6300,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,# https://jdk.java.net/
6301,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6302,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
6303,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6304,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6305,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6306,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,# basic smoke test
6307,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6308,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6309,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6310,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6311,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
6312,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6313,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6314,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
6315,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
6316,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6317,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/slim/Dockerfile,#!/bin/sh'; \
6318,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6319,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6320,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6321,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6322,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6323,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6324,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6325,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
6326,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6327,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
6328,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,# backwards compatibility shim
6329,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6330,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6331,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
6332,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,# arm64v8
6333,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,# amd64
6334,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,# fallback
6335,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6336,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
6337,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6338,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6339,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6340,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,# basic smoke test
6341,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6342,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6343,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6344,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6345,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6346,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6347,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6348,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
6349,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,# backwards compatibility shim
6350,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6351,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
6352,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
6353,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
6354,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
6355,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
6356,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6357,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
6358,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6359,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6360,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,# basic smoke test
6361,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6362,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6363,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6364,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
6365,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6366,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6367,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6368,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6369,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
6370,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6371,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6372,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
6373,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6374,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
6375,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,# backwards compatibility shim
6376,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6377,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
6378,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
6379,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,# arm64v8
6380,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,# amd64
6381,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,# fallback
6382,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6383,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
6384,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6385,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6386,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6387,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,# basic smoke test
6388,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6389,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6390,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
6391,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jre/Dockerfile,# backwards compatibility shim
6392,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6393,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
6394,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
6395,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jre/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
6396,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
6397,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jre/Dockerfile,# basic smoke test
6398,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6399,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6400,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
6401,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6402,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jdk/Dockerfile,#!/bin/sh'; \
6403,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
6404,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6405,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
6406,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6407,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
6408,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,# backwards compatibility shim
6409,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6410,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6411,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6412,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
6413,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6414,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6415,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6416,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,# basic smoke test
6417,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6418,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6419,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6420,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6421,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
6422,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6423,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6424,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6425,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
6426,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6427,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jdk/Dockerfile,#!/bin/sh'; \
6428,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6429,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6430,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6431,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6432,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
6433,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6434,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6435,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6436,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6437,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6438,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6439,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6440,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6441,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1809/Dockerfile,# http://jdk.java.net/
6442,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6443,fbf3a8f396844832bd11a89d6299066a4669383d,/8-jdk/windows/nanoserver/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6444,fbf3a8f396844832bd11a89d6299066a4669383d,/8-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6445,fbf3a8f396844832bd11a89d6299066a4669383d,/8-jdk/windows/nanoserver/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
6446,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6447,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
6448,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/Dockerfile,# backwards compatibility shim
6449,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6450,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
6451,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
6452,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
6453,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
6454,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
6455,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/Dockerfile,# basic smoke test
6456,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6457,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
6458,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,# backwards compatibility shim
6459,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6460,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6461,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
6462,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,# arm64v8
6463,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,# amd64
6464,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,# fallback
6465,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6466,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
6467,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6468,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6469,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6470,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,# basic smoke test
6471,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6472,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6473,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
6474,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6475,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
6476,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
6477,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6478,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,#!/bin/sh'; \
6479,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6480,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6481,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6482,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6483,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6484,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6485,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6486,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6487,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
6488,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
6489,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6490,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/slim/Dockerfile,#!/bin/sh'; \
6491,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6492,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6493,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6494,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6495,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6496,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6497,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6498,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6499,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6500,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
6501,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6502,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6503,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
6504,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,# backwards compatibility shim
6505,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6506,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
6507,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
6508,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,# arm64v8
6509,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,# amd64
6510,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,# fallback
6511,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6512,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
6513,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6514,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6515,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6516,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,# basic smoke test
6517,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6518,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6519,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
6520,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/Dockerfile,# backwards compatibility shim
6521,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6522,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
6523,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
6524,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
6525,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
6526,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/Dockerfile,# basic smoke test
6527,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6528,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6529,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6530,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
6531,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6532,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6533,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6534,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6535,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
6536,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6537,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
6538,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
6539,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
6540,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6541,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
6542,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
6543,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
6544,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
6545,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/oracle/Dockerfile,# basic smoke test
6546,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
6547,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6548,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
6549,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,# backwards compatibility shim
6550,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6551,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6552,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
6553,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,# arm64v8
6554,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,# amd64
6555,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,# fallback
6556,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6557,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
6558,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6559,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6560,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6561,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,# basic smoke test
6562,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6563,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6564,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
6565,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
6566,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6567,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
6568,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6569,4e8fbef2ba9c8280d8c5243736d8a20ee784acc0,/14/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6570,4e8fbef2ba9c8280d8c5243736d8a20ee784acc0,/14/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
6571,4e8fbef2ba9c8280d8c5243736d8a20ee784acc0,/14/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6572,4e8fbef2ba9c8280d8c5243736d8a20ee784acc0,/14/jdk/alpine/Dockerfile,# basic smoke test
6573,4e8fbef2ba9c8280d8c5243736d8a20ee784acc0,/14/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
6574,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6575,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
6576,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
6577,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6578,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/Dockerfile,#!/bin/sh'; \
6579,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6580,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6581,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6582,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6583,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6584,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6585,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/windows/windowsservercore/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6586,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6587,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/windows/windowsservercore/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
6588,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6589,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6590,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
6591,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6592,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6593,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
6594,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6595,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
6596,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,# backwards compatibility shim
6597,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6598,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6599,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
6600,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,# arm64v8
6601,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,# amd64
6602,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,# fallback
6603,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6604,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
6605,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6606,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6607,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6608,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,# basic smoke test
6609,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6610,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6611,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6612,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
6613,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6614,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6615,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
6616,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
6617,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6618,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,#!/bin/sh'; \
6619,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6620,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6621,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-reccomends:
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
6622,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6623,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6624,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6625,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6626,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6627,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6628,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6629,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jre/Dockerfile,# Default to UTF-8 file.encoding
6630,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6631,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jre/Dockerfile,#!/bin/sh'; \
6632,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6633,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6634,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6635,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6636,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
6637,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6638,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6639,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6640,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
6641,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6642,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6643,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6644,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6645,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
6646,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6647,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6648,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6649,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
6650,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,# backwards compatibility shim
6651,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6652,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
6653,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
6654,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
6655,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
6656,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
6657,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6658,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,#!/usr/bin/env bash'; \
6659,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6660,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6661,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,# basic smoke test
6662,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6663,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6664,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6665,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
6666,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6667,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6668,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6669,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
6670,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6671,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jre/Dockerfile,#!/bin/sh'; \
6672,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
6673,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/windows/windowsservercore/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6674,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6675,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/windows/windowsservercore/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
6676,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/windows/windowsservercore/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6677,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6678,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6679,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6680,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6681,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6682,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6683,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6684,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6685,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
6686,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6687,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6688,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
6689,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
6690,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6691,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,#!/bin/sh'; \
6692,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6693,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6694,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (a case of https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
6695,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6696,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6697,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6698,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6699,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6700,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
6701,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
6702,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6703,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,#!/bin/sh'; \
6704,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6705,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6706,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6707,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6708,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6709,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6710,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6711,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6712,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
6713,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
6714,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6715,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/Dockerfile,#!/bin/sh'; \
6716,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6717,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6718,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6719,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6720,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6721,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6722,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6723,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
6724,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
6725,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
6726,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6727,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/oracle/Dockerfile,# basic smoke test
6728,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
6729,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6730,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
6731,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,# backwards compatibility shim
6732,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6733,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
6734,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
6735,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
6736,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,# amd64
6737,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,# fallback
6738,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
6739,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
6740,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
6741,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6742,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
6743,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6744,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6745,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,# basic smoke test
6746,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6747,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
6748,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,# Default to UTF-8 file.encoding
6749,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6750,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,#!/bin/sh'; \
6751,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6752,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6753,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
6754,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6755,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6756,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6757,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6758,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6759,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6760,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
6761,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,# Default to UTF-8 file.encoding
6762,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6763,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,#!/bin/sh'; \
6764,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6765,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6766,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6767,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6768,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6769,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6770,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6771,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6772,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6773,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6774,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6775,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6776,554ff38a160f896ddd7f0fdca1cd34817e253a56,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6777,554ff38a160f896ddd7f0fdca1cd34817e253a56,/12/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
6778,554ff38a160f896ddd7f0fdca1cd34817e253a56,/12/jdk/oracle/Dockerfile,# https://jdk.java.net/
6779,554ff38a160f896ddd7f0fdca1cd34817e253a56,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
6780,554ff38a160f896ddd7f0fdca1cd34817e253a56,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6781,554ff38a160f896ddd7f0fdca1cd34817e253a56,/12/jdk/oracle/Dockerfile,# basic smoke test
6782,554ff38a160f896ddd7f0fdca1cd34817e253a56,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
6783,4c5beb8bdb21c746bef683f18bdeddee157f61fd,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6784,4c5beb8bdb21c746bef683f18bdeddee157f61fd,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
6785,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6786,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6787,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
6788,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6789,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jdk/Dockerfile,#!/bin/sh'; \
6790,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
6791,65f4567ed9294e7404b3d2d0c806249946e06210,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6792,65f4567ed9294e7404b3d2d0c806249946e06210,/openjdk-7-jdk/Dockerfile,# Default to UTF-8 file.encoding
6793,65f4567ed9294e7404b3d2d0c806249946e06210,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
6794,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6795,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6796,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6797,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
6798,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6799,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6800,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6801,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
6802,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6803,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6804,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6805,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
6806,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6807,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6808,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
6809,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
6810,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6811,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,#!/bin/sh'; \
6812,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6813,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
6814,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6815,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6816,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6817,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6818,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
6819,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6820,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6821,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
6822,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,# backwards compatibility shim
6823,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6824,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
6825,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
6826,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
6827,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,# amd64
6828,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,# fallback
6829,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
6830,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
6831,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
6832,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6833,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
6834,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6835,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6836,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,# basic smoke test
6837,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6838,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6839,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6840,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
6841,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6842,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6843,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
6844,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6845,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
6846,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,# backwards compatibility shim
6847,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6848,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,# https://jdk.java.net/
6849,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6850,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
6851,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6852,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6853,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6854,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,# basic smoke test
6855,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6856,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6857,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6858,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
6859,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6860,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6861,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
6862,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
6863,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
6864,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6865,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/oracle/Dockerfile,# basic smoke test
6866,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
6867,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6868,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/7-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6869,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/7-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
6870,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6871,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/7-jre/alpine/Dockerfile,#!/bin/sh'; \
6872,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6873,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6874,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
6875,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6876,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6877,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
6878,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/oracle/Dockerfile,# http://jdk.java.net/
6879,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
6880,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
6881,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/oracle/Dockerfile,# basic smoke test
6882,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
6883,fe489e584bd248f6ed6b379beed27eda755c5ba9,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6884,fe489e584bd248f6ed6b379beed27eda755c5ba9,/openjdk-8-jdk/Dockerfile,# Default to UTF-8 file.encoding
6885,fe489e584bd248f6ed6b379beed27eda755c5ba9,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
6886,fe489e584bd248f6ed6b379beed27eda755c5ba9,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
6887,fe489e584bd248f6ed6b379beed27eda755c5ba9,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
6888,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6889,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6890,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6891,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
6892,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6893,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6894,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
6895,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,# Default to UTF-8 file.encoding
6896,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6897,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,#!/bin/sh'; \
6898,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6899,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6900,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6901,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6902,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6903,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6904,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6905,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
6906,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6907,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6908,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
6909,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6910,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
6911,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
6912,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
6913,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,# arm64v8
6914,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,# amd64
6915,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,# fallback
6916,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
6917,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6918,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
6919,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,# basic smoke test
6920,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6921,643875b428551d5e2395e91933e9babc73044bc9,/13/jdk/alpine/Dockerfile,# https://jdk.java.net/
6922,643875b428551d5e2395e91933e9babc73044bc9,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
6923,643875b428551d5e2395e91933e9babc73044bc9,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6924,643875b428551d5e2395e91933e9babc73044bc9,/13/jdk/alpine/Dockerfile,# basic smoke test
6925,643875b428551d5e2395e91933e9babc73044bc9,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
6926,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
6927,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6928,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
6929,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6930,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
6931,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6932,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/oracle/Dockerfile,# basic smoke test
6933,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
6934,0584b2804ed12dca7c5e264b5fc55fc07a3ac148,/8-jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6935,0584b2804ed12dca7c5e264b5fc55fc07a3ac148,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6936,0584b2804ed12dca7c5e264b5fc55fc07a3ac148,/8-jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
6937,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6938,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6939,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6940,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
6941,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6942,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6943,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6944,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
6945,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6946,4e39684901490c13eaef7892c44e39043d7c4bed,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6947,4e39684901490c13eaef7892c44e39043d7c4bed,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6948,4e39684901490c13eaef7892c44e39043d7c4bed,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
6949,4e39684901490c13eaef7892c44e39043d7c4bed,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6950,4e39684901490c13eaef7892c44e39043d7c4bed,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
6951,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6952,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/7-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6953,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/7-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
6954,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6955,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/7-jre/alpine/Dockerfile,#!/bin/sh'; \
6956,c6c90f5e09a5dc1a1ccd662de8210342f94c673e,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6957,c6c90f5e09a5dc1a1ccd662de8210342f94c673e,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6958,c6c90f5e09a5dc1a1ccd662de8210342f94c673e,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
6959,c6c90f5e09a5dc1a1ccd662de8210342f94c673e,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6960,c6c90f5e09a5dc1a1ccd662de8210342f94c673e,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
6961,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6962,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6963,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
6964,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
6965,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
6966,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6967,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
6968,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
6969,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6970,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jre/alpine/Dockerfile,#!/bin/sh'; \
6971,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6972,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6973,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6974,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6975,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
6976,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6977,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6978,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6979,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6980,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6981,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6982,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
6983,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6984,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
6985,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6986,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
6987,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,# arm64v8
6988,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,# amd64
6989,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,# fallback
6990,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
6991,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6992,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
6993,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,# basic smoke test
6994,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
6995,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6996,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6997,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
6998,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6999,d183725a5acda253132f21011fe903f3924e7e12,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7000,d183725a5acda253132f21011fe903f3924e7e12,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7001,d183725a5acda253132f21011fe903f3924e7e12,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
7002,d183725a5acda253132f21011fe903f3924e7e12,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7003,d183725a5acda253132f21011fe903f3924e7e12,/9-jre/Dockerfile,#!/bin/sh'; \
7004,d183725a5acda253132f21011fe903f3924e7e12,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7005,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7006,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
7007,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/oracle/Dockerfile,# http://jdk.java.net/
7008,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7009,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
7010,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/oracle/Dockerfile,# basic smoke test
7011,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
7012,43b1402a2b3af1eb182c0c16fec01886c9db9c37,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7013,43b1402a2b3af1eb182c0c16fec01886c9db9c37,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
7014,43b1402a2b3af1eb182c0c16fec01886c9db9c37,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
7015,43b1402a2b3af1eb182c0c16fec01886c9db9c37,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
7016,43b1402a2b3af1eb182c0c16fec01886c9db9c37,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7017,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
7018,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
7019,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,# backwards compatibility shim
7020,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
7021,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
7022,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
7023,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
7024,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
7025,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
7026,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
7027,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
7028,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
7029,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
7030,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,# basic smoke test
7031,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7032,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7033,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7034,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
7035,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7036,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7037,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7038,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7039,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
7040,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7041,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7042,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7043,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7044,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
7045,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7046,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7047,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
7048,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/Dockerfile,# Default to UTF-8 file.encoding
7049,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7050,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/Dockerfile,#!/bin/sh'; \
7051,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7052,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7053,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7054,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7055,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7056,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7057,8f8d04a5f77116be8ebfcaf84e4fcbd1190b95e8,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7058,8f8d04a5f77116be8ebfcaf84e4fcbd1190b95e8,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7059,8f8d04a5f77116be8ebfcaf84e4fcbd1190b95e8,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
7060,8f8d04a5f77116be8ebfcaf84e4fcbd1190b95e8,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7061,8f8d04a5f77116be8ebfcaf84e4fcbd1190b95e8,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
7062,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7063,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7064,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
7065,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7066,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jre/Dockerfile,#!/bin/bash'; \
7067,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
7068,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
7069,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7070,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7071,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7072,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7073,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
7074,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7075,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7076,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
7077,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
7078,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7079,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
7080,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/oracle/Dockerfile,# basic smoke test
7081,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
7082,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7083,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7084,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7085,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
7086,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7087,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7088,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7089,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7090,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7091,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7092,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7093,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7094,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7095,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7096,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7097,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7098,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7099,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7100,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
7101,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7102,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7103,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7104,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7105,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7106,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
7107,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7108,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7109,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7110,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7111,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
7112,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7113,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
7114,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
7115,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7116,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
7117,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,# backwards compatibility shim
7118,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
7119,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
7120,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
7121,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,# amd64
7122,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,# fallback
7123,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
7124,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
7125,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
7126,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
7127,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7128,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,# basic smoke test
7129,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7130,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7131,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7132,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
7133,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7134,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
7135,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7136,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
7137,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
7138,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
7139,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,# arm64v8
7140,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,# amd64
7141,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,# fallback
7142,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7143,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7144,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
7145,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,# basic smoke test
7146,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7147,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
7148,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
7149,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,# backwards compatibility shim
7150,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
7151,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
7152,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
7153,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
7154,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
7155,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
7156,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
7157,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
7158,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
7159,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
7160,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,# basic smoke test
7161,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7162,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7163,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
7164,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
7165,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
7166,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7167,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7168,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7169,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
7170,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7171,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7172,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7173,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7174,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
7175,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7176,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
7177,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7178,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,# Default to UTF-8 file.encoding
7179,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
7180,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
7181,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,# arm64v8
7182,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,# amd64
7183,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,# fallback
7184,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7185,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7186,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
7187,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,# basic smoke test
7188,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7189,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
7190,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7191,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
7192,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7193,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
7194,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,# arm64v8
7195,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,# amd64
7196,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,# fallback
7197,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7198,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7199,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,# basic smoke test
7200,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
7201,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
7202,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7203,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
7204,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,# backwards compatibility shim
7205,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
7206,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
7207,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
7208,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
7209,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
7210,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
7211,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
7212,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,#!/usr/bin/env bash'; \
7213,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
7214,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
7215,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,# basic smoke test
7216,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7217,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7218,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7219,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
7220,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7221,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
7222,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7223,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,# Default to UTF-8 file.encoding
7224,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
7225,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
7226,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,# arm64v8
7227,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,# amd64
7228,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,# fallback
7229,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7230,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7231,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
7232,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,# basic smoke test
7233,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7234,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7235,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
7236,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
7237,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7238,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,#!/bin/sh'; \
7239,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7240,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7241,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
7242,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7243,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7244,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7245,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7246,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7247,5dba2054c6821e38a6d3fad32239369818289228,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7248,5dba2054c6821e38a6d3fad32239369818289228,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7249,5dba2054c6821e38a6d3fad32239369818289228,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
7250,5dba2054c6821e38a6d3fad32239369818289228,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7251,5dba2054c6821e38a6d3fad32239369818289228,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
7252,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7253,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7254,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7255,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
7256,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7257,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7258,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7259,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7260,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
7261,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
7262,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
7263,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7264,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
7265,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7266,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
7267,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7268,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7269,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7270,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/oracle/Dockerfile,# basic smoke test
7271,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
7272,4ab314dc41cb31313f630ce5e11398ef0f9e9ae9,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7273,4ab314dc41cb31313f630ce5e11398ef0f9e9ae9,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7274,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7275,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7276,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
7277,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7278,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jdk/Dockerfile,#!/bin/sh'; \
7279,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7280,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7281,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7282,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7283,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7284,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7285,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
7286,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
7287,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7288,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,#!/bin/sh'; \
7289,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7290,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
7291,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7292,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7293,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7294,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7295,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
7296,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7297,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7298,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7299,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
7300,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7301,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jdk/Dockerfile,#!/bin/sh'; \
7302,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
7303,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
7304,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7305,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
7306,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
7307,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7308,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
7309,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,# backwards compatibility shim
7310,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
7311,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7312,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
7313,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,# amd64
7314,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,# fallback
7315,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
7316,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
7317,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
7318,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
7319,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7320,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,# basic smoke test
7321,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7322,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7323,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7324,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7325,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1809/Dockerfile,# http://jdk.java.net/
7326,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7327,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7328,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
7329,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
7330,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7331,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/slim/Dockerfile,#!/bin/sh'; \
7332,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7333,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7334,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7335,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7336,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7337,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7338,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7339,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7340,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
7341,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7342,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jdk/Dockerfile,#!/bin/sh'; \
7343,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7344,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7345,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-7-jre/Dockerfile,# Default to UTF-8 file.encoding
7346,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7347,06552bdff28039988fca96ec7f810456849d420f,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7348,06552bdff28039988fca96ec7f810456849d420f,/7-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7349,06552bdff28039988fca96ec7f810456849d420f,/7-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
7350,06552bdff28039988fca96ec7f810456849d420f,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7351,06552bdff28039988fca96ec7f810456849d420f,/7-jdk/alpine/Dockerfile,#!/bin/sh'; \
7352,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7353,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
7354,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
7355,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7356,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/alpine/Dockerfile,#!/bin/sh'; \
7357,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7358,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7359,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7360,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7361,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
7362,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7363,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7364,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-6"
7365,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/Dockerfile,# Default to UTF-8 file.encoding
7366,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7367,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/Dockerfile,#!/bin/sh'; \
7368,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7369,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7370,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7371,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7372,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7373,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7374,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7375,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7376,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7377,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
7378,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7379,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/alpine/Dockerfile,# https://jdk.java.net/
7380,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
7381,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7382,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/alpine/Dockerfile,# basic smoke test
7383,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
7384,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7385,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
7386,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
7387,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7388,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,#!/bin/sh'; \
7389,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7390,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7391,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7392,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7393,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7394,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7395,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7396,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7397,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7398,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7399,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
7400,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7401,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
7402,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7403,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
7404,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,# backwards compatibility shim
7405,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
7406,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
7407,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
7408,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
7409,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
7410,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
7411,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
7412,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,#!/usr/bin/env bash'; \
7413,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
7414,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
7415,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,# basic smoke test
7416,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7417,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7418,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7419,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7420,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1809/Dockerfile,# http://jdk.java.net/
7421,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7422,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7423,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
7424,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,# Default to UTF-8 file.encoding
7425,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7426,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,#!/bin/sh'; \
7427,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7428,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7429,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
7430,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7431,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7432,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7433,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7434,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7435,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7436,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7437,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7438,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7439,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7440,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7441,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
7442,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7443,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,#!/bin/sh'; \
7444,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7445,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
7446,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7447,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7448,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7449,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
7450,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7451,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7452,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
7453,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
7454,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7455,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,#!/bin/sh'; \
7456,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7457,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7458,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
7459,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7460,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7461,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7462,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7463,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7464,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
7465,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
7466,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7467,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,#!/bin/sh'; \
7468,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7469,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7470,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7471,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7472,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7473,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7474,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7475,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7476,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
7477,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,# Default to UTF-8 file.encoding
7478,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7479,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,#!/bin/sh'; \
7480,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7481,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7482,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7483,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7484,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7485,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7486,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7487,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
7488,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7489,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,# Default to UTF-8 file.encoding
7490,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
7491,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
7492,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,# amd64
7493,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,# fallback
7494,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7495,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7496,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
7497,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,# basic smoke test
7498,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7499,bcf0fea5a62cb2a75015e2dc2ce05bbc89afcd7d,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7500,bcf0fea5a62cb2a75015e2dc2ce05bbc89afcd7d,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7501,1b4378dc7b57c8534fe715cfcec356ee96c87e92,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7502,1b4378dc7b57c8534fe715cfcec356ee96c87e92,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7503,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7504,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7505,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
7506,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7507,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7508,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
7509,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
7510,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7511,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/Dockerfile,#!/bin/sh'; \
7512,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7513,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7514,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7515,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7516,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7517,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7518,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
7519,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7520,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
7521,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,# backwards compatibility shim
7522,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
7523,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
7524,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
7525,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
7526,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
7527,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
7528,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
7529,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,#!/usr/bin/env bash'; \
7530,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
7531,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
7532,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,# basic smoke test
7533,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
7534,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7535,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
7536,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,# backwards compatibility shim
7537,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
7538,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
7539,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
7540,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
7541,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
7542,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
7543,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
7544,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,#!/usr/bin/env bash'; \
7545,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
7546,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
7547,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,# basic smoke test
7548,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
7549,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7550,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
7551,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,# backwards compatibility shim
7552,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
7553,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
7554,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
7555,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
7556,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
7557,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
7558,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
7559,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,#!/usr/bin/env bash'; \
7560,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
7561,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
7562,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,# basic smoke test
7563,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7564,ef8af39fafdaaf4eeb8137c194aa8a51f8c56334,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7565,ef8af39fafdaaf4eeb8137c194aa8a51f8c56334,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7566,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7567,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7568,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
7569,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7570,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jdk/Dockerfile,#!/bin/bash'; \
7571,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
7572,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
7573,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7574,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7575,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7576,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
7577,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
7578,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
7579,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
7580,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7581,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
7582,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,# backwards compatibility shim
7583,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
7584,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
7585,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
7586,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
7587,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
7588,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
7589,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
7590,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,#!/usr/bin/env bash'; \
7591,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
7592,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
7593,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,# basic smoke test
7594,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
7595,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7596,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
7597,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,# backwards compatibility shim
7598,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
7599,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
7600,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
7601,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
7602,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
7603,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
7604,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
7605,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,#!/usr/bin/env bash'; \
7606,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
7607,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
7608,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,# basic smoke test
7609,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7610,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7611,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
7612,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7613,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jre/Dockerfile,#!/bin/sh'; \
7614,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
7615,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
7616,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7617,2544422915ae09bf77b02f0afaadaad5ba204cef,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7618,2544422915ae09bf77b02f0afaadaad5ba204cef,/12/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
7619,2544422915ae09bf77b02f0afaadaad5ba204cef,/12/jdk/oracle/Dockerfile,# https://jdk.java.net/
7620,2544422915ae09bf77b02f0afaadaad5ba204cef,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7621,2544422915ae09bf77b02f0afaadaad5ba204cef,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7622,2544422915ae09bf77b02f0afaadaad5ba204cef,/12/jdk/oracle/Dockerfile,# basic smoke test
7623,2544422915ae09bf77b02f0afaadaad5ba204cef,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
7624,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
7625,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7626,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
7627,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7628,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7629,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7630,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/oracle/Dockerfile,# basic smoke test
7631,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
7632,882461ade8207de7647d083009200de85eb978bc,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7633,882461ade8207de7647d083009200de85eb978bc,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7634,882461ade8207de7647d083009200de85eb978bc,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
7635,882461ade8207de7647d083009200de85eb978bc,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7636,882461ade8207de7647d083009200de85eb978bc,/9-jdk/Dockerfile,#!/bin/sh'; \
7637,882461ade8207de7647d083009200de85eb978bc,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7638,882461ade8207de7647d083009200de85eb978bc,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7639,882461ade8207de7647d083009200de85eb978bc,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7640,882461ade8207de7647d083009200de85eb978bc,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7641,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7642,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
7643,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
7644,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7645,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/slim/Dockerfile,#!/bin/sh'; \
7646,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7647,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7648,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7649,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7650,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7651,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7652,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7653,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7654,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7655,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
7656,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7657,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7658,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7659,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7660,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7661,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7662,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
7663,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
7664,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,# backwards compatibility shim
7665,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
7666,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
7667,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
7668,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
7669,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
7670,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
7671,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
7672,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
7673,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
7674,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
7675,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,# basic smoke test
7676,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7677,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
7678,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
7679,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7680,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,#!/bin/sh'; \
7681,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7682,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
7683,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7684,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7685,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7686,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7687,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
7688,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7689,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7690,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7691,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7692,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
7693,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7694,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7695,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7696,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
7697,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7698,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7699,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
7700,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
7701,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7702,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,#!/bin/sh'; \
7703,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7704,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7705,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (a case of https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
7706,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7707,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7708,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7709,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7710,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7711,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
7712,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
7713,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7714,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,# Default to UTF-8 file.encoding
7715,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,# backwards compatibility shim
7716,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
7717,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7718,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
7719,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,#!/usr/bin/env bash'; \
7720,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
7721,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
7722,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7723,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,# basic smoke test
7724,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7725,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/alpine/Dockerfile,# http://jdk.java.net/
7726,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
7727,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
7728,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/alpine/Dockerfile,# basic smoke test
7729,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
7730,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7731,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
7732,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
7733,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7734,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/Dockerfile,#!/bin/sh'; \
7735,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7736,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7737,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7738,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7739,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7740,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7741,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7742,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
7743,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
7744,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7745,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7746,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/oracle/Dockerfile,# basic smoke test
7747,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
7748,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7749,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7750,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
7751,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7752,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7753,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7754,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
7755,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7756,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7757,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7758,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
7759,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7760,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7761,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7762,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7763,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7764,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7765,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7766,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7767,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7768,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
7769,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,# Default to UTF-8 file.encoding
7770,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7771,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,#!/bin/sh'; \
7772,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7773,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7774,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
7775,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7776,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7777,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7778,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7779,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7780,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7781,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
7782,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7783,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jre/Dockerfile,#!/bin/sh'; \
7784,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
7785,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
7786,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7787,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7788,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7789,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
7790,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7791,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7792,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7793,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
7794,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7795,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
7796,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7797,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
7798,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,# backwards compatibility shim
7799,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
7800,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
7801,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
7802,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
7803,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
7804,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
7805,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
7806,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,#!/usr/bin/env bash'; \
7807,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
7808,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
7809,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,# basic smoke test
7810,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7811,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
7812,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
7813,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,# backwards compatibility shim
7814,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
7815,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
7816,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
7817,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
7818,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
7819,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
7820,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
7821,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
7822,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
7823,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,# basic smoke test
7824,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7825,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
7826,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
7827,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7828,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7829,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
7830,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
7831,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7832,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,#!/bin/sh'; \
7833,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7834,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
7835,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7836,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7837,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7838,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7839,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
7840,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7841,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7842,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7843,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
7844,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7845,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jre/Dockerfile,#!/bin/sh'; \
7846,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7847,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7848,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7849,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
7850,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7851,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jre/Dockerfile,#!/bin/sh'; \
7852,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
7853,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
7854,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7855,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
7856,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7857,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7858,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7859,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7860,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7861,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7862,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7863,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7864,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7865,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7866,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
7867,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7868,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
7869,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/nanoserver-1803/Dockerfile,# https://jdk.java.net/
7870,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7871,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7872,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
7873,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
7874,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7875,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7876,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/oracle/Dockerfile,# basic smoke test
7877,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
7878,6f340724d3bc1f9b4385975c5de6bfe15aac8c85,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7879,6f340724d3bc1f9b4385975c5de6bfe15aac8c85,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
7880,6f340724d3bc1f9b4385975c5de6bfe15aac8c85,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
7881,6f340724d3bc1f9b4385975c5de6bfe15aac8c85,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
7882,6f340724d3bc1f9b4385975c5de6bfe15aac8c85,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7883,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
7884,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7885,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7886,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
7887,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
7888,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,# backwards compatibility shim
7889,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
7890,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7891,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
7892,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
7893,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
7894,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
7895,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7896,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,# basic smoke test
7897,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7898,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
7899,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7900,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7901,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
7902,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7903,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jdk/Dockerfile,#!/bin/sh'; \
7904,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7905,36a0de603602114458516929dbc4a62d12c1d4c2,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7906,36a0de603602114458516929dbc4a62d12c1d4c2,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7907,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7908,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7909,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
7910,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7911,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7912,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7913,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7914,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7915,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7916,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7917,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
7918,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
7919,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7920,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,#!/bin/sh'; \
7921,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7922,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7923,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (a case of https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
7924,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7925,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7926,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7927,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7928,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7929,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7930,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7931,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
7932,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7933,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7934,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
7935,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
7936,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7937,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,#!/bin/sh'; \
7938,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7939,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7940,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7941,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7942,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7943,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7944,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7945,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7946,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7947,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jre/Dockerfile,# Default to UTF-8 file.encoding
7948,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7949,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jre/Dockerfile,#!/bin/sh'; \
7950,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7951,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7952,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7953,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7954,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7955,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
7956,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
7957,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7958,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/Dockerfile,#!/bin/sh'; \
7959,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7960,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7961,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7962,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7963,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7964,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7965,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7966,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-8-jdk/Dockerfile,# Default to UTF-8 file.encoding
7967,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
7968,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
7969,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7970,6cc25ee35281099423e521713f710d2549209600,/7/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7971,6cc25ee35281099423e521713f710d2549209600,/7/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7972,4135ad55c2577bd722c575a41211c59669353d54,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7973,4135ad55c2577bd722c575a41211c59669353d54,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7974,4135ad55c2577bd722c575a41211c59669353d54,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
7975,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
7976,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7977,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
7978,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7979,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7980,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7981,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/oracle/Dockerfile,# basic smoke test
7982,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
7983,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7984,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
7985,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,# Default to UTF-8 file.encoding
7986,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7987,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,#!/bin/sh'; \
7988,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7989,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7990,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
7991,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7992,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7993,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7994,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7995,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
7996,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
7997,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7998,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
7999,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,# backwards compatibility shim
8000,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8001,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8002,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8003,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
8004,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8005,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8006,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8007,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,# basic smoke test
8008,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8009,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8010,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8011,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8012,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
8013,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,# backwards compatibility shim
8014,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8015,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8016,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8017,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
8018,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8019,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8020,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8021,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,# basic smoke test
8022,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8023,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8024,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8025,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8026,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
8027,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8028,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8029,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jdk/Dockerfile,# Default to UTF-8 file.encoding
8030,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
8031,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
8032,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586"
8033,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8034,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8035,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8036,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8037,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
8038,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8039,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8040,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8041,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8042,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
8043,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8044,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8045,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8046,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8047,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8048,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8049,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8050,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8051,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
8052,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
8053,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
8054,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8055,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
8056,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
8057,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8058,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/Dockerfile,#!/bin/sh'; \
8059,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8060,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8061,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8062,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8063,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8064,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8065,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8066,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8067,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8068,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
8069,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8070,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8071,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8072,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
8073,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8074,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8075,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8076,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
8077,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
8078,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8079,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8080,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/14/jdk/oracle/Dockerfile,# basic smoke test
8081,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
8082,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8083,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
8084,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
8085,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8086,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,#!/bin/sh'; \
8087,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8088,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8089,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
8090,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8091,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8092,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8093,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8094,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8095,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8096,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8097,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,# Default to UTF-8 file.encoding
8098,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
8099,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
8100,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,# amd64
8101,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,# fallback
8102,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8103,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8104,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
8105,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,# basic smoke test
8106,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8107,0476812eabd178c77534f3c03bd0a2673822d7b9,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8108,0476812eabd178c77534f3c03bd0a2673822d7b9,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8109,0476812eabd178c77534f3c03bd0a2673822d7b9,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
8110,0476812eabd178c77534f3c03bd0a2673822d7b9,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8111,0476812eabd178c77534f3c03bd0a2673822d7b9,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
8112,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8113,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8114,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
8115,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
8116,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
8117,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8118,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8119,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
8120,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,# backwards compatibility shim
8121,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8122,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
8123,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
8124,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,# arm64v8
8125,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,# amd64
8126,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,# fallback
8127,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8128,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
8129,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8130,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8131,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8132,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,# basic smoke test
8133,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8134,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8135,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8136,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
8137,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,# backwards compatibility shim
8138,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8139,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
8140,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
8141,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
8142,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
8143,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
8144,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8145,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,#!/usr/bin/env bash'; \
8146,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8147,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8148,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,# basic smoke test
8149,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8150,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/alpine3.12/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
8151,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/alpine3.12/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
8152,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/alpine3.12/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
8153,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/alpine3.12/Dockerfile,# amd64
8154,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/alpine3.12/Dockerfile,# fallback
8155,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/alpine3.12/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
8156,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/alpine3.12/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8157,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/alpine3.12/Dockerfile,# basic smoke test
8158,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/alpine3.12/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8159,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8160,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
8161,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
8162,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8163,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jre/alpine/Dockerfile,#!/bin/sh'; \
8164,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jre/alpine/Dockerfile,# https://bugs.alpinelinux.org/issues/10126
8165,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8166,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8167,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8168,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8169,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8170,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8171,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8172,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8173,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8174,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8175,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8176,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
8177,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
8178,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
8179,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8180,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
8181,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,# Default to UTF-8 file.encoding
8182,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8183,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,#!/bin/sh'; \
8184,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8185,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8186,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8187,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8188,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8189,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8190,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8191,b5fc89ceebc210c08a2b82709dd2a92fcebbae38,/8/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8192,b5fc89ceebc210c08a2b82709dd2a92fcebbae38,/8/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8193,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8194,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8195,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
8196,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
8197,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8198,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8199,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/oracle/Dockerfile,# basic smoke test
8200,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
8201,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8202,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
8203,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
8204,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8205,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,#!/bin/sh'; \
8206,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8207,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8208,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
8209,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8210,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8211,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8212,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8213,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8214,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8215,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
8216,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8217,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8218,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8219,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
8220,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8221,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8222,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8223,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/oracle/Dockerfile,# basic smoke test
8224,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
8225,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8226,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8227,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
8228,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
8229,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
8230,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8231,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8232,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8233,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8234,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
8235,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,# backwards compatibility shim
8236,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8237,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8238,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8239,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
8240,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8241,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8242,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8243,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,# basic smoke test
8244,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8245,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8246,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
8247,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
8248,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8249,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8250,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/oracle/Dockerfile,# basic smoke test
8251,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
8252,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8253,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8254,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8255,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
8256,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8257,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8258,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8259,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,# Default to UTF-8 file.encoding
8260,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
8261,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
8262,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,# arm64v8
8263,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,# amd64
8264,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,# fallback
8265,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8266,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8267,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
8268,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,# basic smoke test
8269,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8270,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8271,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8272,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
8273,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
8274,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
8275,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8276,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
8277,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
8278,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8279,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
8280,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/oracle/Dockerfile,# basic smoke test
8281,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
8282,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8283,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
8284,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
8285,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8286,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,#!/bin/sh'; \
8287,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8288,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8289,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8290,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8291,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8292,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8293,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8294,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8295,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
8296,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,# backwards compatibility shim
8297,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8298,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8299,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8300,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
8301,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8302,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8303,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8304,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,# basic smoke test
8305,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8306,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
8307,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8308,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8309,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8310,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
8311,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8312,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8313,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
8314,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
8315,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8316,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jdk/alpine/Dockerfile,#!/bin/sh'; \
8317,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8318,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8319,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8320,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
8321,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
8322,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
8323,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8324,38cb0eb077acf2a429f32a879903cd305733d561,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8325,38cb0eb077acf2a429f32a879903cd305733d561,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
8326,38cb0eb077acf2a429f32a879903cd305733d561,/8/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
8327,38cb0eb077acf2a429f32a879903cd305733d561,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8328,38cb0eb077acf2a429f32a879903cd305733d561,/8/jre/alpine/Dockerfile,#!/bin/sh'; \
8329,38cb0eb077acf2a429f32a879903cd305733d561,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8330,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8331,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
8332,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,# backwards compatibility shim
8333,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8334,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
8335,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
8336,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,# arm64v8
8337,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,# amd64
8338,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,# fallback
8339,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8340,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
8341,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8342,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8343,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8344,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,# basic smoke test
8345,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8346,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8347,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
8348,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
8349,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8350,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
8351,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/oracle/Dockerfile,# basic smoke test
8352,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
8353,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
8354,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/slim/Dockerfile,# backwards compatibility shim
8355,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8356,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
8357,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
8358,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
8359,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
8360,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/slim/Dockerfile,# basic smoke test
8361,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8362,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8363,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
8364,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
8365,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8366,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/Dockerfile,#!/bin/sh'; \
8367,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8368,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8369,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8370,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8371,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8372,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8373,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8374,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-7-jre/Dockerfile,# Default to UTF-8 file.encoding
8375,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8376,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8377,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8378,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8379,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
8380,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,# backwards compatibility shim
8381,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8382,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8383,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
8384,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,# arm64v8
8385,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,# amd64
8386,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,# fallback
8387,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8388,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
8389,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8390,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8391,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8392,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,# basic smoke test
8393,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8394,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8395,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
8396,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,# backwards compatibility shim
8397,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8398,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
8399,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
8400,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
8401,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
8402,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
8403,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8404,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
8405,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8406,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8407,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,# basic smoke test
8408,15835397954c9ec123e42e685035ecd239e0a1db,/8/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
8409,15835397954c9ec123e42e685035ecd239e0a1db,/8/jdk/windows/nanoserver-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
8410,15835397954c9ec123e42e685035ecd239e0a1db,/8/jdk/windows/nanoserver-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
8411,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8412,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8413,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,# Default to UTF-8 file.encoding
8414,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
8415,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
8416,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,# arm64v8
8417,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,# amd64
8418,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,# fallback
8419,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8420,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8421,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
8422,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,# basic smoke test
8423,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8424,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8425,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8426,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
8427,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8428,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jdk/Dockerfile,#!/bin/sh'; \
8429,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8430,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8431,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8432,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8433,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8434,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/8-jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8435,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/8-jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8436,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/8-jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
8437,42abb498353aae46a5766659faf3853edc441bde,/8/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8438,42abb498353aae46a5766659faf3853edc441bde,/8/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8439,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
8440,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
8441,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
8442,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8443,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
8444,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
8445,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8446,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jdk/alpine/Dockerfile,#!/bin/sh'; \
8447,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8448,873fb56728befef8ecaf8436c3a27fd239cba301,/8-jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8449,873fb56728befef8ecaf8436c3a27fd239cba301,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8450,873fb56728befef8ecaf8436c3a27fd239cba301,/8-jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
8451,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8452,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
8453,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
8454,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8455,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/slim/Dockerfile,#!/bin/sh'; \
8456,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8457,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8458,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8459,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8460,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8461,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8462,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8463,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8464,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8465,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8466,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8467,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8468,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8469,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8470,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
8471,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,# backwards compatibility shim
8472,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8473,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8474,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
8475,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,# arm64v8
8476,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,# amd64
8477,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,# fallback
8478,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8479,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
8480,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8481,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8482,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8483,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,# basic smoke test
8484,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8485,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8486,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8487,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8488,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
8489,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8490,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8491,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8492,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
8493,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
8494,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
8495,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,# arm64v8
8496,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,# amd64
8497,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,# fallback
8498,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8499,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8500,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
8501,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,# basic smoke test
8502,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8503,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8504,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8505,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8506,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8507,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8508,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8509,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8510,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
8511,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8512,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8513,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8514,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/oracle/Dockerfile,# basic smoke test
8515,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
8516,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8517,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
8518,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,# Default to UTF-8 file.encoding
8519,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8520,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,#!/bin/sh'; \
8521,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8522,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8523,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
8524,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8525,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8526,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8527,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8528,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8529,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8530,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
8531,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8532,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8533,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8534,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8535,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
8536,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8537,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8538,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8539,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8540,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8541,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8542,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8543,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
8544,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,# backwards compatibility shim
8545,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8546,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
8547,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
8548,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,# amd64
8549,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,# fallback
8550,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8551,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
8552,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8553,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8554,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8555,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,# basic smoke test
8556,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8557,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/alpine/Dockerfile,# http://jdk.java.net/
8558,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
8559,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
8560,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/alpine/Dockerfile,# basic smoke test
8561,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
8562,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8563,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8564,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
8565,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8566,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
8567,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,# arm64v8
8568,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,# amd64
8569,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,# fallback
8570,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8571,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8572,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
8573,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,# basic smoke test
8574,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
8575,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8576,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8577,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
8578,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8579,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8580,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
8581,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,# backwards compatibility shim
8582,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8583,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
8584,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
8585,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
8586,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
8587,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
8588,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8589,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
8590,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8591,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,# basic smoke test
8592,6294b7d4b299639ec519dfd92782632f498eb1d2,/8-jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8593,6294b7d4b299639ec519dfd92782632f498eb1d2,/8-jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8594,6294b7d4b299639ec519dfd92782632f498eb1d2,/8-jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
8595,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8596,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
8597,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
8598,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8599,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/slim/Dockerfile,#!/bin/sh'; \
8600,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8601,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8602,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8603,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8604,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8605,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8606,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8607,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8608,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,# Default to UTF-8 file.encoding
8609,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
8610,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
8611,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,# arm64v8
8612,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,# amd64
8613,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,# fallback
8614,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8615,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8616,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
8617,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,# basic smoke test
8618,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8619,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8620,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8621,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
8622,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
8623,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
8624,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,# arm64v8
8625,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,# amd64
8626,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,# fallback
8627,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8628,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8629,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
8630,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,# basic smoke test
8631,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8632,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8633,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8634,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8635,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
8636,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8637,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8638,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8639,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
8640,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
8641,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
8642,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8643,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8644,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8645,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
8646,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8647,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8648,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
8649,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
8650,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8651,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,#!/bin/sh'; \
8652,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8653,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
8654,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8655,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8656,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8657,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8658,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
8659,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8660,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8661,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
8662,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
8663,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8664,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
8665,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8666,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8667,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
8668,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
8669,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8670,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8671,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8672,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8673,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8674,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8675,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
8676,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
8677,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8678,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/Dockerfile,#!/bin/sh'; \
8679,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8680,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8681,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8682,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8683,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8684,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8685,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8686,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8687,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
8688,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8689,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jre/Dockerfile,#!/bin/sh'; \
8690,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8691,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8692,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8693,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8694,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
8695,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8696,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8697,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
8698,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,# backwards compatibility shim
8699,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8700,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8701,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
8702,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,# arm64v8
8703,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,# amd64
8704,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,# fallback
8705,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8706,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
8707,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8708,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8709,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8710,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,# basic smoke test
8711,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8712,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8713,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
8714,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,# backwards compatibility shim
8715,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8716,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
8717,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
8718,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
8719,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
8720,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
8721,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8722,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
8723,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8724,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8725,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,# basic smoke test
8726,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8727,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8728,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jre/Dockerfile,# Default to UTF-8 file.encoding
8729,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8730,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jre/Dockerfile,#!/bin/sh'; \
8731,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8732,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8733,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8734,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
8735,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,# backwards compatibility shim
8736,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8737,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
8738,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
8739,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
8740,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,# arm64v8
8741,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,# amd64
8742,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,# fallback
8743,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
8744,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
8745,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
8746,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8747,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
8748,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8749,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8750,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,# basic smoke test
8751,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8752,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8753,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8754,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
8755,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,# backwards compatibility shim
8756,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8757,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
8758,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
8759,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
8760,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
8761,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
8762,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8763,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,#!/usr/bin/env bash'; \
8764,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8765,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8766,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,# basic smoke test
8767,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8768,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8769,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8770,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
8771,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8772,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8773,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8774,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
8775,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8776,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jre/Dockerfile,#!/bin/sh'; \
8777,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8778,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8779,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8780,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
8781,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8782,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8783,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8784,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
8785,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,# backwards compatibility shim
8786,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8787,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
8788,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
8789,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
8790,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
8791,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
8792,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8793,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,#!/usr/bin/env bash'; \
8794,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8795,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8796,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,# basic smoke test
8797,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8798,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8799,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
8800,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
8801,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8802,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
8803,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8804,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8805,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8806,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8807,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8808,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8809,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8810,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8811,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8812,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8813,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8814,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
8815,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8816,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8817,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8818,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8819,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
8820,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8821,d617d7e4b951735c512f3d5ac7672f7394115c91,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8822,d617d7e4b951735c512f3d5ac7672f7394115c91,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8823,d617d7e4b951735c512f3d5ac7672f7394115c91,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
8824,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8825,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8826,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
8827,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
8828,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
8829,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,# amd64
8830,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,# fallback
8831,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8832,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8833,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
8834,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,# basic smoke test
8835,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8836,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8837,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
8838,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
8839,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8840,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/slim/Dockerfile,#!/bin/sh'; \
8841,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8842,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8843,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8844,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8845,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8846,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8847,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8848,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
8849,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/Dockerfile,# Default to UTF-8 file.encoding
8850,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8851,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/Dockerfile,#!/bin/sh'; \
8852,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8853,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8854,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8855,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8856,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8857,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8858,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8859,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8860,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
8861,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8862,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8863,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8864,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/oracle/Dockerfile,# basic smoke test
8865,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
8866,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/8/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
8867,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
8868,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
8869,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8870,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8871,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8872,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
8873,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,# backwards compatibility shim
8874,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8875,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8876,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8877,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
8878,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8879,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8880,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8881,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,# basic smoke test
8882,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8883,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8884,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8885,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
8886,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8887,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8888,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8889,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
8890,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8891,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8892,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8893,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/oracle/Dockerfile,# basic smoke test
8894,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
8895,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8896,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
8897,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
8898,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8899,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
8900,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8901,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8902,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8903,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8904,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8905,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8906,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8907,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8908,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
8909,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
8910,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8911,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/alpine/Dockerfile,#!/bin/sh'; \
8912,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8913,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
8914,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8915,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8916,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
8917,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8918,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8919,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8920,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8921,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8922,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
8923,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8924,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8925,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
8926,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,# Default to UTF-8 file.encoding
8927,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8928,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,#!/bin/sh'; \
8929,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8930,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8931,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8932,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8933,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8934,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8935,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8936,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8937,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-7-jdk/Dockerfile,# Default to UTF-8 file.encoding
8938,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8939,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8940,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
8941,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,# backwards compatibility shim
8942,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8943,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
8944,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
8945,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
8946,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
8947,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
8948,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8949,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
8950,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8951,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8952,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,# basic smoke test
8953,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8954,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8955,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
8956,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8957,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jre/Dockerfile,#!/bin/sh'; \
8958,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8959,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8960,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8961,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8962,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8963,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8964,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8965,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8966,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8967,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
8968,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8969,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8970,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8971,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8972,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8973,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
8974,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8975,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8976,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8977,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8978,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
8979,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8980,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8981,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8982,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8983,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
8984,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8985,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8986,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
8987,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,# backwards compatibility shim
8988,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8989,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8990,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8991,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
8992,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8993,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8994,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8995,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,# basic smoke test
8996,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8997,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
8998,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8999,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9000,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
9001,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
9002,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
9003,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9004,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
9005,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
9006,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9007,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9008,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/oracle/Dockerfile,# basic smoke test
9009,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9010,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9011,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
9012,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,# backwards compatibility shim
9013,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9014,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9015,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
9016,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,# arm64v8
9017,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,# amd64
9018,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,# fallback
9019,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9020,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
9021,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9022,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9023,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9024,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,# basic smoke test
9025,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9026,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9027,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9028,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9029,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
9030,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9031,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9032,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9033,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
9034,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9035,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
9036,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,# arm64v8
9037,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,# amd64
9038,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,# fallback
9039,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9040,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9041,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,# basic smoke test
9042,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9043,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
9044,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9045,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9046,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/windows/windowsservercore/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9047,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9048,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/windows/windowsservercore/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
9049,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/windows/windowsservercore/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9050,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9051,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
9052,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/Dockerfile,# Default to UTF-8 file.encoding
9053,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9054,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/Dockerfile,#!/bin/sh'; \
9055,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9056,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9057,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9058,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9059,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9060,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9061,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9062,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9063,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9064,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
9065,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,# backwards compatibility shim
9066,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9067,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9068,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9069,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
9070,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9071,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9072,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9073,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,# basic smoke test
9074,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9075,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9076,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9077,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9078,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
9079,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9080,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9081,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9082,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9083,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
9084,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9085,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9086,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
9087,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
9088,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9089,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
9090,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9091,06552bdff28039988fca96ec7f810456849d420f,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9092,06552bdff28039988fca96ec7f810456849d420f,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9093,06552bdff28039988fca96ec7f810456849d420f,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
9094,06552bdff28039988fca96ec7f810456849d420f,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9095,06552bdff28039988fca96ec7f810456849d420f,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
9096,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9097,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9098,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9099,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
9100,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9101,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9102,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
9103,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
9104,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9105,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9106,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/oracle/Dockerfile,# basic smoke test
9107,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9108,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9109,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9110,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9111,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
9112,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9113,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9114,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9115,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9116,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
9117,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9118,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9119,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
9120,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9121,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9122,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
9123,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
9124,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9125,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/alpine/Dockerfile,#!/bin/sh'; \
9126,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9127,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9128,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
9129,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
9130,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9131,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,#!/bin/sh'; \
9132,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9133,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9134,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
9135,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
9136,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9137,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9138,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9139,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9140,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9141,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9142,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9143,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
9144,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9145,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9146,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9147,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
9148,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,# backwards compatibility shim
9149,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9150,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9151,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
9152,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,# amd64
9153,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,# fallback
9154,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9155,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
9156,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9157,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9158,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9159,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,# basic smoke test
9160,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9161,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9162,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9163,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9164,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
9165,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9166,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9167,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
9168,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
9169,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9170,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/Dockerfile,#!/bin/sh'; \
9171,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9172,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9173,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9174,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9175,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9176,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9177,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9178,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
9179,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
9180,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9181,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/slim/Dockerfile,#!/bin/sh'; \
9182,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9183,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9184,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9185,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9186,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9187,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9188,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9189,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9190,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jdk/Dockerfile,# Default to UTF-8 file.encoding
9191,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9192,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jdk/Dockerfile,#!/bin/bash'; \
9193,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
9194,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9195,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9196,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
9197,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
9198,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9199,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9200,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/14/jdk/oracle/Dockerfile,# basic smoke test
9201,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9202,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9203,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9204,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9205,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9206,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9207,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
9208,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/nanoserver-1803/Dockerfile,# https://jdk.java.net/
9209,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9210,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9211,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9212,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
9213,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,# backwards compatibility shim
9214,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9215,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
9216,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
9217,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
9218,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
9219,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
9220,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9221,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,#!/usr/bin/env bash'; \
9222,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9223,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,# basic smoke test
9224,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
9225,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/slim/Dockerfile,# backwards compatibility shim
9226,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9227,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
9228,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
9229,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
9230,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
9231,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
9232,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/slim/Dockerfile,# basic smoke test
9233,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9234,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9235,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9236,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
9237,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,# backwards compatibility shim
9238,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9239,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9240,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9241,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
9242,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9243,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9244,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9245,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,# basic smoke test
9246,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9247,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9248,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9249,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
9250,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9251,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9252,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9253,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9254,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
9255,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,# backwards compatibility shim
9256,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9257,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9258,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
9259,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,# arm64v8
9260,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,# amd64
9261,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,# fallback
9262,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9263,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
9264,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9265,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9266,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9267,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,# basic smoke test
9268,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9269,882461ade8207de7647d083009200de85eb978bc,/6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9270,882461ade8207de7647d083009200de85eb978bc,/6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9271,882461ade8207de7647d083009200de85eb978bc,/6-jdk/Dockerfile,# Default to UTF-8 file.encoding
9272,882461ade8207de7647d083009200de85eb978bc,/6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9273,882461ade8207de7647d083009200de85eb978bc,/6-jdk/Dockerfile,#!/bin/sh'; \
9274,882461ade8207de7647d083009200de85eb978bc,/6-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9275,882461ade8207de7647d083009200de85eb978bc,/6-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9276,882461ade8207de7647d083009200de85eb978bc,/6-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9277,882461ade8207de7647d083009200de85eb978bc,/6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
9278,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9279,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9280,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
9281,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9282,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jre/Dockerfile,#!/bin/sh'; \
9283,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
9284,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9285,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9286,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9287,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
9288,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,# backwards compatibility shim
9289,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9290,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
9291,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
9292,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,# arm64v8
9293,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,# amd64
9294,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,# fallback
9295,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9296,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
9297,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9298,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9299,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9300,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,# basic smoke test
9301,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9302,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9303,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9304,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9305,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
9306,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9307,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/alpine/Dockerfile,# https://jdk.java.net/
9308,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
9309,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9310,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/alpine/Dockerfile,# basic smoke test
9311,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9312,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
9313,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9314,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9315,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9316,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9317,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9318,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
9319,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9320,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9321,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9322,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9323,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9324,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9325,3057ebcdbe57f042e13274a0a87c79a81f8f2dfc,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9326,3057ebcdbe57f042e13274a0a87c79a81f8f2dfc,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9327,3057ebcdbe57f042e13274a0a87c79a81f8f2dfc,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9328,3057ebcdbe57f042e13274a0a87c79a81f8f2dfc,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
9329,3057ebcdbe57f042e13274a0a87c79a81f8f2dfc,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9330,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9331,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
9332,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/oracle/Dockerfile,# https://jdk.java.net/
9333,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9334,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9335,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/oracle/Dockerfile,# basic smoke test
9336,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9337,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9338,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
9339,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/oracle/Dockerfile,# http://jdk.java.net/
9340,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9341,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
9342,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/oracle/Dockerfile,# basic smoke test
9343,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9344,30b27d0b3b16ae395859ba47610b858076324508,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9345,30b27d0b3b16ae395859ba47610b858076324508,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9346,30b27d0b3b16ae395859ba47610b858076324508,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
9347,30b27d0b3b16ae395859ba47610b858076324508,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9348,30b27d0b3b16ae395859ba47610b858076324508,/9-jdk/Dockerfile,#!/bin/sh'; \
9349,30b27d0b3b16ae395859ba47610b858076324508,/9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
9350,30b27d0b3b16ae395859ba47610b858076324508,/9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
9351,30b27d0b3b16ae395859ba47610b858076324508,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
9352,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9353,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9354,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9355,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,# Default to UTF-8 file.encoding
9356,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,# backwards compatibility shim
9357,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9358,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9359,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9360,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,#!/usr/bin/env bash'; \
9361,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9362,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9363,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9364,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,# basic smoke test
9365,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9366,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9367,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9368,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9369,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9370,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9371,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9372,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
9373,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/oracle/Dockerfile,# http://jdk.java.net/
9374,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9375,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
9376,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/oracle/Dockerfile,# basic smoke test
9377,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9378,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9379,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
9380,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
9381,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9382,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/Dockerfile,#!/bin/sh'; \
9383,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9384,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9385,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9386,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9387,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9388,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9389,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9390,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9391,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
9392,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9393,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
9394,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
9395,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
9396,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9397,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9398,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9399,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9400,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
9401,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9402,0cdf33bad33f7297e125b5ae8625299654eb34ae,/8/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9403,0cdf33bad33f7297e125b5ae8625299654eb34ae,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9404,0cdf33bad33f7297e125b5ae8625299654eb34ae,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
9405,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9406,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
9407,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
9408,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9409,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/slim/Dockerfile,#!/bin/sh'; \
9410,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9411,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9412,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9413,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9414,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9415,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9416,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9417,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
9418,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
9419,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9420,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
9421,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9422,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9423,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9424,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9425,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9426,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9427,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9428,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9429,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9430,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
9431,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9432,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jre/Dockerfile,#!/bin/sh'; \
9433,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
9434,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9435,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-6-jdk/Dockerfile,# Default to UTF-8 file.encoding
9436,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
9437,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9438,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
9439,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
9440,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9441,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,#!/bin/sh'; \
9442,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9443,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
9444,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9445,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9446,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9447,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9448,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
9449,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9450,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
9451,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9452,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9453,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9454,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
9455,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
9456,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9457,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9458,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/oracle/Dockerfile,# basic smoke test
9459,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9460,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9461,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9462,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
9463,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9464,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9465,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9466,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/oracle/Dockerfile,# basic smoke test
9467,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9468,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9469,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9470,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
9471,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9472,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9473,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9474,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
9475,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9476,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jre/Dockerfile,#!/bin/sh'; \
9477,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
9478,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
9479,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
9480,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
9481,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/nanoserver-1809/Dockerfile,# https://jdk.java.net/
9482,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9483,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9484,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
9485,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/Dockerfile,# Default to UTF-8 file.encoding
9486,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9487,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/Dockerfile,#!/bin/sh'; \
9488,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9489,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9490,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9491,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9492,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9493,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9494,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9495,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
9496,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/oracle/Dockerfile,# http://jdk.java.net/
9497,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9498,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
9499,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/oracle/Dockerfile,# basic smoke test
9500,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9501,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9502,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9503,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9504,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
9505,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,# backwards compatibility shim
9506,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9507,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9508,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9509,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
9510,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9511,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9512,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9513,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,# basic smoke test
9514,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9515,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9516,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9517,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9518,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9519,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9520,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9521,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9522,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9523,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
9524,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,# backwards compatibility shim
9525,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9526,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9527,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9528,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
9529,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9530,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9531,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9532,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,# basic smoke test
9533,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9534,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9535,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9536,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9537,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9538,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9539,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9540,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
9541,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,# backwards compatibility shim
9542,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9543,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9544,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
9545,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,# arm64v8
9546,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,# amd64
9547,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,# fallback
9548,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9549,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
9550,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9551,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9552,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9553,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,# basic smoke test
9554,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9555,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9556,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9557,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
9558,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9559,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jdk/Dockerfile,#!/bin/sh'; \
9560,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
9561,15835397954c9ec123e42e685035ecd239e0a1db,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
9562,15835397954c9ec123e42e685035ecd239e0a1db,/11/jdk/windows/nanoserver-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
9563,15835397954c9ec123e42e685035ecd239e0a1db,/11/jdk/windows/nanoserver-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
9564,15835397954c9ec123e42e685035ecd239e0a1db,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9565,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9566,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9567,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9568,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9569,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9570,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jre/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
9571,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jre/windows/nanoserver-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
9572,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jre/windows/nanoserver-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
9573,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9574,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
9575,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
9576,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9577,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
9578,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9579,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9580,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9581,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9582,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9583,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9584,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9585,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9586,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9587,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9588,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
9589,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9590,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9591,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9592,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9593,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
9594,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9595,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9596,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
9597,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
9598,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9599,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,#!/bin/sh'; \
9600,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9601,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9602,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
9603,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9604,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9605,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9606,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9607,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9608,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9609,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
9610,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
9611,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
9612,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9613,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9614,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
9615,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9616,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/Dockerfile,#!/bin/sh'; \
9617,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
9618,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
9619,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
9620,0476812eabd178c77534f3c03bd0a2673822d7b9,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9621,0476812eabd178c77534f3c03bd0a2673822d7b9,/7-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9622,0476812eabd178c77534f3c03bd0a2673822d7b9,/7-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
9623,0476812eabd178c77534f3c03bd0a2673822d7b9,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9624,0476812eabd178c77534f3c03bd0a2673822d7b9,/7-jdk/alpine/Dockerfile,#!/bin/sh'; \
9625,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9626,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
9627,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
9628,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
9629,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
9630,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9631,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
9632,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/oracle/Dockerfile,# http://jdk.java.net/
9633,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9634,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
9635,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/oracle/Dockerfile,# basic smoke test
9636,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9637,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9638,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9639,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9640,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
9641,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9642,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9643,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9644,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
9645,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
9646,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
9647,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,# arm64v8
9648,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,# amd64
9649,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,# fallback
9650,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9651,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9652,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
9653,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,# basic smoke test
9654,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9655,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9656,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9657,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9658,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
9659,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,# backwards compatibility shim
9660,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9661,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9662,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9663,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
9664,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9665,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9666,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9667,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,# basic smoke test
9668,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9669,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9670,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
9671,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
9672,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9673,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/Dockerfile,#!/bin/sh'; \
9674,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9675,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9676,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9677,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9678,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9679,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9680,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9681,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9682,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
9683,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9684,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jre/Dockerfile,#!/bin/bash'; \
9685,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
9686,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
9687,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
9688,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
9689,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9690,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9691,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9692,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
9693,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,# backwards compatibility shim
9694,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9695,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
9696,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
9697,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,# arm64v8
9698,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,# amd64
9699,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,# fallback
9700,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9701,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
9702,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9703,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9704,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9705,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,# basic smoke test
9706,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9707,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9708,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
9709,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
9710,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9711,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,#!/bin/sh'; \
9712,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9713,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9714,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9715,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9716,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9717,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9718,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9719,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9720,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
9721,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9722,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/alpine/Dockerfile,# basic smoke test
9723,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9724,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9725,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-6"
9726,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
9727,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9728,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/slim/Dockerfile,#!/bin/sh'; \
9729,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9730,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9731,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9732,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9733,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9734,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9735,c2a9c2169b3cb215e3200440bc1cc2d6a2284d8b,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9736,c2a9c2169b3cb215e3200440bc1cc2d6a2284d8b,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
9737,c2a9c2169b3cb215e3200440bc1cc2d6a2284d8b,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
9738,c2a9c2169b3cb215e3200440bc1cc2d6a2284d8b,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
9739,fb0dd5fe5842959f774c60da6195e2d61b813fdd,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9740,fb0dd5fe5842959f774c60da6195e2d61b813fdd,/7-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9741,fb0dd5fe5842959f774c60da6195e2d61b813fdd,/7-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
9742,fb0dd5fe5842959f774c60da6195e2d61b813fdd,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9743,fb0dd5fe5842959f774c60da6195e2d61b813fdd,/7-jre/alpine/Dockerfile,#!/bin/sh'; \
9744,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9745,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9746,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
9747,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,# backwards compatibility shim
9748,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9749,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
9750,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
9751,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
9752,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
9753,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
9754,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9755,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,#!/usr/bin/env bash'; \
9756,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9757,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9758,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,# basic smoke test
9759,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9760,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9761,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9762,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
9763,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9764,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9765,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9766,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9767,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9768,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9769,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
9770,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/nanoserver-1803/Dockerfile,# https://jdk.java.net/
9771,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9772,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9773,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
9774,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,# backwards compatibility shim
9775,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9776,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
9777,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
9778,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
9779,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
9780,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
9781,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9782,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
9783,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9784,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9785,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,# basic smoke test
9786,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9787,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9788,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
9789,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,# backwards compatibility shim
9790,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9791,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
9792,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
9793,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
9794,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
9795,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
9796,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9797,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,#!/usr/bin/env bash'; \
9798,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9799,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,# basic smoke test
9800,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9801,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9802,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9803,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9804,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
9805,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9806,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9807,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
9808,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
9809,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9810,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
9811,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/oracle/Dockerfile,# basic smoke test
9812,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9813,200ecf22e5a23cb48cbb3ce47aa08aa3b49a0d2d,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9814,200ecf22e5a23cb48cbb3ce47aa08aa3b49a0d2d,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
9815,200ecf22e5a23cb48cbb3ce47aa08aa3b49a0d2d,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
9816,200ecf22e5a23cb48cbb3ce47aa08aa3b49a0d2d,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
9817,200ecf22e5a23cb48cbb3ce47aa08aa3b49a0d2d,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586"
9818,200ecf22e5a23cb48cbb3ce47aa08aa3b49a0d2d,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
9819,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9820,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9821,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
9822,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
9823,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
9824,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9825,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
9826,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/nanoserver-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
9827,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/nanoserver-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
9828,9859b8586dd2511d005c84694736e2121ceb11d7,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9829,9859b8586dd2511d005c84694736e2121ceb11d7,/openjdk-6-jre/Dockerfile,# Default to UTF-8 file.encoding
9830,9859b8586dd2511d005c84694736e2121ceb11d7,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
9831,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9832,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-6-jdk/Dockerfile,# Default to UTF-8 file.encoding
9833,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
9834,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9835,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
9836,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
9837,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9838,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,#!/bin/sh'; \
9839,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9840,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
9841,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9842,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9843,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9844,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9845,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
9846,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9847,5257acb51a1230a2dc46b1c349d674a725562f9d,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9848,5257acb51a1230a2dc46b1c349d674a725562f9d,/7-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9849,5257acb51a1230a2dc46b1c349d674a725562f9d,/7-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
9850,5257acb51a1230a2dc46b1c349d674a725562f9d,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9851,5257acb51a1230a2dc46b1c349d674a725562f9d,/7-jdk/alpine/Dockerfile,#!/bin/sh'; \
9852,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9853,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
9854,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/oracle/Dockerfile,# http://jdk.java.net/
9855,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9856,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
9857,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/oracle/Dockerfile,# basic smoke test
9858,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9859,032278c8c0f77b2d5ba6c63a6cfb2b9ea54aa75d,/13/jdk/alpine/Dockerfile,# https://jdk.java.net/
9860,032278c8c0f77b2d5ba6c63a6cfb2b9ea54aa75d,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
9861,032278c8c0f77b2d5ba6c63a6cfb2b9ea54aa75d,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9862,032278c8c0f77b2d5ba6c63a6cfb2b9ea54aa75d,/13/jdk/alpine/Dockerfile,# basic smoke test
9863,032278c8c0f77b2d5ba6c63a6cfb2b9ea54aa75d,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9864,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9865,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
9866,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9867,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9868,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9869,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
9870,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9871,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/8/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9872,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9873,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/8/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
9874,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9875,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9876,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
9877,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,# backwards compatibility shim
9878,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9879,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
9880,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
9881,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
9882,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
9883,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
9884,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9885,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,#!/usr/bin/env bash'; \
9886,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9887,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9888,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,# basic smoke test
9889,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9890,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9891,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9892,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
9893,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,# backwards compatibility shim
9894,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9895,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9896,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9897,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
9898,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9899,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9900,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9901,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,# basic smoke test
9902,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9903,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
9904,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
9905,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9906,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9907,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9908,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9909,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
9910,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9911,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9912,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9913,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9914,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
9915,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9916,4016bc190db90b9254f01ea808a91981f50500a2,/10/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9917,4016bc190db90b9254f01ea808a91981f50500a2,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9918,4016bc190db90b9254f01ea808a91981f50500a2,/10/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
9919,68c66124d85712115f1aefa0c60e766ac8e7da66,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9920,68c66124d85712115f1aefa0c60e766ac8e7da66,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
9921,68c66124d85712115f1aefa0c60e766ac8e7da66,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
9922,68c66124d85712115f1aefa0c60e766ac8e7da66,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
9923,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9924,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9925,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9926,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
9927,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9928,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9929,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9930,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
9931,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9932,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9933,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9934,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/oracle/Dockerfile,# basic smoke test
9935,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9936,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9937,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9938,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
9939,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9940,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
9941,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,# arm64v8
9942,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,# amd64
9943,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,# fallback
9944,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9945,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9946,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,# basic smoke test
9947,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9948,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9949,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9950,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
9951,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9952,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9953,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
9954,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
9955,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9956,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,#!/bin/sh'; \
9957,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9958,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9959,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9960,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9961,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9962,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9963,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9964,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9965,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-6"
9966,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
9967,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9968,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/slim/Dockerfile,#!/bin/sh'; \
9969,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9970,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9971,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9972,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9973,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9974,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9975,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9976,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
9977,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
9978,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9979,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
9980,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9981,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9982,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
9983,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
9984,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9985,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9986,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9987,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9988,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9989,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9990,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9991,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9992,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
9993,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9994,ddfe4a29dd66d34375d6ebc4455c550524672e3e,/15/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9995,ddfe4a29dd66d34375d6ebc4455c550524672e3e,/15/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
9996,ddfe4a29dd66d34375d6ebc4455c550524672e3e,/15/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9997,ddfe4a29dd66d34375d6ebc4455c550524672e3e,/15/jdk/alpine/Dockerfile,# basic smoke test
9998,ddfe4a29dd66d34375d6ebc4455c550524672e3e,/15/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9999,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10000,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10001,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
10002,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10003,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jre/Dockerfile,#!/bin/sh'; \
10004,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10005,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10006,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10007,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
10008,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10009,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jdk/Dockerfile,#!/bin/sh'; \
10010,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10011,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10012,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10013,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10014,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10015,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jre/Dockerfile,# Default to UTF-8 file.encoding
10016,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
10017,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
10018,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586"
10019,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10020,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10021,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
10022,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/oracle/Dockerfile,# https://jdk.java.net/
10023,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
10024,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10025,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/oracle/Dockerfile,# basic smoke test
10026,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
10027,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
10028,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
10029,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,# backwards compatibility shim
10030,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10031,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10032,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10033,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
10034,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10035,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10036,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10037,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,# basic smoke test
10038,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10039,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
10040,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10041,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10042,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10043,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
10044,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10045,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
10046,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
10047,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,# backwards compatibility shim
10048,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10049,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
10050,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
10051,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
10052,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,# amd64
10053,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,# fallback
10054,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
10055,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
10056,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
10057,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10058,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
10059,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10060,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10061,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,# basic smoke test
10062,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10063,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10064,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10065,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
10066,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10067,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10068,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10069,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10070,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
10071,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10072,554ff38a160f896ddd7f0fdca1cd34817e253a56,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10073,554ff38a160f896ddd7f0fdca1cd34817e253a56,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
10074,554ff38a160f896ddd7f0fdca1cd34817e253a56,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
10075,554ff38a160f896ddd7f0fdca1cd34817e253a56,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
10076,554ff38a160f896ddd7f0fdca1cd34817e253a56,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10077,554ff38a160f896ddd7f0fdca1cd34817e253a56,/13/jdk/oracle/Dockerfile,# basic smoke test
10078,554ff38a160f896ddd7f0fdca1cd34817e253a56,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
10079,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10080,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10081,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
10082,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10083,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
10084,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/oracle/Dockerfile,# http://jdk.java.net/
10085,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
10086,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
10087,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/oracle/Dockerfile,# basic smoke test
10088,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
10089,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10090,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10091,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10092,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10093,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10094,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
10095,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
10096,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,# backwards compatibility shim
10097,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10098,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10099,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10100,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
10101,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10102,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10103,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10104,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,# basic smoke test
10105,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10106,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
10107,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10108,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
10109,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
10110,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10111,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,#!/bin/sh'; \
10112,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10113,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10114,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
10115,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10116,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10117,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10118,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10119,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
10120,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10121,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
10122,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
10123,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
10124,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10125,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/oracle/Dockerfile,# basic smoke test
10126,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
10127,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10128,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
10129,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
10130,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10131,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,#!/bin/sh'; \
10132,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10133,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10134,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10135,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10136,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10137,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10138,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10139,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10140,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10141,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10142,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10143,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10144,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10145,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10146,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
10147,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10148,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jre/Dockerfile,#!/bin/sh'; \
10149,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10150,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
10151,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10152,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,# Default to UTF-8 file.encoding
10153,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,# backwards compatibility shim
10154,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10155,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
10156,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
10157,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
10158,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,# amd64
10159,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,# fallback
10160,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
10161,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
10162,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
10163,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10164,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,#!/usr/bin/env bash'; \
10165,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10166,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10167,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,# basic smoke test
10168,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10169,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
10170,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/oracle/Dockerfile,# https://jdk.java.net/
10171,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
10172,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10173,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/oracle/Dockerfile,# basic smoke test
10174,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
10175,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10176,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
10177,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
10178,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10179,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/slim/Dockerfile,#!/bin/sh'; \
10180,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10181,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10182,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10183,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10184,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10185,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10186,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10187,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10188,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
10189,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
10190,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
10191,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
10192,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
10193,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
10194,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
10195,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/nanoserver-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10196,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10197,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/windows/windowsservercore/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10198,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10199,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/windows/windowsservercore/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
10200,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10201,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10202,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10203,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10204,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10205,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10206,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
10207,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
10208,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10209,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jre/Dockerfile,#!/bin/sh'; \
10210,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10211,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10212,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10213,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10214,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10215,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10216,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10217,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
10218,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
10219,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10220,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,#!/bin/sh'; \
10221,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10222,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10223,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10224,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10225,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10226,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10227,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10228,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
10229,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10230,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
10231,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10232,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
10233,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,# arm64v8
10234,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,# amd64
10235,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,# fallback
10236,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
10237,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10238,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
10239,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,# basic smoke test
10240,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
10241,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10242,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10243,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
10244,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10245,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jdk/Dockerfile,#!/bin/sh'; \
10246,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
10247,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
10248,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10249,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10250,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10251,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10252,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
10253,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10254,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10255,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
10256,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/oracle/Dockerfile,# https://jdk.java.net/
10257,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
10258,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10259,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/oracle/Dockerfile,# basic smoke test
10260,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
10261,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10262,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10263,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
10264,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10265,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jdk/Dockerfile,#!/bin/sh'; \
10266,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
10267,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
10268,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10269,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10270,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10271,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
10272,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10273,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jdk/Dockerfile,#!/bin/sh'; \
10274,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
10275,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
10276,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10277,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
10278,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/Dockerfile,# backwards compatibility shim
10279,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10280,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
10281,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
10282,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
10283,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
10284,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/Dockerfile,# basic smoke test
10285,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
10286,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
10287,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,# backwards compatibility shim
10288,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10289,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
10290,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
10291,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
10292,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
10293,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
10294,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10295,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
10296,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10297,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10298,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,# basic smoke test
10299,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10300,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
10301,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
10302,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10303,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,#!/bin/sh'; \
10304,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10305,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
10306,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10307,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10308,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10309,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10310,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
10311,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10312,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10313,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10314,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10315,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10316,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10317,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
10318,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
10319,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,# backwards compatibility shim
10320,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10321,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
10322,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
10323,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
10324,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
10325,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
10326,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10327,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
10328,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10329,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10330,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,# basic smoke test
10331,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10332,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10333,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10334,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10335,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10336,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10337,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10338,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10339,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10340,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
10341,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10342,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10343,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10344,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10345,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
10346,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10347,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10348,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10349,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10350,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
10351,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10352,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
10353,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10354,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,# Default to UTF-8 file.encoding
10355,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
10356,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
10357,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,# arm64v8
10358,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,# amd64
10359,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,# fallback
10360,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
10361,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10362,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
10363,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,# basic smoke test
10364,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10365,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10366,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10367,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jdk/Dockerfile,# Default to UTF-8 file.encoding
10368,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10369,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jdk/Dockerfile,#!/bin/bash'; \
10370,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
10371,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
10372,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10373,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10374,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
10375,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
10376,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10377,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,#!/bin/sh'; \
10378,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10379,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10380,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
10381,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10382,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10383,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10384,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10385,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10386,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/15/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10387,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/15/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
10388,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/15/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10389,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/15/jdk/alpine/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
10390,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/15/jdk/alpine/Dockerfile,# basic smoke test
10391,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/15/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
10392,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jdk/windows/nanoserver/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10393,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10394,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jdk/windows/nanoserver/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
10395,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10396,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10397,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
10398,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10399,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jdk/Dockerfile,#!/bin/sh'; \
10400,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10401,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10402,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10403,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
10404,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10405,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jdk/Dockerfile,#!/bin/sh'; \
10406,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10407,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10408,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10409,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10410,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10411,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
10412,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
10413,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10414,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
10415,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,# backwards compatibility shim
10416,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10417,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10418,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
10419,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,# arm64v8
10420,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,# amd64
10421,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,# fallback
10422,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10423,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
10424,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10425,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10426,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10427,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,# basic smoke test
10428,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10429,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
10430,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10431,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
10432,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,# backwards compatibility shim
10433,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10434,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
10435,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
10436,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
10437,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
10438,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
10439,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10440,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,#!/usr/bin/env bash'; \
10441,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10442,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10443,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,# basic smoke test
10444,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10445,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
10446,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,# Default to UTF-8 file.encoding
10447,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10448,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,#!/bin/sh'; \
10449,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10450,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10451,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
10452,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10453,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10454,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10455,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10456,882461ade8207de7647d083009200de85eb978bc,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10457,882461ade8207de7647d083009200de85eb978bc,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10458,882461ade8207de7647d083009200de85eb978bc,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
10459,882461ade8207de7647d083009200de85eb978bc,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10460,882461ade8207de7647d083009200de85eb978bc,/8-jre/Dockerfile,#!/bin/sh'; \
10461,882461ade8207de7647d083009200de85eb978bc,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
10462,882461ade8207de7647d083009200de85eb978bc,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10463,882461ade8207de7647d083009200de85eb978bc,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10464,882461ade8207de7647d083009200de85eb978bc,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10465,882461ade8207de7647d083009200de85eb978bc,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
10466,882461ade8207de7647d083009200de85eb978bc,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10467,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10468,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10469,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10470,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
10471,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10472,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10473,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
10474,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
10475,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
10476,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10477,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
10478,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10479,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,# Default to UTF-8 file.encoding
10480,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
10481,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
10482,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,# arm64v8
10483,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,# amd64
10484,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,# fallback
10485,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
10486,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10487,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
10488,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,# basic smoke test
10489,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10490,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10491,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10492,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10493,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
10494,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10495,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
10496,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10497,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10498,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10499,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10500,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
10501,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
10502,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
10503,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10504,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10505,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
10506,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
10507,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10508,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,#!/bin/sh'; \
10509,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10510,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10511,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
10512,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10513,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10514,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10515,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10516,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
10517,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
10518,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,# backwards compatibility shim
10519,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10520,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
10521,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
10522,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
10523,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
10524,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
10525,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10526,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
10527,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10528,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10529,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,# basic smoke test
10530,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10531,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
10532,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/Dockerfile,# Default to UTF-8 file.encoding
10533,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10534,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/Dockerfile,#!/bin/sh'; \
10535,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10536,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10537,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10538,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10539,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10540,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10541,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10542,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10543,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
10544,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
10545,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
10546,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10547,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10548,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/6-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-6"
10549,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/6-jre/Dockerfile,# Default to UTF-8 file.encoding
10550,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10551,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/6-jre/Dockerfile,#!/bin/sh'; \
10552,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/6-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10553,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/6-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10554,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/6-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10555,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/6-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10556,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/6-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10557,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10558,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/8-jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10559,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/8-jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10560,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/8-jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
10561,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10562,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10563,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
10564,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10565,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
10566,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10567,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10568,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
10569,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10570,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jdk/Dockerfile,#!/bin/sh'; \
10571,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10572,d63214d23aad827190c599e23351bd0bdd7dcadc,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10573,d63214d23aad827190c599e23351bd0bdd7dcadc,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10574,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10575,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
10576,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/oracle/Dockerfile,# http://jdk.java.net/
10577,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
10578,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
10579,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/oracle/Dockerfile,# basic smoke test
10580,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
10581,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
10582,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
10583,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10584,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
10585,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,# backwards compatibility shim
10586,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10587,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10588,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10589,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
10590,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10591,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10592,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10593,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,# basic smoke test
10594,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10595,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10596,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
10597,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
10598,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10599,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/slim/Dockerfile,#!/bin/sh'; \
10600,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10601,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10602,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10603,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10604,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10605,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10606,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10607,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
10608,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
10609,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10610,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,#!/bin/sh'; \
10611,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10612,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10613,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
10614,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10615,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10616,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10617,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10618,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10619,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
10620,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
10621,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10622,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,#!/bin/sh'; \
10623,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10624,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10625,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (a case of https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
10626,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10627,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10628,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10629,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10630,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10631,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10632,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10633,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
10634,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10635,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
10636,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
10637,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,# backwards compatibility shim
10638,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10639,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
10640,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
10641,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
10642,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
10643,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
10644,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10645,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
10646,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10647,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10648,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,# basic smoke test
10649,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10650,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10651,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10652,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
10653,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10654,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10655,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
10656,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
10657,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10658,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/Dockerfile,#!/bin/sh'; \
10659,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10660,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10661,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10662,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10663,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10664,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10665,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10666,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10667,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10668,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
10669,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10670,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10671,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10672,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10673,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
10674,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10675,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10676,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10677,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
10678,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10679,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/Dockerfile,#!/bin/bash'; \
10680,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
10681,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
10682,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10683,1de3476e9d15e63768d7afeb672ad8a0ccb3f56f,/6/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10684,1de3476e9d15e63768d7afeb672ad8a0ccb3f56f,/6/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10685,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
10686,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10687,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,# Default to UTF-8 file.encoding
10688,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
10689,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
10690,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,# amd64
10691,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,# fallback
10692,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
10693,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10694,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
10695,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,# basic smoke test
10696,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10697,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10698,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10699,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10700,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
10701,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10702,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
10703,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
10704,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
10705,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10706,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
10707,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
10708,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10709,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
10710,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10711,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10712,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
10713,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
10714,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10715,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/Dockerfile,#!/bin/sh'; \
10716,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10717,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10718,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10719,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10720,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10721,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10722,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10723,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10724,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10725,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
10726,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10727,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10728,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
10729,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/Dockerfile,# Default to UTF-8 file.encoding
10730,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10731,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/Dockerfile,#!/bin/sh'; \
10732,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10733,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10734,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10735,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10736,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10737,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10738,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
10739,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
10740,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,# backwards compatibility shim
10741,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10742,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10743,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10744,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
10745,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10746,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10747,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10748,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,# basic smoke test
10749,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10750,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
10751,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10752,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
10753,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
10754,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10755,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,#!/bin/sh'; \
10756,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10757,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10758,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
10759,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10760,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10761,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10762,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10763,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
10764,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
10765,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
10766,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
10767,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
10768,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
10769,e740b6fad61854adfbdf553638d33f1c80176d79,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10770,e740b6fad61854adfbdf553638d33f1c80176d79,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
10771,e740b6fad61854adfbdf553638d33f1c80176d79,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
10772,e740b6fad61854adfbdf553638d33f1c80176d79,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
10773,e740b6fad61854adfbdf553638d33f1c80176d79,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10774,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10775,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10776,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10777,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
10778,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10779,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10780,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
10781,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
10782,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10783,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,#!/bin/sh'; \
10784,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10785,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10786,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10787,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10788,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10789,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10790,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10791,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
10792,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/slim/Dockerfile,# backwards compatibility shim
10793,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10794,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
10795,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
10796,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/slim/Dockerfile,# TODO filter out arm64 for openjdk:8 (https://github.com/AdoptOpenJDK/openjdk8-upstream-binaries/releases/tag/jdk8u212-b04 vs https://github.com/AdoptOpenJDK/openjdk11-upstream-binaries/releases/tag/jdk-11.0.3%2B7)
10797,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
10798,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
10799,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/slim/Dockerfile,# basic smoke test
10800,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10801,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10802,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
10803,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10804,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10805,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
10806,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
10807,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10808,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/slim/Dockerfile,#!/bin/sh'; \
10809,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10810,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10811,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10812,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10813,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10814,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10815,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10816,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
10817,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
10818,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
10819,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
10820,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/oracle/Dockerfile,# basic smoke test
10821,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
10822,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10823,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
10824,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
10825,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10826,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/Dockerfile,#!/bin/sh'; \
10827,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10828,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10829,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10830,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10831,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10832,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10833,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
10834,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
10835,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10836,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
10837,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
10838,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,# backwards compatibility shim
10839,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10840,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10841,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10842,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
10843,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10844,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10845,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10846,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,# basic smoke test
10847,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10848,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
10849,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10850,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10851,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10852,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10853,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10854,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10855,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10856,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jre/Dockerfile,# Default to UTF-8 file.encoding
10857,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10858,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jre/Dockerfile,#!/bin/sh'; \
10859,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10860,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10861,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-6-jdk/Dockerfile,# Default to UTF-8 file.encoding
10862,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10863,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10864,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
10865,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
10866,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10867,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jdk/alpine/Dockerfile,#!/bin/sh'; \
10868,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10869,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10870,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
10871,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
10872,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10873,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,#!/bin/sh'; \
10874,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10875,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
10876,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10877,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10878,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10879,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10880,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
10881,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10882,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
10883,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10884,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
10885,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,# backwards compatibility shim
10886,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10887,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
10888,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
10889,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
10890,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
10891,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
10892,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10893,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,#!/usr/bin/env bash'; \
10894,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10895,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10896,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,# basic smoke test
10897,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10898,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
10899,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/nanoserver-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
10900,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/nanoserver-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
10901,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10902,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
10903,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/Dockerfile,# backwards compatibility shim
10904,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10905,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
10906,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
10907,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
10908,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
10909,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
10910,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/Dockerfile,# basic smoke test
10911,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10912,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
10913,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
10914,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,# backwards compatibility shim
10915,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10916,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
10917,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
10918,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
10919,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
10920,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
10921,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10922,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
10923,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10924,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10925,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,# basic smoke test
10926,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10927,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10928,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
10929,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
10930,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10931,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,#!/bin/sh'; \
10932,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10933,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10934,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
10935,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10936,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10937,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10938,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10939,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10940,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
10941,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,# Default to UTF-8 file.encoding
10942,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10943,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,#!/bin/sh'; \
10944,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10945,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10946,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
10947,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10948,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10949,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10950,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10951,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10952,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
10953,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
10954,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10955,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
10956,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10957,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10958,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10959,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10960,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10961,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10962,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10963,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10964,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10965,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
10966,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
10967,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
10968,f45f3f269d4b515201f290360b345790663e657e,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10969,f45f3f269d4b515201f290360b345790663e657e,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10970,f45f3f269d4b515201f290360b345790663e657e,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
10971,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
10972,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
10973,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,# backwards compatibility shim
10974,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10975,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10976,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10977,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
10978,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10979,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10980,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10981,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,# basic smoke test
10982,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10983,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
10984,fbf3a8f396844832bd11a89d6299066a4669383d,/8-jdk/windows/windowsservercore/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10985,fbf3a8f396844832bd11a89d6299066a4669383d,/8-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10986,fbf3a8f396844832bd11a89d6299066a4669383d,/8-jdk/windows/windowsservercore/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
10987,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10988,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10989,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10990,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
10991,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10992,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10993,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10994,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
10995,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10996,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10997,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10998,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10999,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11000,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11001,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
11002,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
11003,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11004,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,#!/bin/sh'; \
11005,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11006,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11007,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11008,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11009,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11010,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11011,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11012,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11013,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11014,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11015,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
11016,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11017,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11018,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11019,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
11020,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11021,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11022,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jre/Dockerfile,# Default to UTF-8 file.encoding
11023,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
11024,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
11025,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586"
11026,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11027,e6e9cf8b21516ba764189916d35be57486203c95,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11028,e6e9cf8b21516ba764189916d35be57486203c95,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11029,e6e9cf8b21516ba764189916d35be57486203c95,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
11030,e6e9cf8b21516ba764189916d35be57486203c95,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11031,e6e9cf8b21516ba764189916d35be57486203c95,/8-jre/Dockerfile,#!/bin/sh'; \
11032,e6e9cf8b21516ba764189916d35be57486203c95,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
11033,e6e9cf8b21516ba764189916d35be57486203c95,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
11034,e6e9cf8b21516ba764189916d35be57486203c95,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11035,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11036,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11037,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11038,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
11039,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11040,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11041,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11042,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
11043,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
11044,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
11045,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11046,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11047,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11048,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11049,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
11050,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11051,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11052,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11053,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
11054,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11055,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,#!/bin/sh'; \
11056,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11057,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
11058,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11059,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11060,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11061,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
11062,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11063,41b92f2f30079cd364e9619d1fd4633ef138dca4,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11064,41b92f2f30079cd364e9619d1fd4633ef138dca4,/openjdk-7-jdk/Dockerfile,# Default to UTF-8 file.encoding
11065,41b92f2f30079cd364e9619d1fd4633ef138dca4,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11066,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11067,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11068,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11069,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
11070,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11071,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
11072,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
11073,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,# backwards compatibility shim
11074,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11075,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11076,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
11077,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
11078,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
11079,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
11080,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11081,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,# basic smoke test
11082,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11083,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
11084,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11085,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
11086,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
11087,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
11088,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11089,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/oracle/Dockerfile,# basic smoke test
11090,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
11091,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11092,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
11093,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
11094,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11095,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
11096,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11097,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11098,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11099,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11100,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11101,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11102,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11103,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
11104,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
11105,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11106,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
11107,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,# backwards compatibility shim
11108,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11109,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11110,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
11111,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,# arm64v8
11112,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,# amd64
11113,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,# fallback
11114,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
11115,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
11116,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
11117,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
11118,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11119,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,# basic smoke test
11120,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11121,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11122,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
11123,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/Dockerfile,# Default to UTF-8 file.encoding
11124,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11125,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/Dockerfile,#!/bin/sh'; \
11126,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11127,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11128,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11129,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11130,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11131,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11132,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11133,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
11134,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
11135,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11136,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/Dockerfile,#!/bin/sh'; \
11137,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11138,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11139,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11140,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11141,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11142,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11143,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
11144,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/nanoserver-1809/Dockerfile,# https://jdk.java.net/
11145,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11146,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11147,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
11148,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
11149,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11150,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
11151,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11152,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11153,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11154,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11155,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11156,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11157,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11158,d2acc0356b5a68a4d168462a3f5f0e29444982b9,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11159,d2acc0356b5a68a4d168462a3f5f0e29444982b9,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11160,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11161,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
11162,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
11163,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11164,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jre/alpine/Dockerfile,#!/bin/sh'; \
11165,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11166,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11167,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
11168,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
11169,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11170,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,#!/bin/sh'; \
11171,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11172,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
11173,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11174,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11175,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11176,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11177,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
11178,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11179,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
11180,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11181,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
11182,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11183,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
11184,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11185,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/oracle/Dockerfile,# basic smoke test
11186,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
11187,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11188,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11189,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11190,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
11191,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11192,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11193,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11194,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
11195,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11196,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jdk/Dockerfile,#!/bin/sh'; \
11197,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11198,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11199,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
11200,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
11201,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11202,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/slim/Dockerfile,#!/bin/sh'; \
11203,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11204,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11205,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11206,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11207,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11208,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11209,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11210,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11211,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11212,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
11213,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11214,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11215,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11216,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
11217,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11218,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jre/Dockerfile,#!/bin/sh'; \
11219,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
11220,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
11221,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11222,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11223,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11224,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
11225,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11226,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11227,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
11228,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11229,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jdk/Dockerfile,#!/bin/sh'; \
11230,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11231,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11232,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11233,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11234,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
11235,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11236,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11237,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
11238,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
11239,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11240,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/slim/Dockerfile,#!/bin/sh'; \
11241,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11242,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11243,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11244,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11245,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11246,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11247,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11248,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11249,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11250,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
11251,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11252,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
11253,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
11254,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,# backwards compatibility shim
11255,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11256,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
11257,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
11258,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
11259,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,# arm64v8
11260,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,# amd64
11261,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,# fallback
11262,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
11263,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
11264,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
11265,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
11266,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
11267,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
11268,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
11269,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,# basic smoke test
11270,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11271,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11272,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11273,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11274,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11275,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11276,9efa5c2bd28c10d07e70ceac416187a011dd6184,/15/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11277,9efa5c2bd28c10d07e70ceac416187a011dd6184,/15/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
11278,9efa5c2bd28c10d07e70ceac416187a011dd6184,/15/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11279,9efa5c2bd28c10d07e70ceac416187a011dd6184,/15/jdk/alpine/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
11280,9efa5c2bd28c10d07e70ceac416187a011dd6184,/15/jdk/alpine/Dockerfile,# basic smoke test
11281,9efa5c2bd28c10d07e70ceac416187a011dd6184,/15/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
11282,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11283,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11284,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11285,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
11286,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11287,47a6539cd18023dafb45db9013455136cc0bca07,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11288,47a6539cd18023dafb45db9013455136cc0bca07,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
11289,47a6539cd18023dafb45db9013455136cc0bca07,/8/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
11290,47a6539cd18023dafb45db9013455136cc0bca07,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11291,47a6539cd18023dafb45db9013455136cc0bca07,/8/jdk/alpine/Dockerfile,#!/bin/sh'; \
11292,47a6539cd18023dafb45db9013455136cc0bca07,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11293,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11294,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
11295,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
11296,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11297,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,#!/bin/sh'; \
11298,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11299,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
11300,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11301,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11302,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11303,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11304,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
11305,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11306,01ca700a105984964865430aee1251932956925e,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11307,01ca700a105984964865430aee1251932956925e,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
11308,01ca700a105984964865430aee1251932956925e,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
11309,01ca700a105984964865430aee1251932956925e,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11310,01ca700a105984964865430aee1251932956925e,/9-jre/Dockerfile,#!/bin/sh'; \
11311,01ca700a105984964865430aee1251932956925e,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11312,01ca700a105984964865430aee1251932956925e,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11313,01ca700a105984964865430aee1251932956925e,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11314,01ca700a105984964865430aee1251932956925e,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11315,01ca700a105984964865430aee1251932956925e,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11316,01ca700a105984964865430aee1251932956925e,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11317,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11318,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
11319,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
11320,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11321,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
11322,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11323,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11324,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11325,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11326,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11327,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11328,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11329,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
11330,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11331,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
11332,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11333,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
11334,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11335,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/oracle/Dockerfile,# basic smoke test
11336,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
11337,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11338,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
11339,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
11340,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11341,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/slim/Dockerfile,#!/bin/sh'; \
11342,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11343,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11344,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11345,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11346,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11347,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11348,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
11349,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
11350,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,# backwards compatibility shim
11351,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11352,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
11353,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
11354,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
11355,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
11356,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
11357,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
11358,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
11359,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
11360,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
11361,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,# basic smoke test
11362,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11363,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11364,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11365,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
11366,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11367,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11368,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
11369,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
11370,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11371,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,#!/bin/sh'; \
11372,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11373,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11374,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
11375,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11376,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11377,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11378,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11379,0259a649c03ace8b035432ef3ee7274ca30d3776,/6/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11380,0259a649c03ace8b035432ef3ee7274ca30d3776,/6/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11381,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11382,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11383,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11384,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
11385,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11386,882461ade8207de7647d083009200de85eb978bc,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11387,882461ade8207de7647d083009200de85eb978bc,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11388,882461ade8207de7647d083009200de85eb978bc,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
11389,882461ade8207de7647d083009200de85eb978bc,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11390,882461ade8207de7647d083009200de85eb978bc,/7-jre/Dockerfile,#!/bin/sh'; \
11391,882461ade8207de7647d083009200de85eb978bc,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11392,882461ade8207de7647d083009200de85eb978bc,/7-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11393,882461ade8207de7647d083009200de85eb978bc,/7-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11394,882461ade8207de7647d083009200de85eb978bc,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11395,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11396,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
11397,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
11398,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11399,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,#!/bin/sh'; \
11400,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11401,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
11402,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11403,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11404,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11405,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11406,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
11407,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11408,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11409,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-7-jre/Dockerfile,# Default to UTF-8 file.encoding
11410,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11411,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
11412,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11413,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
11414,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
11415,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
11416,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11417,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/oracle/Dockerfile,# basic smoke test
11418,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
11419,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
11420,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11421,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
11422,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,# backwards compatibility shim
11423,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11424,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
11425,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
11426,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
11427,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
11428,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
11429,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
11430,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,#!/usr/bin/env bash'; \
11431,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
11432,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
11433,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,# basic smoke test
11434,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11435,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11436,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11437,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11438,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11439,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11440,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
11441,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
11442,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11443,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,# Default to UTF-8 file.encoding
11444,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,# backwards compatibility shim
11445,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11446,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11447,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
11448,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,# arm64v8
11449,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,# amd64
11450,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,# fallback
11451,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
11452,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,#!/usr/bin/env bash'; \
11453,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
11454,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
11455,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11456,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,# basic smoke test
11457,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11458,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11459,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
11460,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
11461,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11462,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,#!/bin/sh'; \
11463,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11464,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11465,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11466,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11467,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11468,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11469,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11470,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
11471,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/nanoserver-1809/Dockerfile,# https://jdk.java.net/
11472,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11473,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11474,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11475,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
11476,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11477,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jre/Dockerfile,#!/bin/sh'; \
11478,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11479,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
11480,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jdk/windows/nanoserver-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
11481,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jdk/windows/nanoserver-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
11482,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11483,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11484,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
11485,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
11486,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11487,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/slim/Dockerfile,#!/bin/sh'; \
11488,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11489,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11490,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11491,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11492,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11493,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11494,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11495,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
11496,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/Dockerfile,# backwards compatibility shim
11497,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11498,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
11499,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
11500,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
11501,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
11502,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
11503,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/Dockerfile,# basic smoke test
11504,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
11505,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/nanoserver-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11506,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11507,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11508,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
11509,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
11510,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11511,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jre/Dockerfile,#!/bin/sh'; \
11512,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11513,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11514,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11515,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11516,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11517,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11518,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
11519,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11520,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
11521,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
11522,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
11523,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,# arm64v8
11524,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,# amd64
11525,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,# fallback
11526,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
11527,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11528,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
11529,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,# basic smoke test
11530,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11531,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
11532,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
11533,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11534,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11535,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11536,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
11537,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11538,4fc0f299672be87a236d1af61a31c14f67dfcdcc,/6/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11539,4fc0f299672be87a236d1af61a31c14f67dfcdcc,/6/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11540,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11541,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11542,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
11543,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11544,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
11545,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
11546,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11547,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
11548,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,# backwards compatibility shim
11549,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11550,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
11551,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
11552,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,# arm64v8
11553,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,# amd64
11554,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,# fallback
11555,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
11556,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
11557,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
11558,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
11559,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11560,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,# basic smoke test
11561,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11562,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11563,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11564,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11565,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11566,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11567,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
11568,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11569,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
11570,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11571,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
11572,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11573,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/oracle/Dockerfile,# basic smoke test
11574,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
11575,d8d56dbcf7a66ac266a0f229c598f42a94faf804,/7/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11576,d8d56dbcf7a66ac266a0f229c598f42a94faf804,/7/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11577,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11578,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11579,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
11580,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
11581,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
11582,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11583,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
11584,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/oracle/Dockerfile,# http://jdk.java.net/
11585,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
11586,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
11587,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/oracle/Dockerfile,# basic smoke test
11588,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
11589,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
11590,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
11591,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,# backwards compatibility shim
11592,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11593,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
11594,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
11595,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,# arm64v8
11596,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,# amd64
11597,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,# fallback
11598,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
11599,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
11600,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
11601,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
11602,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11603,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,# basic smoke test
11604,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11605,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11606,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
11607,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
11608,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11609,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jre/alpine/Dockerfile,#!/bin/sh'; \
11610,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11611,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11612,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11613,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
11614,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11615,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jre/Dockerfile,#!/bin/bash'; \
11616,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11617,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
11618,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11619,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
11620,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
11621,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
11622,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,# arm64v8
11623,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,# amd64
11624,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,# fallback
11625,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
11626,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11627,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
11628,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,# basic smoke test
11629,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11630,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
11631,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
11632,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11633,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
11634,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,# backwards compatibility shim
11635,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11636,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11637,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
11638,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,# arm64v8
11639,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,# amd64
11640,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,# fallback
11641,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
11642,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
11643,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
11644,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
11645,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11646,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,# basic smoke test
11647,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11648,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11649,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11650,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11651,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
11652,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11653,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11654,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
11655,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
11656,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11657,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
11658,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11659,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11660,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11661,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11662,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11663,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11664,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
11665,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11666,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
11667,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11668,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
11669,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,# arm64v8
11670,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,# amd64
11671,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,# fallback
11672,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
11673,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11674,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
11675,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,# basic smoke test
11676,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
11677,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11678,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
11679,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,# Default to UTF-8 file.encoding
11680,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11681,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,#!/bin/sh'; \
11682,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11683,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11684,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
11685,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11686,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11687,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11688,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11689,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11690,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11691,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
11692,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
11693,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
11694,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11695,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11696,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
11697,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
11698,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11699,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,#!/bin/sh'; \
11700,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11701,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
11702,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11703,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11704,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11705,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11706,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
11707,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11708,d7094b23b9c6957d72d2af540f866ec4a751ae71,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11709,d7094b23b9c6957d72d2af540f866ec4a751ae71,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
11710,d7094b23b9c6957d72d2af540f866ec4a751ae71,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
11711,d7094b23b9c6957d72d2af540f866ec4a751ae71,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11712,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11713,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11714,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11715,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
11716,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11717,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11718,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
11719,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,# Default to UTF-8 file.encoding
11720,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11721,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,#!/bin/sh'; \
11722,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11723,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11724,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
11725,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11726,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11727,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11728,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11729,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11730,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
11731,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
11732,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11733,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,#!/bin/sh'; \
11734,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11735,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11736,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11737,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11738,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11739,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11740,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11741,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11742,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11743,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11744,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11745,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11746,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
11747,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11748,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
11749,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,# backwards compatibility shim
11750,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11751,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
11752,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
11753,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
11754,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
11755,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
11756,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
11757,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,#!/usr/bin/env bash'; \
11758,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
11759,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
11760,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,# basic smoke test
11761,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11762,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-6-jre/Dockerfile,# Default to UTF-8 file.encoding
11763,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11764,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11765,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11766,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
11767,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11768,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jdk/Dockerfile,#!/bin/sh'; \
11769,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
11770,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11771,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11772,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11773,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
11774,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11775,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11776,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11777,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11778,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
11779,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11780,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11781,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11782,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
11783,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
11784,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
11785,f11f75767926eb1e650b448690e15cbacc2d1b9f,/13/jdk/alpine/Dockerfile,# https://jdk.java.net/
11786,f11f75767926eb1e650b448690e15cbacc2d1b9f,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
11787,f11f75767926eb1e650b448690e15cbacc2d1b9f,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11788,f11f75767926eb1e650b448690e15cbacc2d1b9f,/13/jdk/alpine/Dockerfile,# basic smoke test
11789,f11f75767926eb1e650b448690e15cbacc2d1b9f,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
11790,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11791,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11792,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11793,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
11794,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11795,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11796,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11797,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
11798,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
11799,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
11800,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11801,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11802,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
11803,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
11804,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11805,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,#!/bin/sh'; \
11806,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11807,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
11808,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11809,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11810,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11811,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11812,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
11813,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11814,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
11815,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
11816,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
11817,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
11818,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11819,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
11820,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11821,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
11822,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,# arm64v8
11823,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,# amd64
11824,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,# fallback
11825,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
11826,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11827,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
11828,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,# basic smoke test
11829,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
11830,57de518e280c26fa8a9f602e76c3f3ea95f8296c,/12/jdk/alpine/Dockerfile,# http://jdk.java.net/
11831,57de518e280c26fa8a9f602e76c3f3ea95f8296c,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
11832,57de518e280c26fa8a9f602e76c3f3ea95f8296c,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
11833,57de518e280c26fa8a9f602e76c3f3ea95f8296c,/12/jdk/alpine/Dockerfile,# basic smoke test
11834,57de518e280c26fa8a9f602e76c3f3ea95f8296c,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
11835,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11836,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11837,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
11838,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
11839,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
11840,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11841,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11842,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11843,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
11844,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11845,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11846,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
11847,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
11848,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11849,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,#!/bin/sh'; \
11850,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11851,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
11852,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11853,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11854,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11855,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11856,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
11857,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11858,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11859,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11860,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11861,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11862,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11863,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11864,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
11865,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
11866,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11867,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/slim/Dockerfile,#!/bin/sh'; \
11868,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11869,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11870,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11871,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11872,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11873,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11874,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
11875,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
11876,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,# backwards compatibility shim
11877,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11878,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,# https://jdk.java.net/
11879,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
11880,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
11881,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
11882,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
11883,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11884,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,# basic smoke test
11885,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11886,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
11887,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11888,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11889,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
11890,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11891,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jdk/Dockerfile,#!/bin/sh'; \
11892,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11893,a080def2a36003e85485d07b3f047bd3c91508c2,/8-jdk/windows/nanoserver/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11894,a080def2a36003e85485d07b3f047bd3c91508c2,/8-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11895,a080def2a36003e85485d07b3f047bd3c91508c2,/8-jdk/windows/nanoserver/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
11896,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11897,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11898,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
11899,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
11900,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
11901,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11902,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11903,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11904,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jdk/Dockerfile,# Default to UTF-8 file.encoding
11905,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11906,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jdk/Dockerfile,#!/bin/sh'; \
11907,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11908,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11909,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
11910,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
11911,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11912,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jre/alpine/Dockerfile,#!/bin/sh'; \
11913,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11914,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11915,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11916,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11917,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/6-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-6"
11918,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/6-jre/Dockerfile,# Default to UTF-8 file.encoding
11919,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11920,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/6-jre/Dockerfile,#!/bin/sh'; \
11921,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/6-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11922,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/6-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11923,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/6-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11924,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/6-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11925,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/6-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11926,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11927,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11928,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11929,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11930,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11931,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11932,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11933,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
11934,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
11935,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11936,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,#!/bin/sh'; \
11937,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11938,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11939,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
11940,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
11941,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11942,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11943,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11944,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11945,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11946,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
11947,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
11948,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11949,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
11950,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11951,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11952,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11953,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11954,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11955,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11956,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11957,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
11958,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
11959,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,# backwards compatibility shim
11960,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11961,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11962,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
11963,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,# arm64v8
11964,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,# amd64
11965,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,# fallback
11966,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
11967,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
11968,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
11969,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
11970,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11971,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,# basic smoke test
11972,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11973,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11974,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
11975,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
11976,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11977,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jre/alpine/Dockerfile,#!/bin/sh'; \
11978,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11979,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11980,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11981,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
11982,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11983,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jdk/Dockerfile,#!/bin/sh'; \
11984,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11985,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11986,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11987,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11988,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11989,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
11990,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
11991,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,# backwards compatibility shim
11992,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11993,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
11994,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
11995,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
11996,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,# amd64
11997,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,# fallback
11998,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
11999,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
12000,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
12001,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12002,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
12003,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12004,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12005,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,# basic smoke test
12006,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12007,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
12008,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
12009,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
12010,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12011,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/oracle/Dockerfile,# basic smoke test
12012,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
12013,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12014,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12015,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12016,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
12017,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12018,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
12019,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
12020,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12021,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12022,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
12023,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12024,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,# Default to UTF-8 file.encoding
12025,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,# backwards compatibility shim
12026,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12027,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12028,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
12029,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,# arm64v8
12030,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,# amd64
12031,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,# fallback
12032,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12033,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,#!/usr/bin/env bash'; \
12034,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12035,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12036,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12037,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,# basic smoke test
12038,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12039,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12040,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/slim/Dockerfile,# backwards compatibility shim
12041,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12042,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
12043,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
12044,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/slim/Dockerfile,# TODO filter out arm64 for openjdk:8 (https://github.com/AdoptOpenJDK/openjdk8-upstream-binaries/releases/tag/jdk8u212-b04 vs https://github.com/AdoptOpenJDK/openjdk11-upstream-binaries/releases/tag/jdk-11.0.3%2B7)
12045,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
12046,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
12047,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/slim/Dockerfile,# basic smoke test
12048,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12049,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12050,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12051,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
12052,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12053,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jdk/Dockerfile,#!/bin/sh'; \
12054,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12055,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
12056,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/nanoserver-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
12057,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/nanoserver-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
12058,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12059,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
12060,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12061,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
12062,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,# backwards compatibility shim
12063,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12064,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12065,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12066,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
12067,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12068,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12069,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12070,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,# basic smoke test
12071,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12072,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12073,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12074,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,# backwards compatibility shim
12075,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12076,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12077,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
12078,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,# amd64
12079,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,# fallback
12080,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12081,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
12082,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12083,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12084,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12085,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,# basic smoke test
12086,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12087,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12088,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12089,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
12090,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12091,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
12092,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
12093,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12094,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,#!/bin/sh'; \
12095,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12096,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12097,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
12098,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12099,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12100,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12101,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12102,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12103,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12104,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
12105,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,# backwards compatibility shim
12106,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12107,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
12108,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
12109,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
12110,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
12111,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
12112,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12113,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,#!/usr/bin/env bash'; \
12114,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12115,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12116,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,# basic smoke test
12117,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12118,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12119,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12120,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
12121,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12122,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jre/Dockerfile,#!/bin/sh'; \
12123,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12124,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12125,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12126,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
12127,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12128,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jre/alpine/Dockerfile,#!/bin/sh'; \
12129,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12130,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12131,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12132,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12133,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12134,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
12135,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12136,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12137,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12138,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12139,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
12140,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12141,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12142,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
12143,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12144,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
12145,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,# backwards compatibility shim
12146,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12147,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,# https://jdk.java.net/
12148,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12149,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
12150,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12151,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12152,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12153,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,# basic smoke test
12154,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12155,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12156,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12157,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,# backwards compatibility shim
12158,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12159,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12160,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12161,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
12162,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12163,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12164,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12165,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,# basic smoke test
12166,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12167,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
12168,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/windows/nanoserver/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12169,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12170,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/windows/nanoserver/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
12171,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12172,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12173,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,# backwards compatibility shim
12174,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12175,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
12176,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
12177,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
12178,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
12179,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
12180,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12181,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
12182,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12183,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,# basic smoke test
12184,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12185,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12186,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jre/Dockerfile,# Default to UTF-8 file.encoding
12187,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12188,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jre/Dockerfile,#!/bin/bash'; \
12189,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
12190,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
12191,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12192,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12193,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
12194,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
12195,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12196,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/slim/Dockerfile,#!/bin/sh'; \
12197,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12198,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12199,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12200,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12201,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12202,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12203,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12204,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
12205,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,# Default to UTF-8 file.encoding
12206,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12207,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,#!/bin/sh'; \
12208,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12209,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12210,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12211,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12212,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12213,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12214,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12215,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12216,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12217,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
12218,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,# backwards compatibility shim
12219,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12220,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
12221,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
12222,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
12223,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,# amd64
12224,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,# fallback
12225,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
12226,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
12227,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
12228,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12229,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
12230,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12231,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12232,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,# basic smoke test
12233,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12234,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
12235,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
12236,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12237,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/slim/Dockerfile,#!/bin/sh'; \
12238,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12239,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12240,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12241,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12242,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12243,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12244,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12245,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
12246,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
12247,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12248,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/Dockerfile,#!/bin/sh'; \
12249,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12250,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12251,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12252,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12253,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12254,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12255,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12256,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12257,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
12258,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
12259,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
12260,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12261,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12262,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12263,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
12264,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12265,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12266,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
12267,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,# backwards compatibility shim
12268,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12269,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
12270,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
12271,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,# arm64v8
12272,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,# amd64
12273,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,# fallback
12274,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12275,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
12276,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12277,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12278,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12279,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,# basic smoke test
12280,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12281,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12282,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
12283,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12284,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
12285,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,# backwards compatibility shim
12286,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12287,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,# https://jdk.java.net/
12288,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12289,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
12290,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12291,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12292,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12293,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,# basic smoke test
12294,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12295,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
12296,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jdk/windows/nanoserver-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
12297,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jdk/windows/nanoserver-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
12298,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12299,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
12300,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,# Default to UTF-8 file.encoding
12301,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12302,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,#!/bin/sh'; \
12303,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12304,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12305,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
12306,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12307,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12308,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12309,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12310,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12311,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
12312,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
12313,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12314,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,#!/bin/sh'; \
12315,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12316,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
12317,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12318,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12319,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12320,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12321,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
12322,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12323,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12324,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12325,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12326,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
12327,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12328,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12329,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12330,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,# backwards compatibility shim
12331,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12332,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
12333,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
12334,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
12335,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
12336,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
12337,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12338,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
12339,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12340,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12341,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,# basic smoke test
12342,54c64cf47d2b705418feb68b811419a223c5a040,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12343,54c64cf47d2b705418feb68b811419a223c5a040,/7-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12344,54c64cf47d2b705418feb68b811419a223c5a040,/7-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
12345,54c64cf47d2b705418feb68b811419a223c5a040,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12346,54c64cf47d2b705418feb68b811419a223c5a040,/7-jdk/alpine/Dockerfile,#!/bin/sh'; \
12347,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12348,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
12349,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
12350,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12351,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/Dockerfile,#!/bin/sh'; \
12352,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12353,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12354,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12355,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12356,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12357,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12358,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12359,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
12360,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
12361,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12362,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/Dockerfile,#!/bin/sh'; \
12363,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12364,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12365,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12366,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12367,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12368,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12369,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12370,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12371,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,# backwards compatibility shim
12372,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12373,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,# https://jdk.java.net/
12374,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12375,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
12376,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12377,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12378,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12379,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,# basic smoke test
12380,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12381,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
12382,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12383,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/7-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12384,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/7-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
12385,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12386,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/7-jdk/alpine/Dockerfile,#!/bin/sh'; \
12387,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12388,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12389,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12390,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
12391,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12392,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12393,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12394,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,# backwards compatibility shim
12395,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12396,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12397,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12398,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
12399,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12400,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12401,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12402,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,# basic smoke test
12403,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12404,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
12405,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12406,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12407,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12408,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
12409,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
12410,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
12411,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12412,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12413,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,# backwards compatibility shim
12414,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12415,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
12416,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
12417,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
12418,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
12419,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
12420,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12421,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
12422,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12423,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,# basic smoke test
12424,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12425,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12426,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12427,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12428,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
12429,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12430,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12431,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12432,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
12433,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,# backwards compatibility shim
12434,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12435,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
12436,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
12437,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
12438,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
12439,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
12440,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12441,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,#!/usr/bin/env bash'; \
12442,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12443,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,# basic smoke test
12444,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12445,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12446,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
12447,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
12448,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
12449,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12450,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12451,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12452,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
12453,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12454,00a9c5c080f2a5fd1510bc0716db7afe06cbd017,/8/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12455,00a9c5c080f2a5fd1510bc0716db7afe06cbd017,/8/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12456,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
12457,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12458,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
12459,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12460,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
12461,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12462,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/oracle/Dockerfile,# basic smoke test
12463,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
12464,15835397954c9ec123e42e685035ecd239e0a1db,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
12465,15835397954c9ec123e42e685035ecd239e0a1db,/11/jre/windows/nanoserver-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
12466,15835397954c9ec123e42e685035ecd239e0a1db,/11/jre/windows/nanoserver-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
12467,15835397954c9ec123e42e685035ecd239e0a1db,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12468,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12469,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12470,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
12471,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
12472,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
12473,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12474,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12475,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
12476,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12477,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12478,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/slim/Dockerfile,#!/bin/sh'; \
12479,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12480,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12481,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12482,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12483,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12484,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12485,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
12486,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12487,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
12488,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
12489,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
12490,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,# amd64
12491,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,# fallback
12492,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
12493,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12494,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
12495,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,# basic smoke test
12496,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12497,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12498,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
12499,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
12500,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12501,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,#!/bin/sh'; \
12502,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12503,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
12504,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12505,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12506,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12507,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12508,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
12509,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12510,50c491c7c2378182866d89e857eb1f0c77985507,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12511,50c491c7c2378182866d89e857eb1f0c77985507,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12512,50c491c7c2378182866d89e857eb1f0c77985507,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
12513,50c491c7c2378182866d89e857eb1f0c77985507,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12514,50c491c7c2378182866d89e857eb1f0c77985507,/9-jre/Dockerfile,#!/bin/sh'; \
12515,50c491c7c2378182866d89e857eb1f0c77985507,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12516,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
12517,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12518,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12519,0467df283134a79840c25808093c00f7c94b9a88,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12520,0467df283134a79840c25808093c00f7c94b9a88,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12521,0467df283134a79840c25808093c00f7c94b9a88,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
12522,0467df283134a79840c25808093c00f7c94b9a88,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12523,0467df283134a79840c25808093c00f7c94b9a88,/9-jre/Dockerfile,#!/bin/sh'; \
12524,0467df283134a79840c25808093c00f7c94b9a88,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12525,0467df283134a79840c25808093c00f7c94b9a88,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12526,0467df283134a79840c25808093c00f7c94b9a88,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12527,0467df283134a79840c25808093c00f7c94b9a88,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12528,0467df283134a79840c25808093c00f7c94b9a88,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12529,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12530,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12531,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,# backwards compatibility shim
12532,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12533,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
12534,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
12535,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
12536,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
12537,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
12538,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12539,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
12540,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12541,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12542,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,# basic smoke test
12543,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12544,9b3b7ed1bdd754fa61b5dd86c0bcd3e3400c6a33,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12545,9b3b7ed1bdd754fa61b5dd86c0bcd3e3400c6a33,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12546,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12547,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12548,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12549,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
12550,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12551,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/alpine/Dockerfile,# https://jdk.java.net/
12552,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
12553,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12554,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/alpine/Dockerfile,# basic smoke test
12555,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
12556,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12557,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
12558,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12559,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
12560,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,# backwards compatibility shim
12561,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12562,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
12563,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
12564,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,# arm64v8
12565,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,# amd64
12566,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,# fallback
12567,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12568,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
12569,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12570,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12571,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12572,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,# basic smoke test
12573,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12574,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
12575,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12576,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
12577,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12578,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
12579,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,# arm64v8
12580,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,# amd64
12581,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,# fallback
12582,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
12583,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12584,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
12585,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,# basic smoke test
12586,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
12587,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12588,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12589,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,# backwards compatibility shim
12590,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12591,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12592,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12593,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
12594,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12595,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12596,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12597,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,# basic smoke test
12598,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12599,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
12600,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12601,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12602,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
12603,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12604,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
12605,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12606,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
12607,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12608,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
12609,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12610,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/oracle/Dockerfile,# basic smoke test
12611,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
12612,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12613,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12614,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12615,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
12616,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12617,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12618,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12619,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12620,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
12621,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12622,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12623,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12624,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12625,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
12626,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12627,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12628,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
12629,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12630,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
12631,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,# backwards compatibility shim
12632,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12633,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12634,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12635,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
12636,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12637,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12638,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12639,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,# basic smoke test
12640,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12641,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12642,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12643,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,# backwards compatibility shim
12644,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12645,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12646,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12647,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
12648,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12649,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12650,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12651,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,# basic smoke test
12652,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12653,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
12654,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12655,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12656,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
12657,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12658,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jre/Dockerfile,#!/bin/sh'; \
12659,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12660,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12661,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
12662,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,# backwards compatibility shim
12663,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12664,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
12665,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
12666,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
12667,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,# arm64v8
12668,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,# amd64
12669,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,# fallback
12670,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
12671,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
12672,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
12673,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12674,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
12675,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12676,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12677,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,# basic smoke test
12678,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12679,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12680,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12681,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
12682,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
12683,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
12684,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12685,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
12686,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
12687,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
12688,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12689,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12690,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12691,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12692,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
12693,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12694,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12695,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12696,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12697,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
12698,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12699,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12700,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12701,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
12702,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,# backwards compatibility shim
12703,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12704,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
12705,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
12706,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
12707,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
12708,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
12709,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12710,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,#!/usr/bin/env bash'; \
12711,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12712,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12713,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,# basic smoke test
12714,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12715,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12716,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
12717,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
12718,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12719,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/Dockerfile,#!/bin/sh'; \
12720,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12721,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12722,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12723,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12724,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12725,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12726,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12727,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
12728,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
12729,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12730,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,#!/bin/sh'; \
12731,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12732,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
12733,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12734,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12735,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12736,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12737,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
12738,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12739,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/windows/nanoserver/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12740,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12741,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/windows/nanoserver/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
12742,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/windows/nanoserver/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12743,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12744,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12745,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
12746,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12747,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jre/Dockerfile,#!/bin/bash'; \
12748,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
12749,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
12750,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12751,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12752,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12753,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
12754,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
12755,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
12756,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12757,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12758,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
12759,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
12760,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12761,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jdk/alpine/Dockerfile,#!/bin/sh'; \
12762,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12763,58866569ecc3d516467baf83375f3bd4cb0b8229,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12764,58866569ecc3d516467baf83375f3bd4cb0b8229,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12765,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12766,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12767,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
12768,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
12769,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
12770,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12771,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
12772,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12773,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12774,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,#!/bin/sh'; \
12775,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12776,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12777,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
12778,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12779,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12780,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12781,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12782,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12783,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
12784,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12785,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
12786,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
12787,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
12788,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,# arm64v8
12789,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,# amd64
12790,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,# fallback
12791,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
12792,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12793,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
12794,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,# basic smoke test
12795,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12796,c7846edc14a25304288c85e2e7bebe4609626512,/7/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12797,c7846edc14a25304288c85e2e7bebe4609626512,/7/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
12798,c7846edc14a25304288c85e2e7bebe4609626512,/7/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
12799,c7846edc14a25304288c85e2e7bebe4609626512,/7/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12800,c7846edc14a25304288c85e2e7bebe4609626512,/7/jdk/alpine/Dockerfile,#!/bin/sh'; \
12801,c7846edc14a25304288c85e2e7bebe4609626512,/7/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12802,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12803,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12804,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12805,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12806,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12807,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
12808,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12809,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
12810,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
12811,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
12812,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12813,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/oracle/Dockerfile,# basic smoke test
12814,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
12815,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12816,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12817,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
12818,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12819,b734af2a8ee4697604035d14064fb7f3b1d5f050,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12820,b734af2a8ee4697604035d14064fb7f3b1d5f050,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12821,b734af2a8ee4697604035d14064fb7f3b1d5f050,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
12822,b734af2a8ee4697604035d14064fb7f3b1d5f050,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12823,b734af2a8ee4697604035d14064fb7f3b1d5f050,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
12824,930076b47e3a318fa0428c39579fe00f36e3b8b0,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12825,930076b47e3a318fa0428c39579fe00f36e3b8b0,/openjdk-7-jdk/Dockerfile,# Default to UTF-8 file.encoding
12826,930076b47e3a318fa0428c39579fe00f36e3b8b0,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12827,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12828,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
12829,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
12830,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12831,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,#!/bin/sh'; \
12832,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12833,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12834,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
12835,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
12836,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12837,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12838,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12839,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12840,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12841,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12842,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12843,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12844,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
12845,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12846,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12847,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12848,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
12849,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
12850,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
12851,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12852,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12853,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12854,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
12855,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12856,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12857,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12858,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-7-jdk/Dockerfile,# Default to UTF-8 file.encoding
12859,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12860,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12861,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
12862,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12863,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12864,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
12865,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12866,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12867,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12868,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12869,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12870,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12871,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12872,9a0822673dffd3e5ba66f18a8547aa60faed6d08,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12873,9a0822673dffd3e5ba66f18a8547aa60faed6d08,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12874,9a0822673dffd3e5ba66f18a8547aa60faed6d08,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
12875,9a0822673dffd3e5ba66f18a8547aa60faed6d08,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12876,9a0822673dffd3e5ba66f18a8547aa60faed6d08,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
12877,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12878,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
12879,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
12880,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12881,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jdk/alpine/Dockerfile,#!/bin/sh'; \
12882,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12883,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12884,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12885,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12886,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
12887,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12888,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12889,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12890,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12891,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
12892,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12893,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12894,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
12895,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
12896,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12897,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,#!/bin/sh'; \
12898,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12899,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12900,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
12901,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
12902,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12903,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12904,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12905,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12906,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12907,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12908,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12909,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12910,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
12911,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12912,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
12913,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12914,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
12915,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
12916,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
12917,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,# arm64v8
12918,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,# amd64
12919,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,# fallback
12920,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
12921,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12922,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
12923,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,# basic smoke test
12924,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12925,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12926,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
12927,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12928,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12929,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
12930,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12931,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12932,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12933,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12934,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12935,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12936,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12937,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
12938,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
12939,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12940,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,#!/bin/sh'; \
12941,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12942,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
12943,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12944,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12945,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12946,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12947,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
12948,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12949,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12950,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12951,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
12952,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
12953,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
12954,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12955,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12956,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
12957,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12958,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jdk/Dockerfile,#!/bin/sh'; \
12959,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12960,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/alpine/Dockerfile,# http://jdk.java.net/
12961,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
12962,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
12963,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/alpine/Dockerfile,# basic smoke test
12964,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
12965,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12966,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/slim/Dockerfile,# backwards compatibility shim
12967,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12968,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
12969,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
12970,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
12971,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
12972,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
12973,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/slim/Dockerfile,# basic smoke test
12974,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
12975,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12976,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12977,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12978,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12979,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
12980,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12981,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,#!/bin/sh'; \
12982,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12983,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
12984,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12985,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12986,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12987,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
12988,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12989,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12990,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12991,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
12992,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
12993,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
12994,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
12995,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12996,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
12997,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
12998,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
12999,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13000,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/oracle/Dockerfile,# basic smoke test
13001,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
13002,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
13003,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
13004,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,# backwards compatibility shim
13005,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13006,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13007,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
13008,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
13009,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
13010,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
13011,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13012,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,# basic smoke test
13013,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13014,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
13015,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13016,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
13017,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
13018,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13019,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
13020,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13021,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13022,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13023,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13024,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
13025,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13026,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
13027,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
13028,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
13029,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13030,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
13031,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,# amd64
13032,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,# fallback
13033,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
13034,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13035,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
13036,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,# basic smoke test
13037,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
13038,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13039,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13040,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13041,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
13042,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13043,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13044,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13045,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13046,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13047,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13048,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13049,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
13050,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
13051,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13052,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,#!/bin/sh'; \
13053,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13054,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
13055,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13056,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13057,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13058,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13059,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
13060,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13061,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13062,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13063,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
13064,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13065,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jre/Dockerfile,#!/bin/sh'; \
13066,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13067,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13068,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13069,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
13070,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
13071,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
13072,cee45bcb0f2d6db2e3e96c5465ebd5dbddcb2aea,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13073,cee45bcb0f2d6db2e3e96c5465ebd5dbddcb2aea,/openjdk-7-jre/Dockerfile,# Default to UTF-8 file.encoding
13074,cee45bcb0f2d6db2e3e96c5465ebd5dbddcb2aea,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13075,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
13076,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
13077,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,# backwards compatibility shim
13078,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13079,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
13080,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
13081,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,# amd64
13082,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,# fallback
13083,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
13084,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
13085,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
13086,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
13087,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13088,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,# basic smoke test
13089,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13090,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13091,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
13092,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
13093,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13094,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jre/alpine/Dockerfile,#!/bin/sh'; \
13095,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13096,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13097,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13098,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
13099,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13100,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13101,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
13102,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
13103,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13104,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,#!/bin/sh'; \
13105,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13106,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
13107,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13108,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13109,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13110,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13111,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
13112,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13113,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
13114,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
13115,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/Dockerfile,# backwards compatibility shim
13116,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13117,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
13118,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
13119,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
13120,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
13121,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/Dockerfile,# basic smoke test
13122,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13123,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
13124,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
13125,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
13126,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13127,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
13128,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,# arm64v8
13129,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,# amd64
13130,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,# fallback
13131,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
13132,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13133,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,# basic smoke test
13134,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
13135,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13136,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13137,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13138,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13139,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13140,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
13141,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13142,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13143,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13144,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13145,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13146,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
13147,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
13148,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
13149,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/8/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
13150,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
13151,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
13152,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13153,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13154,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
13155,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13156,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jdk/Dockerfile,#!/bin/sh'; \
13157,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13158,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13159,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
13160,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
13161,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13162,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/Dockerfile,#!/bin/sh'; \
13163,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13164,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13165,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13166,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13167,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13168,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13169,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
13170,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13171,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13172,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13173,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
13174,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
13175,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13176,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/slim/Dockerfile,#!/bin/sh'; \
13177,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13178,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13179,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13180,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13181,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13182,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13183,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13184,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
13185,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
13186,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13187,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/slim/Dockerfile,#!/bin/sh'; \
13188,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13189,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13190,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13191,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13192,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13193,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13194,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
13195,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/nanoserver-1803/Dockerfile,# https://jdk.java.net/
13196,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13197,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13198,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13199,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
13200,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
13201,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
13202,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13203,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
13204,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
13205,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,# backwards compatibility shim
13206,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13207,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13208,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
13209,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,# arm64v8
13210,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,# amd64
13211,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,# fallback
13212,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
13213,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
13214,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
13215,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
13216,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13217,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,# basic smoke test
13218,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13219,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13220,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13221,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13222,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
13223,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13224,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
13225,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
13226,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
13227,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13228,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
13229,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13230,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/oracle/Dockerfile,# basic smoke test
13231,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
13232,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13233,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
13234,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/Dockerfile,# Default to UTF-8 file.encoding
13235,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13236,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/Dockerfile,#!/bin/sh'; \
13237,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13238,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13239,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13240,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13241,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13242,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13243,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13244,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13245,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
13246,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13247,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/Dockerfile,#!/bin/sh'; \
13248,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13249,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13250,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13251,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13252,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13253,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13254,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13255,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13256,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
13257,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13258,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13259,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13260,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
13261,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
13262,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
13263,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13264,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13265,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13266,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
13267,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,# Default to UTF-8 file.encoding
13268,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13269,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,#!/bin/sh'; \
13270,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13271,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13272,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
13273,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13274,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13275,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13276,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13277,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13278,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13279,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13280,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13281,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
13282,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13283,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13284,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13285,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13286,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13287,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13288,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13289,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
13290,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/Dockerfile,# Default to UTF-8 file.encoding
13291,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13292,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/Dockerfile,#!/bin/sh'; \
13293,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13294,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13295,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13296,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13297,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13298,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13299,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13300,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
13301,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
13302,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13303,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jdk/alpine/Dockerfile,#!/bin/sh'; \
13304,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13305,1398299a268f339254a94b606113d1627dec342e,/13/jdk/alpine/Dockerfile,# https://jdk.java.net/
13306,1398299a268f339254a94b606113d1627dec342e,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
13307,1398299a268f339254a94b606113d1627dec342e,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13308,1398299a268f339254a94b606113d1627dec342e,/13/jdk/alpine/Dockerfile,# basic smoke test
13309,1398299a268f339254a94b606113d1627dec342e,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
13310,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13311,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13312,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jdk/Dockerfile,# Default to UTF-8 file.encoding
13313,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13314,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jdk/Dockerfile,#!/bin/bash'; \
13315,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13316,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13317,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13318,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
13319,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
13320,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
13321,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
13322,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
13323,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
13324,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,# backwards compatibility shim
13325,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13326,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
13327,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
13328,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
13329,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
13330,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
13331,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
13332,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,#!/usr/bin/env bash'; \
13333,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
13334,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
13335,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,# basic smoke test
13336,8b20818d91705361ff42b597369620680d0af98c,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13337,8b20818d91705361ff42b597369620680d0af98c,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13338,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13339,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
13340,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
13341,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13342,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,#!/bin/sh'; \
13343,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13344,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13345,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
13346,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13347,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13348,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13349,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13350,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13351,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13352,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13353,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
13354,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13355,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jdk/Dockerfile,#!/bin/sh'; \
13356,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13357,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13358,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13359,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
13360,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13361,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13362,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13363,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
13364,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
13365,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
13366,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13367,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
13368,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13369,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13370,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13371,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13372,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
13373,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
13374,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
13375,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13376,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13377,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13378,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
13379,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
13380,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
13381,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13382,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
13383,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
13384,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13385,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,#!/bin/sh'; \
13386,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13387,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13388,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
13389,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
13390,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13391,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13392,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13393,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13394,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
13395,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
13396,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
13397,9089afd69bd69c34413b064bc36c15509b2ed4df,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13398,9089afd69bd69c34413b064bc36c15509b2ed4df,/7-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13399,9089afd69bd69c34413b064bc36c15509b2ed4df,/7-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
13400,9089afd69bd69c34413b064bc36c15509b2ed4df,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13401,9089afd69bd69c34413b064bc36c15509b2ed4df,/7-jdk/alpine/Dockerfile,#!/bin/sh'; \
13402,ee26e3735002dfb83551faf0f3b73822addc4799,/15/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13403,ee26e3735002dfb83551faf0f3b73822addc4799,/15/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
13404,ee26e3735002dfb83551faf0f3b73822addc4799,/15/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13405,ee26e3735002dfb83551faf0f3b73822addc4799,/15/jdk/alpine/Dockerfile,# basic smoke test
13406,ee26e3735002dfb83551faf0f3b73822addc4799,/15/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
13407,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13408,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13409,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
13410,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
13411,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
13412,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,# backwards compatibility shim
13413,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13414,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
13415,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
13416,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
13417,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,# arm64v8
13418,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,# amd64
13419,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,# fallback
13420,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
13421,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
13422,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
13423,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
13424,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
13425,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
13426,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
13427,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,# basic smoke test
13428,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
13429,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
13430,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
13431,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,# backwards compatibility shim
13432,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13433,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
13434,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
13435,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
13436,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
13437,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
13438,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
13439,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,#!/usr/bin/env bash'; \
13440,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
13441,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
13442,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,# basic smoke test
13443,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
13444,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
13445,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,# Default to UTF-8 file.encoding
13446,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,# backwards compatibility shim
13447,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13448,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
13449,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
13450,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
13451,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,# arm64v8
13452,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,# amd64
13453,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,# fallback
13454,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
13455,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
13456,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
13457,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
13458,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,#!/usr/bin/env bash'; \
13459,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
13460,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
13461,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,# basic smoke test
13462,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13463,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13464,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13465,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13466,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
13467,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13468,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jre/Dockerfile,#!/bin/sh'; \
13469,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13470,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
13471,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
13472,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
13473,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
13474,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,# backwards compatibility shim
13475,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13476,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
13477,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
13478,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,# arm64v8
13479,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,# amd64
13480,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,# fallback
13481,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
13482,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
13483,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
13484,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
13485,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13486,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,# basic smoke test
13487,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13488,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13489,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13490,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13491,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13492,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13493,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13494,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13495,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
13496,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13497,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,#!/bin/sh'; \
13498,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13499,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
13500,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13501,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13502,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13503,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
13504,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13505,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13506,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13507,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
13508,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
13509,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
13510,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13511,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/7-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13512,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/7-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
13513,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13514,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/7-jdk/alpine/Dockerfile,#!/bin/sh'; \
13515,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13516,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13517,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13518,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
13519,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13520,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13521,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13522,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
13523,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13524,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13525,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13526,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
13527,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13528,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,#!/bin/sh'; \
13529,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13530,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
13531,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13532,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13533,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13534,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
13535,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13536,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
13537,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
13538,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,# backwards compatibility shim
13539,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13540,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
13541,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
13542,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
13543,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
13544,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
13545,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
13546,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
13547,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
13548,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
13549,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,# basic smoke test
13550,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
13551,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
13552,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,# backwards compatibility shim
13553,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13554,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
13555,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
13556,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
13557,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
13558,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
13559,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
13560,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
13561,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
13562,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
13563,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,# basic smoke test
13564,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13565,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13566,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13567,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13568,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13569,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13570,4815a7dc43f0fb212c40f357624fb4ec943992bf,/8-jdk/windows/nanoserver/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13571,4815a7dc43f0fb212c40f357624fb4ec943992bf,/8-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13572,4815a7dc43f0fb212c40f357624fb4ec943992bf,/8-jdk/windows/nanoserver/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
13573,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13574,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13575,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13576,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1809/Dockerfile,# http://jdk.java.net/
13577,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13578,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
13579,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
13580,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,# backwards compatibility shim
13581,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13582,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
13583,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
13584,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
13585,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
13586,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
13587,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
13588,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
13589,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
13590,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
13591,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,# basic smoke test
13592,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13593,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13594,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13595,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13596,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13597,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13598,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13599,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
13600,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
13601,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13602,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,#!/bin/sh'; \
13603,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13604,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
13605,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13606,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13607,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13608,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13609,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
13610,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13611,d912163e5aa10f916be7ac40ac0de7e8a82c4547,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13612,d912163e5aa10f916be7ac40ac0de7e8a82c4547,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
13613,d912163e5aa10f916be7ac40ac0de7e8a82c4547,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
13614,d912163e5aa10f916be7ac40ac0de7e8a82c4547,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
13615,d912163e5aa10f916be7ac40ac0de7e8a82c4547,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13616,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13617,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13618,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13619,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13620,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
13621,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13622,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
13623,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
13624,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/oracle/Dockerfile,# https://jdk.java.net/
13625,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
13626,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13627,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/oracle/Dockerfile,# basic smoke test
13628,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
13629,15835397954c9ec123e42e685035ecd239e0a1db,/8/jre/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
13630,15835397954c9ec123e42e685035ecd239e0a1db,/8/jre/windows/nanoserver-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
13631,15835397954c9ec123e42e685035ecd239e0a1db,/8/jre/windows/nanoserver-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
13632,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13633,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
13634,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/Dockerfile,# Default to UTF-8 file.encoding
13635,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13636,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/Dockerfile,#!/bin/sh'; \
13637,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13638,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13639,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13640,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13641,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13642,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13643,8b20818d91705361ff42b597369620680d0af98c,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13644,8b20818d91705361ff42b597369620680d0af98c,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13645,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13646,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
13647,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
13648,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13649,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jre/alpine/Dockerfile,#!/bin/sh'; \
13650,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13651,2695acad7bb0cd43353dc6c7d5cfc6424ab12b54,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13652,2695acad7bb0cd43353dc6c7d5cfc6424ab12b54,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
13653,2695acad7bb0cd43353dc6c7d5cfc6424ab12b54,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
13654,2695acad7bb0cd43353dc6c7d5cfc6424ab12b54,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
13655,2695acad7bb0cd43353dc6c7d5cfc6424ab12b54,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13656,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13657,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13658,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jdk/Dockerfile,# Default to UTF-8 file.encoding
13659,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13660,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jdk/Dockerfile,#!/bin/bash'; \
13661,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
13662,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
13663,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13664,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13665,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13666,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
13667,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
13668,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
13669,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13670,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13671,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
13672,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
13673,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
13674,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13675,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
13676,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
13677,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13678,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,#!/bin/sh'; \
13679,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13680,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13681,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
13682,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13683,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13684,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13685,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13686,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13687,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
13688,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
13689,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
13690,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13691,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
13692,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
13693,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13694,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/slim/Dockerfile,#!/bin/sh'; \
13695,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13696,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13697,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13698,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13699,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13700,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13701,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13702,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13703,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
13704,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13705,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jre/Dockerfile,#!/bin/sh'; \
13706,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13707,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13708,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13709,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13710,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
13711,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13712,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13713,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13714,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13715,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
13716,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13717,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13718,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
13719,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
13720,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13721,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/slim/Dockerfile,#!/bin/sh'; \
13722,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13723,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13724,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13725,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13726,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13727,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13728,b4a3c296023e590e410f645ab83d3c11a30cf535,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13729,b4a3c296023e590e410f645ab83d3c11a30cf535,/openjdk-8-jdk/Dockerfile,# Default to UTF-8 file.encoding
13730,b4a3c296023e590e410f645ab83d3c11a30cf535,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
13731,b4a3c296023e590e410f645ab83d3c11a30cf535,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
13732,b4a3c296023e590e410f645ab83d3c11a30cf535,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13733,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13734,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
13735,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
13736,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13737,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/Dockerfile,#!/bin/sh'; \
13738,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13739,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13740,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13741,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13742,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13743,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13744,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13745,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13746,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13747,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13748,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13749,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13750,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13751,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13752,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
13753,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13754,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13755,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13756,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13757,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
13758,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13759,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13760,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13761,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
13762,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13763,bd65529778e956612c0bd689aa6ff1ace391859e,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13764,bd65529778e956612c0bd689aa6ff1ace391859e,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
13765,bd65529778e956612c0bd689aa6ff1ace391859e,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13766,bd65529778e956612c0bd689aa6ff1ace391859e,/8-jre/alpine/Dockerfile,#!/bin/sh -e'; \
13767,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
13768,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/slim/Dockerfile,# backwards compatibility shim
13769,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13770,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
13771,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
13772,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
13773,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
13774,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/slim/Dockerfile,# basic smoke test
13775,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13776,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13777,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
13778,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
13779,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
13780,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
13781,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13782,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/oracle/Dockerfile,# basic smoke test
13783,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
13784,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
13785,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/Dockerfile,# backwards compatibility shim
13786,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13787,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
13788,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
13789,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
13790,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
13791,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/Dockerfile,# basic smoke test
13792,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13793,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13794,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13795,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
13796,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13797,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jdk/Dockerfile,#!/bin/sh'; \
13798,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
13799,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
13800,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13801,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13802,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13803,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
13804,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13805,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13806,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
13807,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
13808,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13809,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,#!/bin/sh'; \
13810,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13811,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13812,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
13813,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
13814,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13815,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13816,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13817,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13818,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13819,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
13820,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
13821,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13822,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,#!/bin/sh'; \
13823,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13824,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13825,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13826,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13827,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13828,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13829,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13830,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13831,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13832,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
13833,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13834,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jdk/Dockerfile,#!/bin/sh'; \
13835,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13836,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13837,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13838,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13839,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13840,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
13841,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
13842,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
13843,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,# backwards compatibility shim
13844,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13845,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
13846,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
13847,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
13848,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
13849,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
13850,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
13851,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,#!/usr/bin/env bash'; \
13852,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
13853,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
13854,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,# basic smoke test
13855,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13856,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
13857,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
13858,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13859,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,#!/bin/sh'; \
13860,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13861,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
13862,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13863,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13864,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13865,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13866,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
13867,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13868,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13869,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
13870,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
13871,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13872,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/Dockerfile,#!/bin/sh'; \
13873,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13874,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13875,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13876,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13877,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13878,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13879,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13880,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13881,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
13882,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13883,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
13884,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13885,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
13886,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
13887,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13888,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,#!/bin/sh'; \
13889,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13890,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13891,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
13892,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13893,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13894,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13895,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13896,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13897,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13898,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
13899,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
13900,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13901,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,#!/bin/sh'; \
13902,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13903,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13904,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13905,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13906,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13907,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13908,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13909,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13910,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13911,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13912,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
13913,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13914,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13915,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13916,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13917,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
13918,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13919,54c64cf47d2b705418feb68b811419a223c5a040,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13920,54c64cf47d2b705418feb68b811419a223c5a040,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13921,54c64cf47d2b705418feb68b811419a223c5a040,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
13922,54c64cf47d2b705418feb68b811419a223c5a040,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13923,54c64cf47d2b705418feb68b811419a223c5a040,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
13924,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13925,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13926,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
13927,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13928,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jre/Dockerfile,#!/bin/sh'; \
13929,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13930,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
13931,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
13932,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
13933,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,# Default to UTF-8 file.encoding
13934,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,# backwards compatibility shim
13935,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13936,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13937,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
13938,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,# arm64v8
13939,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,# amd64
13940,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,# fallback
13941,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
13942,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,#!/usr/bin/env bash'; \
13943,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
13944,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
13945,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13946,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,# basic smoke test
13947,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13948,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13949,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13950,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13951,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
13952,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13953,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13954,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
13955,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13956,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/alpine/Dockerfile,#!/bin/sh -e'; \
13957,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/alpine/Dockerfile,# https://jdk.java.net/
13958,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
13959,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13960,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/alpine/Dockerfile,# basic smoke test
13961,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
13962,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13963,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13964,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13965,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
13966,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13967,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13968,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
13969,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
13970,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13971,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/slim/Dockerfile,#!/bin/sh'; \
13972,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13973,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13974,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13975,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13976,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13977,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13978,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13979,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13980,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13981,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13982,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13983,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
13984,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
13985,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
13986,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
13987,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
13988,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13989,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/oracle/Dockerfile,# basic smoke test
13990,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
13991,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
13992,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
13993,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
13994,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
13995,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,# backwards compatibility shim
13996,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13997,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13998,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
13999,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
14000,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
14001,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
14002,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14003,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,# basic smoke test
14004,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14005,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14006,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
14007,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
14008,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14009,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/slim/Dockerfile,#!/bin/sh'; \
14010,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14011,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14012,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14013,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14014,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14015,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14016,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14017,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
14018,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
14019,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
14020,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14021,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/oracle/Dockerfile,# basic smoke test
14022,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
14023,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
14024,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
14025,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14026,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
14027,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,# backwards compatibility shim
14028,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14029,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
14030,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
14031,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,# arm64v8
14032,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,# amd64
14033,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,# fallback
14034,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
14035,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
14036,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
14037,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
14038,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14039,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,# basic smoke test
14040,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14041,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
14042,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14043,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
14044,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
14045,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
14046,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14047,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/oracle/Dockerfile,# basic smoke test
14048,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
14049,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
14050,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14051,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
14052,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,# backwards compatibility shim
14053,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14054,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
14055,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
14056,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
14057,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
14058,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
14059,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
14060,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,#!/usr/bin/env bash'; \
14061,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
14062,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
14063,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,# basic smoke test
14064,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14065,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14066,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
14067,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
14068,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
14069,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14070,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14071,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
14072,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
14073,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
14074,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14075,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
14076,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
14077,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14078,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,#!/bin/sh'; \
14079,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14080,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14081,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14082,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14083,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14084,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14085,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14086,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
14087,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14088,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14089,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14090,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14091,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
14092,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14093,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14094,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14095,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
14096,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
14097,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
14098,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14099,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14100,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
14101,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
14102,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14103,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
14104,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14105,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14106,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14107,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14108,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14109,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14110,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/windows/nanoserver/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14111,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14112,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/windows/nanoserver/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
14113,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14114,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14115,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14116,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
14117,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14118,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14119,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14120,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
14121,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
14122,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
14123,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
14124,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/nanoserver-1809/Dockerfile,# https://jdk.java.net/
14125,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14126,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14127,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
14128,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
14129,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
14130,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
14131,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/oracle/Dockerfile,# basic smoke test
14132,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
14133,9b3b7ed1bdd754fa61b5dd86c0bcd3e3400c6a33,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14134,9b3b7ed1bdd754fa61b5dd86c0bcd3e3400c6a33,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14135,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14136,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14137,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
14138,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
14139,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,# backwards compatibility shim
14140,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14141,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
14142,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
14143,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
14144,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
14145,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
14146,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
14147,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
14148,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
14149,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
14150,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,# basic smoke test
14151,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14152,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
14153,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
14154,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14155,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,#!/bin/sh'; \
14156,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14157,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14158,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14159,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14160,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14161,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14162,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14163,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14164,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
14165,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
14166,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
14167,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14168,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/oracle/Dockerfile,# basic smoke test
14169,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
14170,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14171,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14172,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14173,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
14174,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14175,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14176,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14177,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14178,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
14179,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14180,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
14181,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
14182,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14183,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
14184,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,# backwards compatibility shim
14185,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14186,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14187,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
14188,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
14189,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
14190,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
14191,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14192,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,# basic smoke test
14193,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14194,030bf19db79998e9f9861d1ce848bbf1f41ee050,/openjdk-8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14195,030bf19db79998e9f9861d1ce848bbf1f41ee050,/openjdk-8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
14196,030bf19db79998e9f9861d1ce848bbf1f41ee050,/openjdk-8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14197,030bf19db79998e9f9861d1ce848bbf1f41ee050,/openjdk-8-jdk/alpine/Dockerfile,#!/bin/sh -e'; \
14198,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14199,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14200,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14201,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
14202,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14203,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14204,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14205,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
14206,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14207,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
14208,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14209,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,# Default to UTF-8 file.encoding
14210,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
14211,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
14212,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,# arm64v8
14213,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,# amd64
14214,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,# fallback
14215,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
14216,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14217,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
14218,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,# basic smoke test
14219,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14220,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14221,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14222,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14223,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14224,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14225,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
14226,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14227,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
14228,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
14229,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
14230,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14231,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/oracle/Dockerfile,# basic smoke test
14232,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
14233,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14234,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
14235,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
14236,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14237,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/slim/Dockerfile,#!/bin/sh'; \
14238,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14239,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14240,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14241,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14242,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14243,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14244,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14245,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14246,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jre/Dockerfile,# Default to UTF-8 file.encoding
14247,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14248,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jre/Dockerfile,#!/bin/bash'; \
14249,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14250,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
14251,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14252,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
14253,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14254,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
14255,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,# arm64v8
14256,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,# amd64
14257,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,# fallback
14258,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
14259,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14260,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
14261,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,# basic smoke test
14262,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
14263,9089afd69bd69c34413b064bc36c15509b2ed4df,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14264,9089afd69bd69c34413b064bc36c15509b2ed4df,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14265,9089afd69bd69c34413b064bc36c15509b2ed4df,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
14266,9089afd69bd69c34413b064bc36c15509b2ed4df,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14267,9089afd69bd69c34413b064bc36c15509b2ed4df,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
14268,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14269,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
14270,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
14271,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14272,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,#!/bin/sh'; \
14273,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14274,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
14275,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14276,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14277,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14278,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14279,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
14280,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14281,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14282,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14283,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14284,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
14285,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14286,c34391ea981c804c097981bad8403ec4bd934285,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14287,c34391ea981c804c097981bad8403ec4bd934285,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14288,c34391ea981c804c097981bad8403ec4bd934285,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
14289,c34391ea981c804c097981bad8403ec4bd934285,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14290,c34391ea981c804c097981bad8403ec4bd934285,/9-jre/Dockerfile,#!/bin/sh'; \
14291,c34391ea981c804c097981bad8403ec4bd934285,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14292,c34391ea981c804c097981bad8403ec4bd934285,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14293,c34391ea981c804c097981bad8403ec4bd934285,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14294,c34391ea981c804c097981bad8403ec4bd934285,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14295,c34391ea981c804c097981bad8403ec4bd934285,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14296,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14297,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14298,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14299,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
14300,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14301,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14302,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14303,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14304,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
14305,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14306,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14307,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14308,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14309,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14310,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14311,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14312,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
14313,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
14314,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14315,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
14316,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14317,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14318,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14319,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14320,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14321,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14322,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14323,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14324,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14325,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14326,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
14327,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14328,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14329,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14330,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14331,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
14332,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14333,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14334,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14335,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14336,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
14337,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14338,2544422915ae09bf77b02f0afaadaad5ba204cef,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14339,2544422915ae09bf77b02f0afaadaad5ba204cef,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
14340,2544422915ae09bf77b02f0afaadaad5ba204cef,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
14341,2544422915ae09bf77b02f0afaadaad5ba204cef,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
14342,2544422915ae09bf77b02f0afaadaad5ba204cef,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14343,2544422915ae09bf77b02f0afaadaad5ba204cef,/13/jdk/oracle/Dockerfile,# basic smoke test
14344,2544422915ae09bf77b02f0afaadaad5ba204cef,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
14345,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14346,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14347,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
14348,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14349,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
14350,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14351,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14352,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14353,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14354,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14355,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14356,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
14357,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
14358,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14359,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
14360,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14361,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14362,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14363,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14364,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14365,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14366,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14367,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14368,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jdk/Dockerfile,# Default to UTF-8 file.encoding
14369,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
14370,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
14371,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14372,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14373,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
14374,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
14375,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14376,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/slim/Dockerfile,#!/bin/sh'; \
14377,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14378,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14379,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14380,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14381,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14382,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14383,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14384,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14385,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
14386,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14387,46dbd23011cd18e86a7ce4a326de1c0f8fdf7463,/7/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14388,46dbd23011cd18e86a7ce4a326de1c0f8fdf7463,/7/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14389,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14390,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14391,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14392,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14393,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14394,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/windows/nanoserver/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14395,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14396,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/windows/nanoserver/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
14397,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/windows/nanoserver/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14398,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14399,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14400,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
14401,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14402,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jre/Dockerfile,#!/bin/sh'; \
14403,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14404,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
14405,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
14406,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,# backwards compatibility shim
14407,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14408,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
14409,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
14410,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
14411,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
14412,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
14413,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
14414,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
14415,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
14416,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
14417,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,# basic smoke test
14418,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14419,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14420,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14421,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14422,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14423,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14424,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14425,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
14426,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
14427,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
14428,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14429,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
14430,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/nanoserver-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14431,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14432,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
14433,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
14434,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,# backwards compatibility shim
14435,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14436,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
14437,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
14438,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
14439,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
14440,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
14441,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
14442,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
14443,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
14444,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
14445,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,# basic smoke test
14446,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14447,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14448,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
14449,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
14450,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14451,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/slim/Dockerfile,#!/bin/sh'; \
14452,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14453,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14454,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14455,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14456,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14457,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14458,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14459,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14460,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14461,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
14462,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14463,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14464,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
14465,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
14466,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14467,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/slim/Dockerfile,#!/bin/sh'; \
14468,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14469,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14470,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14471,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14472,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14473,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14474,8d80a82bb2a2bb895beffebe28ef221e36449446,/openjdk-8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14475,8d80a82bb2a2bb895beffebe28ef221e36449446,/openjdk-8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
14476,8d80a82bb2a2bb895beffebe28ef221e36449446,/openjdk-8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14477,8d80a82bb2a2bb895beffebe28ef221e36449446,/openjdk-8-jre/alpine/Dockerfile,#!/bin/sh -e'; \
14478,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14479,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
14480,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,# Default to UTF-8 file.encoding
14481,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14482,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,#!/bin/sh'; \
14483,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14484,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14485,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
14486,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14487,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14488,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14489,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14490,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14491,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
14492,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14493,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14494,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14495,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14496,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14497,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
14498,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14499,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/alpine/Dockerfile,# https://jdk.java.net/
14500,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
14501,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14502,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/alpine/Dockerfile,# basic smoke test
14503,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
14504,bde1e9a0f36e12e3df58b81acddd695fd140cf6a,/14/jdk/alpine/Dockerfile,# https://jdk.java.net/
14505,bde1e9a0f36e12e3df58b81acddd695fd140cf6a,/14/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
14506,bde1e9a0f36e12e3df58b81acddd695fd140cf6a,/14/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14507,bde1e9a0f36e12e3df58b81acddd695fd140cf6a,/14/jdk/alpine/Dockerfile,# basic smoke test
14508,bde1e9a0f36e12e3df58b81acddd695fd140cf6a,/14/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
14509,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14510,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14511,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14512,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
14513,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14514,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14515,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
14516,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
14517,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14518,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/slim/Dockerfile,#!/bin/sh'; \
14519,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14520,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14521,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14522,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14523,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14524,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14525,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
14526,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
14527,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,# backwards compatibility shim
14528,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14529,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14530,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
14531,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
14532,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
14533,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
14534,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14535,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,# basic smoke test
14536,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14537,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
14538,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14539,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
14540,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
14541,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14542,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/Dockerfile,#!/bin/sh'; \
14543,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14544,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14545,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14546,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14547,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14548,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14549,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14550,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
14551,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
14552,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14553,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/alpine/Dockerfile,#!/bin/sh'; \
14554,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14555,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
14556,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14557,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14558,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14559,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14560,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14561,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
14562,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14563,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
14564,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14565,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
14566,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14567,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
14568,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/oracle/Dockerfile,# amd64
14569,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/oracle/Dockerfile,# fallback
14570,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
14571,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14572,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/oracle/Dockerfile,# basic smoke test
14573,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
14574,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
14575,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
14576,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,# backwards compatibility shim
14577,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14578,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14579,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
14580,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,# arm64v8
14581,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,# amd64
14582,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,# fallback
14583,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
14584,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
14585,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
14586,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
14587,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14588,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,# basic smoke test
14589,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14590,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14591,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14592,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jre/Dockerfile,# Default to UTF-8 file.encoding
14593,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14594,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jre/Dockerfile,#!/bin/bash'; \
14595,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14596,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
14597,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
14598,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14599,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
14600,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,# backwards compatibility shim
14601,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14602,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
14603,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
14604,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,# arm64v8
14605,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,# amd64
14606,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,# fallback
14607,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
14608,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
14609,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
14610,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
14611,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14612,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,# basic smoke test
14613,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14614,5fb0ba0b6f08e6647a1ba4fbdf8263895b1cf61f,/8-jdk/windows/windowsservercore/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14615,5fb0ba0b6f08e6647a1ba4fbdf8263895b1cf61f,/8-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14616,5fb0ba0b6f08e6647a1ba4fbdf8263895b1cf61f,/8-jdk/windows/windowsservercore/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
14617,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14618,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14619,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14620,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14621,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14622,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14623,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14624,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14625,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
14626,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14627,311e8bb2d3d322cf0e00366408dd5e1c3210bfce,/13/jdk/alpine/Dockerfile,# https://jdk.java.net/
14628,311e8bb2d3d322cf0e00366408dd5e1c3210bfce,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
14629,311e8bb2d3d322cf0e00366408dd5e1c3210bfce,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14630,311e8bb2d3d322cf0e00366408dd5e1c3210bfce,/13/jdk/alpine/Dockerfile,# basic smoke test
14631,311e8bb2d3d322cf0e00366408dd5e1c3210bfce,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
14632,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14633,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14634,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
14635,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14636,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/Dockerfile,#!/bin/sh'; \
14637,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14638,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14639,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14640,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14641,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14642,a8d6952a882f3e56041be8d80df6276dab111f82,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14643,a8d6952a882f3e56041be8d80df6276dab111f82,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14644,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
14645,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
14646,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,# backwards compatibility shim
14647,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14648,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14649,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
14650,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
14651,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
14652,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
14653,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14654,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,# basic smoke test
14655,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14656,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
14657,0467df283134a79840c25808093c00f7c94b9a88,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14658,0467df283134a79840c25808093c00f7c94b9a88,/6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14659,0467df283134a79840c25808093c00f7c94b9a88,/6-jre/Dockerfile,# Default to UTF-8 file.encoding
14660,0467df283134a79840c25808093c00f7c94b9a88,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14661,0467df283134a79840c25808093c00f7c94b9a88,/6-jre/Dockerfile,#!/bin/sh'; \
14662,0467df283134a79840c25808093c00f7c94b9a88,/6-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14663,0467df283134a79840c25808093c00f7c94b9a88,/6-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14664,0467df283134a79840c25808093c00f7c94b9a88,/6-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14665,0467df283134a79840c25808093c00f7c94b9a88,/6-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14666,0467df283134a79840c25808093c00f7c94b9a88,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14667,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
14668,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14669,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
14670,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,# backwards compatibility shim
14671,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14672,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
14673,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
14674,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
14675,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
14676,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
14677,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
14678,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,#!/usr/bin/env bash'; \
14679,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
14680,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,# basic smoke test
14681,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14682,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14683,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14684,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
14685,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14686,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14687,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14688,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14689,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
14690,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14691,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14692,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14693,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
14694,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14695,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14696,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
14697,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
14698,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
14699,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14700,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-6"
14701,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
14702,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14703,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/slim/Dockerfile,#!/bin/sh'; \
14704,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14705,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14706,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14707,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14708,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14709,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14710,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14711,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14712,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14713,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
14714,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14715,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14716,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
14717,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14718,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/alpine/Dockerfile,# basic smoke test
14719,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
14720,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14721,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14722,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jre/Dockerfile,# Default to UTF-8 file.encoding
14723,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14724,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jre/Dockerfile,#!/bin/bash'; \
14725,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14726,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14727,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14728,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
14729,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14730,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14731,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
14732,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
14733,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14734,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,#!/bin/sh'; \
14735,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14736,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14737,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
14738,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
14739,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14740,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14741,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14742,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14743,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14744,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
14745,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
14746,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14747,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/Dockerfile,#!/bin/sh'; \
14748,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14749,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14750,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14751,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14752,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14753,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14754,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14755,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
14756,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
14757,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14758,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,#!/bin/sh'; \
14759,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14760,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
14761,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14762,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14763,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14764,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14765,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
14766,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14767,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14768,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
14769,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
14770,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14771,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jre/alpine/Dockerfile,#!/bin/sh'; \
14772,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14773,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14774,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
14775,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
14776,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14777,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,#!/bin/sh'; \
14778,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14779,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14780,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
14781,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
14782,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14783,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14784,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14785,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14786,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14787,d63214d23aad827190c599e23351bd0bdd7dcadc,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14788,d63214d23aad827190c599e23351bd0bdd7dcadc,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
14789,d63214d23aad827190c599e23351bd0bdd7dcadc,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
14790,d63214d23aad827190c599e23351bd0bdd7dcadc,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14791,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14792,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14793,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14794,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
14795,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14796,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
14797,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14798,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
14799,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14800,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
14801,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,# arm64v8
14802,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,# amd64
14803,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,# fallback
14804,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
14805,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14806,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
14807,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,# basic smoke test
14808,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
14809,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14810,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14811,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
14812,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14813,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jdk/Dockerfile,#!/bin/sh'; \
14814,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14815,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/13/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
14816,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14817,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
14818,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
14819,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
14820,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14821,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/13/jdk/oracle/Dockerfile,# basic smoke test
14822,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
14823,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
14824,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
14825,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,# backwards compatibility shim
14826,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14827,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14828,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
14829,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
14830,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
14831,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
14832,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14833,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,# basic smoke test
14834,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14835,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
14836,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14837,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
14838,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
14839,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14840,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,#!/bin/sh'; \
14841,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14842,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
14843,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14844,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14845,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14846,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14847,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
14848,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14849,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14850,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-6-jre/Dockerfile,# Default to UTF-8 file.encoding
14851,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14852,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14853,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14854,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14855,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
14856,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14857,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14858,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14859,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
14860,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
14861,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
14862,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
14863,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
14864,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14865,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
14866,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,# backwards compatibility shim
14867,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14868,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,# https://jdk.java.net/
14869,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
14870,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
14871,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
14872,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
14873,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14874,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,# basic smoke test
14875,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14876,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14877,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14878,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14879,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14880,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14881,1de3476e9d15e63768d7afeb672ad8a0ccb3f56f,/7/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14882,1de3476e9d15e63768d7afeb672ad8a0ccb3f56f,/7/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14883,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
14884,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
14885,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14886,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
14887,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,# backwards compatibility shim
14888,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14889,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,# https://jdk.java.net/
14890,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
14891,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
14892,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
14893,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
14894,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14895,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,# basic smoke test
14896,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14897,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14898,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
14899,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
14900,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
14901,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
14902,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/oracle/Dockerfile,# basic smoke test
14903,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
14904,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/windows/windowsservercore/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14905,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14906,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/windows/windowsservercore/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
14907,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/windows/windowsservercore/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14908,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14909,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-6"
14910,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
14911,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14912,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/slim/Dockerfile,#!/bin/sh'; \
14913,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14914,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14915,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14916,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14917,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14918,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14919,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/windows/windowsservercore/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14920,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14921,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/windows/windowsservercore/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
14922,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
14923,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
14924,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,# backwards compatibility shim
14925,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14926,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
14927,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
14928,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
14929,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,# arm64v8
14930,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,# amd64
14931,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,# fallback
14932,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
14933,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
14934,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
14935,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
14936,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
14937,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
14938,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
14939,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,# basic smoke test
14940,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14941,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
14942,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
14943,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,# backwards compatibility shim
14944,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14945,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14946,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
14947,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
14948,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
14949,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
14950,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14951,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,# basic smoke test
14952,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14953,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
14954,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
14955,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14956,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
14957,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14958,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
14959,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14960,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/oracle/Dockerfile,# basic smoke test
14961,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
14962,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14963,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
14964,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
14965,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14966,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/Dockerfile,#!/bin/sh'; \
14967,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14968,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14969,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14970,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14971,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14972,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14973,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14974,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14975,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14976,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
14977,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14978,30b27d0b3b16ae395859ba47610b858076324508,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14979,30b27d0b3b16ae395859ba47610b858076324508,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14980,30b27d0b3b16ae395859ba47610b858076324508,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
14981,30b27d0b3b16ae395859ba47610b858076324508,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14982,30b27d0b3b16ae395859ba47610b858076324508,/9-jre/Dockerfile,#!/bin/sh'; \
14983,30b27d0b3b16ae395859ba47610b858076324508,/9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
14984,30b27d0b3b16ae395859ba47610b858076324508,/9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
14985,30b27d0b3b16ae395859ba47610b858076324508,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14986,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14987,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14988,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14989,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
14990,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14991,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14992,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14993,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
14994,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14995,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jdk/Dockerfile,#!/bin/sh'; \
14996,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14997,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
14998,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/nanoserver-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
14999,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/nanoserver-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
15000,882461ade8207de7647d083009200de85eb978bc,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15001,882461ade8207de7647d083009200de85eb978bc,/6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15002,882461ade8207de7647d083009200de85eb978bc,/6-jre/Dockerfile,# Default to UTF-8 file.encoding
15003,882461ade8207de7647d083009200de85eb978bc,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15004,882461ade8207de7647d083009200de85eb978bc,/6-jre/Dockerfile,#!/bin/sh'; \
15005,882461ade8207de7647d083009200de85eb978bc,/6-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15006,882461ade8207de7647d083009200de85eb978bc,/6-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15007,882461ade8207de7647d083009200de85eb978bc,/6-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15008,882461ade8207de7647d083009200de85eb978bc,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15009,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15010,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15011,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
15012,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
15013,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
15014,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15015,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15016,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
15017,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,# backwards compatibility shim
15018,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15019,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
15020,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
15021,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
15022,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
15023,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
15024,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15025,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
15026,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15027,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15028,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,# basic smoke test
15029,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15030,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15031,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15032,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
15033,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15034,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15035,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15036,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
15037,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15038,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jre/Dockerfile,#!/bin/sh'; \
15039,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15040,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15041,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
15042,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
15043,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15044,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/alpine/Dockerfile,#!/bin/sh'; \
15045,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15046,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15047,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
15048,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,# backwards compatibility shim
15049,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15050,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
15051,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
15052,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
15053,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
15054,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
15055,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15056,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
15057,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15058,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15059,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,# basic smoke test
15060,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15061,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
15062,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15063,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15064,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,#!/bin/sh'; \
15065,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15066,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
15067,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15068,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15069,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15070,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15071,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
15072,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15073,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15074,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
15075,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,# backwards compatibility shim
15076,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15077,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
15078,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
15079,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
15080,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
15081,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
15082,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15083,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
15084,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15085,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15086,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,# basic smoke test
15087,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15088,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15089,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15090,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15091,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15092,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15093,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15094,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15095,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
15096,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15097,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15098,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15099,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15100,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
15101,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15102,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15103,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
15104,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15105,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/alpine/Dockerfile,# basic smoke test
15106,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
15107,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15108,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15109,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15110,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
15111,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15112,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15113,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15114,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
15115,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15116,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jdk/Dockerfile,#!/bin/sh'; \
15117,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
15118,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
15119,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15120,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15121,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15122,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,# backwards compatibility shim
15123,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15124,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15125,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15126,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
15127,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15128,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15129,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15130,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,# basic smoke test
15131,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15132,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
15133,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15134,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
15135,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/Dockerfile,# Default to UTF-8 file.encoding
15136,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15137,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/Dockerfile,#!/bin/sh'; \
15138,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15139,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15140,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15141,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15142,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15143,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15144,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15145,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15146,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15147,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
15148,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15149,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15150,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15151,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
15152,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15153,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15154,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
15155,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,# Default to UTF-8 file.encoding
15156,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,# backwards compatibility shim
15157,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15158,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
15159,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
15160,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
15161,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,# arm64v8
15162,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,# amd64
15163,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,# fallback
15164,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
15165,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
15166,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
15167,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15168,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,#!/usr/bin/env bash'; \
15169,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15170,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15171,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,# basic smoke test
15172,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15173,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
15174,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
15175,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15176,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/slim/Dockerfile,#!/bin/sh'; \
15177,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15178,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15179,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15180,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15181,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15182,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15183,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
15184,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
15185,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
15186,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
15187,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
15188,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/oracle/Dockerfile,# basic smoke test
15189,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
15190,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15191,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15192,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15193,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15194,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15195,06552bdff28039988fca96ec7f810456849d420f,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15196,06552bdff28039988fca96ec7f810456849d420f,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15197,06552bdff28039988fca96ec7f810456849d420f,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
15198,06552bdff28039988fca96ec7f810456849d420f,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15199,06552bdff28039988fca96ec7f810456849d420f,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
15200,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15201,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
15202,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15203,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15204,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,#!/bin/sh'; \
15205,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15206,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15207,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
15208,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15209,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15210,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15211,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15212,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15213,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15214,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
15215,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
15216,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15217,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
15218,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15219,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15220,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15221,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jdk/Dockerfile,# Default to UTF-8 file.encoding
15222,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15223,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jdk/Dockerfile,#!/bin/bash'; \
15224,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
15225,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
15226,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15227,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15228,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
15229,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
15230,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15231,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/Dockerfile,#!/bin/sh'; \
15232,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15233,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15234,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15235,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15236,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15237,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15238,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15239,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15240,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15241,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
15242,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15243,d2acc0356b5a68a4d168462a3f5f0e29444982b9,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15244,d2acc0356b5a68a4d168462a3f5f0e29444982b9,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15245,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15246,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15247,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15248,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
15249,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15250,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15251,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
15252,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
15253,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15254,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/slim/Dockerfile,#!/bin/sh'; \
15255,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15256,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15257,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15258,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15259,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15260,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15261,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15262,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
15263,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,# backwards compatibility shim
15264,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15265,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
15266,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
15267,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,# arm64v8
15268,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,# amd64
15269,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,# fallback
15270,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15271,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
15272,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15273,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15274,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15275,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,# basic smoke test
15276,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15277,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15278,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/slim/Dockerfile,# backwards compatibility shim
15279,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15280,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
15281,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
15282,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
15283,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
15284,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
15285,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/slim/Dockerfile,# basic smoke test
15286,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15287,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15288,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15289,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15290,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
15291,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15292,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15293,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-8-jdk/Dockerfile,# Default to UTF-8 file.encoding
15294,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
15295,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
15296,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15297,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15298,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15299,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
15300,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15301,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/Dockerfile,#!/bin/sh'; \
15302,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
15303,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
15304,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15305,44d6908951d61d6f3fc8d08a4c0e7857f0914ee5,/13/jdk/alpine/Dockerfile,# https://jdk.java.net/
15306,44d6908951d61d6f3fc8d08a4c0e7857f0914ee5,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
15307,44d6908951d61d6f3fc8d08a4c0e7857f0914ee5,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15308,44d6908951d61d6f3fc8d08a4c0e7857f0914ee5,/13/jdk/alpine/Dockerfile,# basic smoke test
15309,44d6908951d61d6f3fc8d08a4c0e7857f0914ee5,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
15310,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
15311,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
15312,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
15313,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15314,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15315,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15316,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15317,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15318,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15319,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15320,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,# backwards compatibility shim
15321,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15322,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15323,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15324,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
15325,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15326,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15327,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15328,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,# basic smoke test
15329,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15330,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
15331,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15332,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15333,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15334,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15335,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15336,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15337,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
15338,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15339,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15340,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
15341,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15342,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15343,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (a case of https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
15344,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15345,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15346,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15347,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15348,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15349,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15350,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15351,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15352,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15353,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15354,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15355,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15356,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,# backwards compatibility shim
15357,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15358,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
15359,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
15360,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
15361,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
15362,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
15363,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15364,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
15365,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15366,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15367,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,# basic smoke test
15368,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15369,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
15370,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,# Default to UTF-8 file.encoding
15371,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15372,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,#!/bin/sh'; \
15373,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15374,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15375,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
15376,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15377,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15378,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15379,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15380,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15381,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15382,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15383,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15384,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
15385,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15386,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15387,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15388,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15389,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
15390,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15391,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15392,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15393,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
15394,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15395,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15396,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15397,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
15398,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15399,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15400,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
15401,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15402,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15403,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15404,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15405,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15406,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15407,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15408,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15409,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15410,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
15411,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15412,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jre/Dockerfile,#!/bin/sh'; \
15413,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15414,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15415,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15416,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15417,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15418,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15419,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15420,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15421,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
15422,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15423,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15424,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
15425,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15426,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15427,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,#!/bin/sh'; \
15428,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15429,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15430,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
15431,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15432,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15433,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15434,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15435,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15436,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/windows/nanoserver/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15437,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15438,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/windows/nanoserver/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
15439,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/windows/nanoserver/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15440,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15441,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
15442,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
15443,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15444,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/alpine/Dockerfile,#!/bin/sh'; \
15445,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15446,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15447,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15448,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15449,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
15450,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15451,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15452,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
15453,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
15454,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15455,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/Dockerfile,#!/bin/sh'; \
15456,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15457,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15458,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15459,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15460,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15461,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15462,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15463,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15464,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
15465,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15466,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15467,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
15468,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
15469,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15470,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,#!/bin/sh'; \
15471,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15472,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
15473,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15474,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15475,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15476,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15477,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
15478,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15479,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15480,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15481,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
15482,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15483,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jdk/Dockerfile,#!/bin/sh'; \
15484,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15485,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15486,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
15487,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
15488,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
15489,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,# backwards compatibility shim
15490,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15491,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15492,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
15493,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,# arm64v8
15494,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,# amd64
15495,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,# fallback
15496,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15497,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
15498,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15499,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15500,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15501,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,# basic smoke test
15502,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15503,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15504,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15505,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
15506,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
15507,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
15508,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
15509,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15510,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15511,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15512,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
15513,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15514,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15515,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,#!/bin/sh'; \
15516,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15517,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15518,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
15519,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15520,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15521,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15522,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15523,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15524,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
15525,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/nanoserver-1803/Dockerfile,# https://jdk.java.net/
15526,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15527,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15528,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
15529,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
15530,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15531,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,#!/bin/sh'; \
15532,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15533,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15534,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
15535,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15536,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15537,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15538,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15539,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15540,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15541,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15542,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
15543,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15544,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15545,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15546,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
15547,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
15548,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
15549,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
15550,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15551,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15552,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
15553,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15554,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15555,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15556,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15557,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15558,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
15559,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15560,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15561,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
15562,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
15563,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15564,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/slim/Dockerfile,#!/bin/sh'; \
15565,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15566,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15567,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15568,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15569,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15570,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15571,f45f3f269d4b515201f290360b345790663e657e,/10/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15572,f45f3f269d4b515201f290360b345790663e657e,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15573,f45f3f269d4b515201f290360b345790663e657e,/10/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
15574,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
15575,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
15576,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
15577,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
15578,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15579,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/oracle/Dockerfile,# basic smoke test
15580,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
15581,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15582,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
15583,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,# Default to UTF-8 file.encoding
15584,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15585,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,#!/bin/sh'; \
15586,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15587,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15588,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15589,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15590,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15591,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15592,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15593,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15594,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15595,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
15596,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
15597,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
15598,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15599,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15600,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
15601,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
15602,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
15603,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,# backwards compatibility shim
15604,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15605,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
15606,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
15607,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,# arm64v8
15608,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,# amd64
15609,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,# fallback
15610,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15611,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
15612,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15613,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15614,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15615,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,# basic smoke test
15616,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15617,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15618,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15619,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15620,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
15621,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15622,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15623,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15624,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15625,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15626,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15627,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15628,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
15629,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,# backwards compatibility shim
15630,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15631,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
15632,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
15633,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
15634,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
15635,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
15636,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15637,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
15638,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15639,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15640,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,# basic smoke test
15641,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15642,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
15643,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15644,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15645,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,#!/bin/sh'; \
15646,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15647,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15648,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
15649,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15650,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15651,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15652,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15653,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15654,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15655,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
15656,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
15657,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,# backwards compatibility shim
15658,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15659,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
15660,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
15661,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
15662,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
15663,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
15664,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15665,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,#!/usr/bin/env bash'; \
15666,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15667,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15668,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,# basic smoke test
15669,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15670,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15671,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jdk/Dockerfile,# Default to UTF-8 file.encoding
15672,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15673,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jdk/Dockerfile,#!/bin/sh'; \
15674,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15675,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
15676,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15677,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15678,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15679,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
15680,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
15681,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15682,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/slim/Dockerfile,#!/bin/sh'; \
15683,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15684,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15685,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15686,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15687,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15688,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15689,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15690,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15691,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15692,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/7-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
15693,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
15694,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15695,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/7-jre/Dockerfile,#!/bin/sh'; \
15696,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/7-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15697,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/7-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15698,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15699,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/7-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15700,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/7-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15701,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15702,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15703,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
15704,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
15705,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,# backwards compatibility shim
15706,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15707,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
15708,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
15709,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
15710,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
15711,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
15712,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15713,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,#!/usr/bin/env bash'; \
15714,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15715,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15716,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,# basic smoke test
15717,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15718,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15719,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15720,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
15721,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
15722,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
15723,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15724,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15725,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,# backwards compatibility shim
15726,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15727,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,# https://jdk.java.net/
15728,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15729,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
15730,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15731,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15732,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15733,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,# basic smoke test
15734,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15735,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
15736,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15737,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15738,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,# backwards compatibility shim
15739,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15740,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15741,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15742,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
15743,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15744,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15745,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15746,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,# basic smoke test
15747,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15748,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
15749,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15750,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15751,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
15752,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15753,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jdk/Dockerfile,#!/bin/sh'; \
15754,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15755,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15756,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15757,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
15758,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
15759,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
15760,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
15761,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/slim/Dockerfile,# backwards compatibility shim
15762,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15763,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
15764,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
15765,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/slim/Dockerfile,# TODO filter out arm64 for openjdk:8 (https://github.com/AdoptOpenJDK/openjdk8-upstream-binaries/releases/tag/jdk8u212-b04 vs https://github.com/AdoptOpenJDK/openjdk11-upstream-binaries/releases/tag/jdk-11.0.3%2B7)
15766,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
15767,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
15768,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/slim/Dockerfile,# basic smoke test
15769,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15770,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
15771,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15772,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15773,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/slim/Dockerfile,#!/bin/sh'; \
15774,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15775,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15776,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15777,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15778,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15779,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15780,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15781,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
15782,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,# Default to UTF-8 file.encoding
15783,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15784,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,#!/bin/sh'; \
15785,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15786,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15787,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15788,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15789,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15790,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15791,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15792,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
15793,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15794,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15795,0476812eabd178c77534f3c03bd0a2673822d7b9,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15796,0476812eabd178c77534f3c03bd0a2673822d7b9,/7-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15797,0476812eabd178c77534f3c03bd0a2673822d7b9,/7-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
15798,0476812eabd178c77534f3c03bd0a2673822d7b9,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15799,0476812eabd178c77534f3c03bd0a2673822d7b9,/7-jre/alpine/Dockerfile,#!/bin/sh'; \
15800,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15801,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
15802,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
15803,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15804,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,#!/bin/sh'; \
15805,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15806,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
15807,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15808,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15809,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15810,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15811,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
15812,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15813,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15814,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15815,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
15816,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
15817,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
15818,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15819,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15820,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15821,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
15822,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15823,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
15824,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
15825,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
15826,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
15827,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15828,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/oracle/Dockerfile,# basic smoke test
15829,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
15830,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
15831,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
15832,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15833,0b42083d3cd9c3a57e35db84e5e9d246c9fcc129,/9-jdk/windows/nanoserver/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15834,0b42083d3cd9c3a57e35db84e5e9d246c9fcc129,/9-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15835,0b42083d3cd9c3a57e35db84e5e9d246c9fcc129,/9-jdk/windows/nanoserver/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
15836,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15837,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-7-jre/Dockerfile,# Default to UTF-8 file.encoding
15838,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15839,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15840,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15841,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
15842,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15843,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
15844,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/nanoserver-1803/Dockerfile,# https://jdk.java.net/
15845,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15846,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15847,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
15848,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15849,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15850,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,#!/bin/sh'; \
15851,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15852,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15853,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
15854,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15855,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15856,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15857,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15858,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15859,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15860,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
15861,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/Dockerfile,# Default to UTF-8 file.encoding
15862,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15863,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/Dockerfile,#!/bin/sh'; \
15864,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15865,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15866,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15867,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15868,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15869,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15870,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
15871,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jdk/windows/nanoserver-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
15872,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jdk/windows/nanoserver-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
15873,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15874,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15875,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15876,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
15877,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15878,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jdk/Dockerfile,#!/bin/sh'; \
15879,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15880,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15881,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15882,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15883,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
15884,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15885,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15886,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15887,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15888,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
15889,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
15890,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
15891,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15892,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15893,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15894,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15895,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15896,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15897,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15898,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15899,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15900,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
15901,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15902,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15903,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15904,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
15905,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15906,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15907,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15908,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
15909,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
15910,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
15911,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15912,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15913,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
15914,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15915,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jre/Dockerfile,#!/bin/sh'; \
15916,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15917,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15918,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15919,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
15920,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15921,36a0de603602114458516929dbc4a62d12c1d4c2,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15922,36a0de603602114458516929dbc4a62d12c1d4c2,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15923,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
15924,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15925,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15926,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15927,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15928,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15929,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15930,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15931,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/13/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
15932,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
15933,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
15934,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
15935,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
15936,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15937,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/13/jdk/oracle/Dockerfile,# basic smoke test
15938,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
15939,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15940,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
15941,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15942,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15943,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,#!/bin/sh'; \
15944,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15945,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
15946,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15947,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15948,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15949,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15950,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
15951,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15952,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15953,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
15954,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
15955,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15956,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/slim/Dockerfile,#!/bin/sh'; \
15957,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15958,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15959,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15960,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15961,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15962,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15963,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15964,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
15965,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,# backwards compatibility shim
15966,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15967,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
15968,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
15969,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
15970,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
15971,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
15972,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15973,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
15974,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15975,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15976,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,# basic smoke test
15977,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15978,6f340724d3bc1f9b4385975c5de6bfe15aac8c85,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15979,6f340724d3bc1f9b4385975c5de6bfe15aac8c85,/openjdk-8-jdk/Dockerfile,# Default to UTF-8 file.encoding
15980,6f340724d3bc1f9b4385975c5de6bfe15aac8c85,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
15981,6f340724d3bc1f9b4385975c5de6bfe15aac8c85,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
15982,6f340724d3bc1f9b4385975c5de6bfe15aac8c85,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15983,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15984,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
15985,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15986,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15987,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/slim/Dockerfile,#!/bin/sh'; \
15988,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15989,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15990,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15991,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15992,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15993,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15994,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15995,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15996,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,# backwards compatibility shim
15997,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15998,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15999,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
16000,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,# arm64v8
16001,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,# amd64
16002,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,# fallback
16003,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
16004,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
16005,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
16006,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
16007,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16008,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,# basic smoke test
16009,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16010,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16011,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16012,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
16013,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16014,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16015,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16016,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
16017,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
16018,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
16019,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16020,5dba2054c6821e38a6d3fad32239369818289228,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16021,5dba2054c6821e38a6d3fad32239369818289228,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16022,5dba2054c6821e38a6d3fad32239369818289228,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
16023,5dba2054c6821e38a6d3fad32239369818289228,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16024,5dba2054c6821e38a6d3fad32239369818289228,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
16025,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16026,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16027,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
16028,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
16029,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
16030,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16031,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16032,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16033,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16034,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
16035,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16036,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16037,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16038,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16039,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
16040,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16041,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16042,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16043,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
16044,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16045,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jdk/Dockerfile,#!/bin/sh'; \
16046,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
16047,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
16048,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16049,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16050,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16051,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16052,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
16053,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16054,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16055,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
16056,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
16057,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16058,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/slim/Dockerfile,#!/bin/sh'; \
16059,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16060,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16061,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16062,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16063,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16064,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16065,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16066,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16067,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16068,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
16069,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
16070,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16071,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,#!/bin/sh'; \
16072,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16073,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
16074,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16075,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16076,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16077,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16078,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
16079,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16080,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16081,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
16082,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,# Default to UTF-8 file.encoding
16083,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16084,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,#!/bin/sh'; \
16085,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16086,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16087,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
16088,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16089,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16090,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16091,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16092,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16093,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16094,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16095,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
16096,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16097,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jdk/Dockerfile,#!/bin/sh'; \
16098,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16099,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16100,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16101,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
16102,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16103,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jdk/Dockerfile,#!/bin/sh'; \
16104,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
16105,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
16106,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16107,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16108,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16109,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16110,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16111,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16112,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16113,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
16114,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
16115,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16116,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,#!/bin/sh'; \
16117,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16118,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
16119,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16120,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16121,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16122,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16123,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
16124,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16125,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/windows/windowsservercore/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16126,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16127,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/windows/windowsservercore/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
16128,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/windows/windowsservercore/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16129,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
16130,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
16131,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,# backwards compatibility shim
16132,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16133,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16134,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
16135,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
16136,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
16137,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
16138,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16139,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,# basic smoke test
16140,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16141,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
16142,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16143,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16144,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
16145,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16146,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16147,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16148,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
16149,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16150,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16151,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16152,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16153,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
16154,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16155,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16156,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
16157,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
16158,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16159,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/slim/Dockerfile,#!/bin/sh'; \
16160,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16161,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16162,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16163,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16164,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16165,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16166,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16167,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16168,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16169,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16170,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16171,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16172,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
16173,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
16174,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16175,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/alpine/Dockerfile,#!/bin/sh'; \
16176,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16177,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
16178,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
16179,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
16180,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,# Default to UTF-8 file.encoding
16181,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,# backwards compatibility shim
16182,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16183,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,# https://jdk.java.net/
16184,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
16185,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,#!/usr/bin/env bash'; \
16186,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
16187,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
16188,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16189,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,# basic smoke test
16190,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16191,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16192,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
16193,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
16194,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16195,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/slim/Dockerfile,#!/bin/sh'; \
16196,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16197,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16198,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16199,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16200,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16201,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16202,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16203,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16204,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
16205,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16206,06552bdff28039988fca96ec7f810456849d420f,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16207,06552bdff28039988fca96ec7f810456849d420f,/7-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16208,06552bdff28039988fca96ec7f810456849d420f,/7-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
16209,06552bdff28039988fca96ec7f810456849d420f,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16210,06552bdff28039988fca96ec7f810456849d420f,/7-jre/alpine/Dockerfile,#!/bin/sh'; \
16211,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16212,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
16213,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
16214,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16215,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,#!/bin/sh'; \
16216,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16217,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16218,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16219,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16220,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16221,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16222,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16223,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
16224,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
16225,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
16226,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16227,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
16228,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16229,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/oracle/Dockerfile,# basic smoke test
16230,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
16231,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16232,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
16233,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,# Default to UTF-8 file.encoding
16234,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16235,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,#!/bin/sh'; \
16236,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16237,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16238,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
16239,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16240,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16241,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16242,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16243,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16244,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16245,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16246,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16247,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
16248,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16249,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16250,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16251,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16252,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
16253,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16254,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16255,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jre/Dockerfile,# Default to UTF-8 file.encoding
16256,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
16257,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
16258,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586"
16259,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16260,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16261,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16262,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16263,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
16264,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16265,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16266,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
16267,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
16268,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16269,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,#!/bin/sh'; \
16270,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16271,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16272,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16273,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16274,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16275,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16276,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16277,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16278,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16279,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jdk/Dockerfile,# Default to UTF-8 file.encoding
16280,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16281,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jdk/Dockerfile,#!/bin/sh'; \
16282,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16283,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16284,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16285,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16286,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16287,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16288,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16289,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
16290,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16291,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16292,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
16293,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
16294,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16295,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/Dockerfile,#!/bin/sh'; \
16296,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16297,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16298,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16299,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16300,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16301,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16302,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16303,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
16304,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
16305,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16306,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/slim/Dockerfile,#!/bin/sh'; \
16307,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16308,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16309,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16310,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16311,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16312,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16313,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16314,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
16315,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
16316,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
16317,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586"
16318,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16319,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16320,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16321,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
16322,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16323,0584b2804ed12dca7c5e264b5fc55fc07a3ac148,/8-jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16324,0584b2804ed12dca7c5e264b5fc55fc07a3ac148,/8-jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16325,0584b2804ed12dca7c5e264b5fc55fc07a3ac148,/8-jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
16326,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
16327,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
16328,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
16329,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
16330,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
16331,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16332,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/oracle/Dockerfile,# basic smoke test
16333,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
16334,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16335,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16336,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
16337,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16338,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
16339,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
16340,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
16341,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
16342,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
16343,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,# arm64v8
16344,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,# amd64
16345,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,# fallback
16346,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
16347,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16348,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
16349,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,# basic smoke test
16350,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16351,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16352,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16353,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
16354,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
16355,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
16356,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
16357,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
16358,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
16359,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16360,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
16361,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16362,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/oracle/Dockerfile,# basic smoke test
16363,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
16364,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16365,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16366,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
16367,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16368,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
16369,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
16370,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
16371,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
16372,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,# backwards compatibility shim
16373,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16374,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
16375,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
16376,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,# arm64v8
16377,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,# amd64
16378,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,# fallback
16379,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
16380,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
16381,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
16382,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
16383,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16384,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,# basic smoke test
16385,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16386,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16387,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16388,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16389,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
16390,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16391,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16392,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16393,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
16394,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16395,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16396,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16397,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-1809/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
16398,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
16399,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
16400,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
16401,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16402,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16403,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
16404,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
16405,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
16406,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16407,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
16408,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/Dockerfile,# Default to UTF-8 file.encoding
16409,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16410,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/Dockerfile,#!/bin/sh'; \
16411,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16412,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16413,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16414,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16415,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16416,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16417,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16418,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
16419,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
16420,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16421,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
16422,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16423,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16424,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16425,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16426,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16427,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16428,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16429,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
16430,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
16431,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
16432,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,# backwards compatibility shim
16433,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16434,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
16435,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
16436,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
16437,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
16438,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
16439,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
16440,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,#!/usr/bin/env bash'; \
16441,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
16442,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
16443,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,# basic smoke test
16444,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
16445,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16446,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16447,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16448,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16449,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
16450,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16451,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16452,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16453,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16454,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
16455,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16456,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16457,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16458,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16459,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
16460,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16461,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16462,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16463,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
16464,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
16465,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
16466,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16467,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16468,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16469,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16470,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16471,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16472,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16473,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-7-jdk/Dockerfile,# Default to UTF-8 file.encoding
16474,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16475,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16476,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
16477,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
16478,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16479,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,#!/bin/sh'; \
16480,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16481,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16482,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16483,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16484,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16485,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16486,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16487,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16488,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
16489,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
16490,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16491,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,#!/bin/sh'; \
16492,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16493,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16494,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
16495,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16496,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16497,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16498,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16499,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16500,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
16501,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16502,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16503,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
16504,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
16505,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
16506,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
16507,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,# backwards compatibility shim
16508,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16509,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16510,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
16511,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
16512,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
16513,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
16514,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16515,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,# basic smoke test
16516,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16517,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16518,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16519,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16520,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
16521,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16522,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16523,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16524,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16525,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
16526,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16527,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16528,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16529,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16530,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16531,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16532,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16533,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16534,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16535,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
16536,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16537,e3021b3a4cc9fb82962bebe688dc512d3d7a621a,/15/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16538,e3021b3a4cc9fb82962bebe688dc512d3d7a621a,/15/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
16539,e3021b3a4cc9fb82962bebe688dc512d3d7a621a,/15/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16540,e3021b3a4cc9fb82962bebe688dc512d3d7a621a,/15/jdk/alpine/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
16541,e3021b3a4cc9fb82962bebe688dc512d3d7a621a,/15/jdk/alpine/Dockerfile,# basic smoke test
16542,e3021b3a4cc9fb82962bebe688dc512d3d7a621a,/15/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
16543,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16544,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16545,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
16546,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16547,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
16548,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
16549,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
16550,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16551,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16552,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
16553,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16554,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16555,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
16556,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
16557,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16558,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
16559,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16560,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16561,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
16562,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
16563,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16564,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16565,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16566,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16567,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16568,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16569,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16570,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
16571,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16572,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jre/Dockerfile,#!/bin/sh'; \
16573,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16574,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16575,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16576,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16577,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16578,4ab314dc41cb31313f630ce5e11398ef0f9e9ae9,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16579,4ab314dc41cb31313f630ce5e11398ef0f9e9ae9,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16580,4fc0f299672be87a236d1af61a31c14f67dfcdcc,/7/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16581,4fc0f299672be87a236d1af61a31c14f67dfcdcc,/7/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16582,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
16583,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
16584,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,# backwards compatibility shim
16585,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16586,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16587,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
16588,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
16589,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
16590,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
16591,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16592,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,# basic smoke test
16593,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16594,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
16595,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
16596,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
16597,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,# backwards compatibility shim
16598,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16599,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
16600,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
16601,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,# arm64v8
16602,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,# amd64
16603,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,# fallback
16604,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
16605,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
16606,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
16607,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
16608,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16609,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,# basic smoke test
16610,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16611,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/alpine/Dockerfile,# http://jdk.java.net/
16612,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
16613,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
16614,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/alpine/Dockerfile,# basic smoke test
16615,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
16616,01ca700a105984964865430aee1251932956925e,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16617,01ca700a105984964865430aee1251932956925e,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
16618,01ca700a105984964865430aee1251932956925e,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
16619,01ca700a105984964865430aee1251932956925e,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16620,01ca700a105984964865430aee1251932956925e,/9-jre/slim/Dockerfile,#!/bin/sh'; \
16621,01ca700a105984964865430aee1251932956925e,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16622,01ca700a105984964865430aee1251932956925e,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16623,01ca700a105984964865430aee1251932956925e,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16624,01ca700a105984964865430aee1251932956925e,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16625,01ca700a105984964865430aee1251932956925e,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16626,01ca700a105984964865430aee1251932956925e,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16627,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
16628,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
16629,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
16630,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16631,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
16632,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/oracle/Dockerfile,# amd64
16633,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/oracle/Dockerfile,# fallback
16634,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
16635,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16636,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/oracle/Dockerfile,# basic smoke test
16637,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
16638,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16639,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16640,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16641,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
16642,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16643,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16644,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
16645,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
16646,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16647,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/slim/Dockerfile,#!/bin/sh'; \
16648,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16649,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16650,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16651,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16652,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16653,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16654,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
16655,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
16656,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
16657,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
16658,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,# backwards compatibility shim
16659,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16660,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16661,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
16662,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
16663,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
16664,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
16665,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16666,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,# basic smoke test
16667,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16668,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16669,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
16670,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
16671,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16672,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,#!/bin/sh'; \
16673,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16674,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
16675,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16676,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16677,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16678,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16679,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
16680,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16681,ac57930ee4cb62a9106dff2244e0b38220a5164b,/13/jdk/alpine/Dockerfile,# http://jdk.java.net/
16682,ac57930ee4cb62a9106dff2244e0b38220a5164b,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
16683,ac57930ee4cb62a9106dff2244e0b38220a5164b,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
16684,ac57930ee4cb62a9106dff2244e0b38220a5164b,/13/jdk/alpine/Dockerfile,# basic smoke test
16685,ac57930ee4cb62a9106dff2244e0b38220a5164b,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
16686,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
16687,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
16688,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,# backwards compatibility shim
16689,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16690,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16691,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
16692,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,# arm64v8
16693,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,# amd64
16694,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,# fallback
16695,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
16696,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
16697,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
16698,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
16699,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16700,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,# basic smoke test
16701,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16702,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
16703,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
16704,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
16705,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,# backwards compatibility shim
16706,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16707,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
16708,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
16709,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
16710,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
16711,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
16712,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
16713,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,#!/usr/bin/env bash'; \
16714,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
16715,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
16716,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,# basic smoke test
16717,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16718,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
16719,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
16720,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
16721,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16722,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
16723,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,# arm64v8
16724,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,# amd64
16725,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,# fallback
16726,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
16727,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16728,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
16729,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,# basic smoke test
16730,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
16731,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
16732,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
16733,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
16734,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,# backwards compatibility shim
16735,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16736,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
16737,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
16738,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
16739,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
16740,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
16741,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
16742,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,#!/usr/bin/env bash'; \
16743,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
16744,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
16745,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,# basic smoke test
16746,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16747,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
16748,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16749,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16750,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16751,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-6"
16752,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/Dockerfile,# Default to UTF-8 file.encoding
16753,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16754,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/Dockerfile,#!/bin/sh'; \
16755,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16756,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16757,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16758,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16759,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16760,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16761,0476812eabd178c77534f3c03bd0a2673822d7b9,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16762,0476812eabd178c77534f3c03bd0a2673822d7b9,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16763,0476812eabd178c77534f3c03bd0a2673822d7b9,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
16764,0476812eabd178c77534f3c03bd0a2673822d7b9,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16765,0476812eabd178c77534f3c03bd0a2673822d7b9,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
16766,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16767,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
16768,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
16769,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16770,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/Dockerfile,#!/bin/sh'; \
16771,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16772,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16773,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16774,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16775,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16776,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16777,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16778,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16779,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16780,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
16781,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16782,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
16783,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
16784,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
16785,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
16786,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
16787,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,# arm64v8
16788,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,# amd64
16789,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,# fallback
16790,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
16791,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16792,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
16793,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,# basic smoke test
16794,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16795,0259a649c03ace8b035432ef3ee7274ca30d3776,/7/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16796,0259a649c03ace8b035432ef3ee7274ca30d3776,/7/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16797,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16798,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-7-jdk/Dockerfile,# Default to UTF-8 file.encoding
16799,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16800,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16801,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16802,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16803,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
16804,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16805,ba84c1878998602129f0d7d94d26aae5e04bc872,/15/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16806,ba84c1878998602129f0d7d94d26aae5e04bc872,/15/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
16807,ba84c1878998602129f0d7d94d26aae5e04bc872,/15/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16808,ba84c1878998602129f0d7d94d26aae5e04bc872,/15/jdk/alpine/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
16809,ba84c1878998602129f0d7d94d26aae5e04bc872,/15/jdk/alpine/Dockerfile,# basic smoke test
16810,ba84c1878998602129f0d7d94d26aae5e04bc872,/15/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
16811,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16812,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16813,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
16814,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16815,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jre/Dockerfile,#!/bin/sh'; \
16816,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16817,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16818,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16819,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16820,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16821,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16822,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16823,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
16824,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
16825,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16826,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,#!/bin/sh'; \
16827,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16828,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
16829,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16830,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16831,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16832,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16833,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
16834,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16835,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
16836,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/nanoserver-1809/Dockerfile,# https://jdk.java.net/
16837,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16838,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16839,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
16840,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
16841,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16842,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,#!/bin/sh'; \
16843,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16844,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
16845,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16846,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16847,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16848,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16849,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
16850,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16851,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
16852,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
16853,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,# backwards compatibility shim
16854,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16855,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
16856,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
16857,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,# arm64v8
16858,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,# amd64
16859,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,# fallback
16860,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
16861,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
16862,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
16863,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
16864,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16865,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,# basic smoke test
16866,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16867,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16868,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16869,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16870,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16871,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16872,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
16873,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
16874,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
16875,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,# Default to UTF-8 file.encoding
16876,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,# backwards compatibility shim
16877,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16878,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16879,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
16880,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,# arm64v8
16881,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,# amd64
16882,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,# fallback
16883,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
16884,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,#!/usr/bin/env bash'; \
16885,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
16886,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
16887,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16888,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,# basic smoke test
16889,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16890,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16891,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
16892,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
16893,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16894,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/slim/Dockerfile,#!/bin/sh'; \
16895,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16896,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16897,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16898,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16899,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16900,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16901,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
16902,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/nanoserver-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
16903,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/nanoserver-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
16904,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16905,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16906,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
16907,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
16908,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
16909,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16910,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16911,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16912,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
16913,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
16914,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
16915,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16916,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16917,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
16918,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16919,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jre/Dockerfile,#!/bin/sh'; \
16920,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
16921,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
16922,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16923,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
16924,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
16925,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
16926,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
16927,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,# backwards compatibility shim
16928,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16929,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16930,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
16931,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,# arm64v8
16932,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,# amd64
16933,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,# fallback
16934,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
16935,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
16936,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
16937,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
16938,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16939,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,# basic smoke test
16940,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16941,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
16942,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
16943,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
16944,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
16945,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,# backwards compatibility shim
16946,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16947,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16948,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
16949,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
16950,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
16951,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
16952,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16953,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,# basic smoke test
16954,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16955,02a49915095f254cbf321292ab7a021529686448,/11-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16956,02a49915095f254cbf321292ab7a021529686448,/11-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
16957,02a49915095f254cbf321292ab7a021529686448,/11-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
16958,02a49915095f254cbf321292ab7a021529686448,/11-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16959,02a49915095f254cbf321292ab7a021529686448,/11-jre/slim/Dockerfile,#!/bin/sh'; \
16960,02a49915095f254cbf321292ab7a021529686448,/11-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16961,02a49915095f254cbf321292ab7a021529686448,/11-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16962,02a49915095f254cbf321292ab7a021529686448,/11-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16963,02a49915095f254cbf321292ab7a021529686448,/11-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16964,02a49915095f254cbf321292ab7a021529686448,/11-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16965,02a49915095f254cbf321292ab7a021529686448,/11-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16966,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16967,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16968,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16969,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16970,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16971,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
16972,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
16973,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
16974,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,# backwards compatibility shim
16975,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16976,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
16977,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
16978,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
16979,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
16980,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
16981,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
16982,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,#!/usr/bin/env bash'; \
16983,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
16984,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
16985,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,# basic smoke test
16986,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16987,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
16988,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16989,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16990,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16991,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16992,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
16993,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16994,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jdk/Dockerfile,#!/bin/sh'; \
16995,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
16996,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
16997,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16998,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
16999,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17000,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17001,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17002,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17003,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
17004,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,# backwards compatibility shim
17005,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17006,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
17007,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
17008,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
17009,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
17010,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
17011,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17012,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,#!/usr/bin/env bash'; \
17013,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17014,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17015,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,# basic smoke test
17016,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17017,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
17018,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
17019,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17020,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
17021,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17022,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17023,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17024,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17025,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17026,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17027,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17028,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17029,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17030,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
17031,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
17032,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
17033,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17034,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17035,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17036,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
17037,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,# backwards compatibility shim
17038,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17039,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
17040,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
17041,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
17042,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
17043,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
17044,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17045,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,#!/usr/bin/env bash'; \
17046,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17047,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17048,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,# basic smoke test
17049,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17050,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17051,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
17052,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17053,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jre/Dockerfile,#!/bin/bash'; \
17054,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
17055,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
17056,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
17057,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17058,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
17059,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
17060,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17061,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
17062,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17063,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17064,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17065,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17066,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17067,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17068,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17069,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17070,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
17071,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17072,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
17073,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,# backwards compatibility shim
17074,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17075,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17076,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17077,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
17078,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17079,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17080,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17081,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,# basic smoke test
17082,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17083,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17084,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/7-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
17085,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
17086,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17087,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/7-jre/Dockerfile,#!/bin/sh'; \
17088,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/7-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17089,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/7-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17090,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17091,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/7-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17092,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/7-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17093,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17094,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17095,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
17096,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
17097,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17098,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jdk/alpine/Dockerfile,#!/bin/sh'; \
17099,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jdk/alpine/Dockerfile,# https://bugs.alpinelinux.org/issues/10126
17100,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17101,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/alpine/Dockerfile,# https://jdk.java.net/
17102,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
17103,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17104,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/alpine/Dockerfile,# basic smoke test
17105,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
17106,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17107,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17108,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
17109,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17110,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,#!/bin/sh'; \
17111,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17112,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
17113,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17114,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17115,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17116,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
17117,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
17118,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17119,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
17120,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/Dockerfile,# Default to UTF-8 file.encoding
17121,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17122,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/Dockerfile,#!/bin/sh'; \
17123,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17124,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17125,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17126,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17127,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17128,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17129,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17130,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
17131,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
17132,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17133,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/Dockerfile,#!/bin/sh'; \
17134,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17135,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17136,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17137,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17138,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17139,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17140,1b4378dc7b57c8534fe715cfcec356ee96c87e92,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17141,1b4378dc7b57c8534fe715cfcec356ee96c87e92,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
17142,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17143,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17144,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
17145,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,# backwards compatibility shim
17146,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17147,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
17148,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
17149,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
17150,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
17151,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
17152,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17153,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,#!/usr/bin/env bash'; \
17154,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17155,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17156,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,# basic smoke test
17157,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17158,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
17159,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
17160,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17161,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,#!/bin/sh'; \
17162,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17163,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17164,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17165,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17166,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17167,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17168,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17169,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17170,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
17171,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,# backwards compatibility shim
17172,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17173,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17174,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17175,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
17176,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17177,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17178,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17179,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,# basic smoke test
17180,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17181,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
17182,d63214d23aad827190c599e23351bd0bdd7dcadc,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17183,d63214d23aad827190c599e23351bd0bdd7dcadc,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
17184,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17185,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
17186,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,# backwards compatibility shim
17187,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17188,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,# https://jdk.java.net/
17189,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17190,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
17191,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17192,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17193,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17194,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,# basic smoke test
17195,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17196,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
17197,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17198,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
17199,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17200,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
17201,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,# backwards compatibility shim
17202,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17203,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
17204,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
17205,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,# arm64v8
17206,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,# amd64
17207,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,# fallback
17208,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17209,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
17210,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17211,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17212,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17213,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,# basic smoke test
17214,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17215,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17216,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17217,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
17218,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,# backwards compatibility shim
17219,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17220,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
17221,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
17222,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
17223,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
17224,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
17225,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17226,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,#!/usr/bin/env bash'; \
17227,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17228,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17229,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,# basic smoke test
17230,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17231,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17232,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17233,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
17234,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17235,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17236,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17237,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17238,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
17239,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17240,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17241,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17242,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17243,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
17244,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17245,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17246,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17247,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17248,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
17249,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17250,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17251,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
17252,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,# backwards compatibility shim
17253,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17254,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
17255,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
17256,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
17257,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
17258,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
17259,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17260,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
17261,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17262,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,# basic smoke test
17263,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17264,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17265,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
17266,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17267,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17268,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
17269,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,# Default to UTF-8 file.encoding
17270,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17271,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,#!/bin/sh'; \
17272,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17273,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17274,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
17275,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17276,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17277,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17278,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17279,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17280,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17281,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
17282,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,# backwards compatibility shim
17283,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17284,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17285,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
17286,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,# arm64v8
17287,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,# amd64
17288,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,# fallback
17289,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17290,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
17291,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17292,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17293,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17294,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,# basic smoke test
17295,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17296,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17297,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
17298,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
17299,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17300,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/Dockerfile,#!/bin/sh'; \
17301,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17302,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17303,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17304,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17305,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17306,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17307,17f7f8dc7e673127812e5c31b83937283beb7b12,/15/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17308,17f7f8dc7e673127812e5c31b83937283beb7b12,/15/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
17309,17f7f8dc7e673127812e5c31b83937283beb7b12,/15/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17310,17f7f8dc7e673127812e5c31b83937283beb7b12,/15/jdk/alpine/Dockerfile,# basic smoke test
17311,17f7f8dc7e673127812e5c31b83937283beb7b12,/15/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
17312,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17313,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
17314,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
17315,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17316,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,#!/bin/sh'; \
17317,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17318,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17319,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (a case of https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
17320,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17321,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17322,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17323,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17324,9745c87a15896ec558429a826e23926e721e4846,/8-jdk/windows/windowsservercore/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17325,9745c87a15896ec558429a826e23926e721e4846,/8-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17326,9745c87a15896ec558429a826e23926e721e4846,/8-jdk/windows/windowsservercore/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
17327,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17328,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17329,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17330,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17331,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17332,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17333,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17334,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17335,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
17336,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17337,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17338,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
17339,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
17340,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17341,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,#!/bin/sh'; \
17342,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17343,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17344,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
17345,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17346,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17347,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17348,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17349,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17350,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
17351,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17352,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
17353,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17354,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
17355,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17356,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/oracle/Dockerfile,# basic smoke test
17357,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
17358,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17359,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
17360,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
17361,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17362,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jre/alpine/Dockerfile,#!/bin/sh'; \
17363,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17364,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
17365,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17366,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
17367,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
17368,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
17369,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,# amd64
17370,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,# fallback
17371,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
17372,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17373,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
17374,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,# basic smoke test
17375,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17376,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17377,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17378,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17379,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17380,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17381,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
17382,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17383,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
17384,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17385,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
17386,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17387,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/oracle/Dockerfile,# basic smoke test
17388,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
17389,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17390,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17391,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17392,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17393,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17394,38cb0eb077acf2a429f32a879903cd305733d561,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17395,38cb0eb077acf2a429f32a879903cd305733d561,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
17396,38cb0eb077acf2a429f32a879903cd305733d561,/8/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
17397,38cb0eb077acf2a429f32a879903cd305733d561,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17398,38cb0eb077acf2a429f32a879903cd305733d561,/8/jdk/alpine/Dockerfile,#!/bin/sh'; \
17399,38cb0eb077acf2a429f32a879903cd305733d561,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17400,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17401,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17402,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17403,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17404,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17405,882461ade8207de7647d083009200de85eb978bc,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17406,882461ade8207de7647d083009200de85eb978bc,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17407,882461ade8207de7647d083009200de85eb978bc,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
17408,882461ade8207de7647d083009200de85eb978bc,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17409,882461ade8207de7647d083009200de85eb978bc,/9-jre/Dockerfile,#!/bin/sh'; \
17410,882461ade8207de7647d083009200de85eb978bc,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17411,882461ade8207de7647d083009200de85eb978bc,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17412,882461ade8207de7647d083009200de85eb978bc,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17413,882461ade8207de7647d083009200de85eb978bc,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
17414,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17415,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
17416,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17417,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
17418,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,# backwards compatibility shim
17419,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17420,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17421,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17422,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
17423,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17424,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17425,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17426,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,# basic smoke test
17427,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17428,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17429,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
17430,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
17431,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17432,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,#!/bin/sh'; \
17433,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17434,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
17435,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17436,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17437,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17438,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17439,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
17440,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17441,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17442,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
17443,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
17444,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17445,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/slim/Dockerfile,#!/bin/sh'; \
17446,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17447,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17448,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17449,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17450,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17451,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17452,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17453,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
17454,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
17455,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17456,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,#!/bin/sh'; \
17457,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17458,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17459,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-reccomends:
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
17460,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17461,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17462,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17463,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17464,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17465,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17466,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17467,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17468,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17469,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17470,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17471,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17472,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
17473,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17474,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17475,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
17476,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
17477,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17478,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/Dockerfile,#!/bin/sh'; \
17479,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17480,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17481,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17482,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17483,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17484,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17485,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17486,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17487,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17488,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
17489,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17490,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17491,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
17492,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/11/jdk/Dockerfile,# backwards compatibility shim
17493,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17494,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/11/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
17495,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
17496,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/11/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
17497,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
17498,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/11/jdk/Dockerfile,# basic smoke test
17499,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17500,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17501,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17502,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17503,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
17504,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17505,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17506,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
17507,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/Dockerfile,# backwards compatibility shim
17508,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17509,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
17510,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
17511,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
17512,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
17513,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/Dockerfile,# basic smoke test
17514,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17515,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17516,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17517,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
17518,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17519,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17520,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
17521,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
17522,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
17523,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
17524,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/oracle/Dockerfile,# basic smoke test
17525,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
17526,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17527,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
17528,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,# backwards compatibility shim
17529,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17530,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17531,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
17532,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,# arm64v8
17533,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,# amd64
17534,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,# fallback
17535,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17536,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
17537,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17538,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17539,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17540,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,# basic smoke test
17541,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17542,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17543,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17544,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
17545,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17546,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
17547,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17548,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
17549,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17550,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
17551,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,# arm64v8
17552,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,# amd64
17553,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,# fallback
17554,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
17555,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17556,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
17557,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,# basic smoke test
17558,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
17559,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17560,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
17561,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
17562,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17563,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/Dockerfile,#!/bin/sh'; \
17564,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17565,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17566,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17567,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17568,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17569,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17570,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17571,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
17572,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,# backwards compatibility shim
17573,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17574,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,# https://jdk.java.net/
17575,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17576,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
17577,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17578,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17579,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17580,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,# basic smoke test
17581,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17582,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
17583,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
17584,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17585,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17586,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17587,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17588,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17589,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17590,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17591,238cc35696423794b1951fc63d4cc9ffb8ca9685,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17592,238cc35696423794b1951fc63d4cc9ffb8ca9685,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17593,238cc35696423794b1951fc63d4cc9ffb8ca9685,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
17594,238cc35696423794b1951fc63d4cc9ffb8ca9685,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17595,238cc35696423794b1951fc63d4cc9ffb8ca9685,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
17596,a2b245fc1ab64df2de145b87e631b5e89ca67388,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17597,a2b245fc1ab64df2de145b87e631b5e89ca67388,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17598,a2b245fc1ab64df2de145b87e631b5e89ca67388,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
17599,a2b245fc1ab64df2de145b87e631b5e89ca67388,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17600,a2b245fc1ab64df2de145b87e631b5e89ca67388,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
17601,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17602,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
17603,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,# backwards compatibility shim
17604,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17605,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
17606,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
17607,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,# arm64v8
17608,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,# amd64
17609,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,# fallback
17610,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17611,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
17612,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17613,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17614,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17615,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,# basic smoke test
17616,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17617,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17618,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17619,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
17620,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
17621,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
17622,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17623,65f4567ed9294e7404b3d2d0c806249946e06210,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17624,65f4567ed9294e7404b3d2d0c806249946e06210,/openjdk-7-jre/Dockerfile,# Default to UTF-8 file.encoding
17625,65f4567ed9294e7404b3d2d0c806249946e06210,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
17626,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
17627,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17628,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17629,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17630,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
17631,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,# backwards compatibility shim
17632,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17633,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
17634,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
17635,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
17636,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
17637,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
17638,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17639,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
17640,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17641,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17642,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,# basic smoke test
17643,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
17644,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17645,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
17646,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17647,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
17648,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17649,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/oracle/Dockerfile,# basic smoke test
17650,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
17651,4c5beb8bdb21c746bef683f18bdeddee157f61fd,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17652,4c5beb8bdb21c746bef683f18bdeddee157f61fd,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
17653,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17654,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17655,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
17656,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17657,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jre/Dockerfile,#!/bin/sh'; \
17658,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
17659,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
17660,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/nanoserver-1803/Dockerfile,# https://jdk.java.net/
17661,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17662,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17663,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
17664,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,# Default to UTF-8 file.encoding
17665,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17666,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,#!/bin/sh'; \
17667,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17668,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17669,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
17670,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17671,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17672,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17673,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17674,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17675,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
17676,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
17677,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17678,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,#!/bin/sh'; \
17679,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17680,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17681,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17682,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17683,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17684,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17685,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17686,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17687,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
17688,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
17689,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17690,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/Dockerfile,#!/bin/sh'; \
17691,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17692,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17693,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17694,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17695,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17696,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17697,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17698,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17699,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17700,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
17701,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17702,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17703,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17704,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17705,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
17706,02a49915095f254cbf321292ab7a021529686448,/11-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17707,02a49915095f254cbf321292ab7a021529686448,/11-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
17708,02a49915095f254cbf321292ab7a021529686448,/11-jre/Dockerfile,# Default to UTF-8 file.encoding
17709,02a49915095f254cbf321292ab7a021529686448,/11-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17710,02a49915095f254cbf321292ab7a021529686448,/11-jre/Dockerfile,#!/bin/sh'; \
17711,02a49915095f254cbf321292ab7a021529686448,/11-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17712,02a49915095f254cbf321292ab7a021529686448,/11-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17713,02a49915095f254cbf321292ab7a021529686448,/11-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17714,02a49915095f254cbf321292ab7a021529686448,/11-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17715,02a49915095f254cbf321292ab7a021529686448,/11-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17716,02a49915095f254cbf321292ab7a021529686448,/11-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17717,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17718,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
17719,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
17720,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17721,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jdk/alpine/Dockerfile,#!/bin/sh'; \
17722,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17723,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17724,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17725,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
17726,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17727,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jdk/Dockerfile,#!/bin/sh'; \
17728,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
17729,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17730,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17731,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
17732,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,# backwards compatibility shim
17733,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17734,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
17735,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
17736,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
17737,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
17738,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
17739,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17740,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,#!/usr/bin/env bash'; \
17741,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17742,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17743,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,# basic smoke test
17744,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
17745,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
17746,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17747,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17748,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17749,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17750,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
17751,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17752,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17753,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
17754,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
17755,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17756,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,#!/bin/sh'; \
17757,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17758,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17759,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (a case of https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
17760,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17761,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17762,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17763,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17764,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17765,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17766,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17767,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jdk/Dockerfile,# Default to UTF-8 file.encoding
17768,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17769,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jdk/Dockerfile,#!/bin/sh'; \
17770,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17771,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17772,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17773,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17774,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
17775,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17776,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17777,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
17778,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17779,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17780,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
17781,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,# backwards compatibility shim
17782,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17783,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
17784,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
17785,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
17786,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,# amd64
17787,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,# fallback
17788,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
17789,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
17790,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
17791,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17792,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
17793,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17794,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17795,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,# basic smoke test
17796,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17797,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17798,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17799,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
17800,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17801,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
17802,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/nanoserver-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17803,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17804,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
17805,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
17806,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
17807,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17808,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
17809,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
17810,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17811,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/slim/Dockerfile,#!/bin/sh'; \
17812,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17813,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17814,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17815,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17816,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17817,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17818,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
17819,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17820,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
17821,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17822,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
17823,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,# amd64
17824,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,# fallback
17825,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
17826,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17827,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
17828,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,# basic smoke test
17829,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
17830,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17831,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
17832,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/Dockerfile,# Default to UTF-8 file.encoding
17833,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17834,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/Dockerfile,#!/bin/sh'; \
17835,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17836,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17837,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17838,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17839,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17840,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17841,89c5b6e626b9b8e27c1d4fd021ff8fd2a786ac26,/12/jdk/alpine/Dockerfile,# http://jdk.java.net/
17842,89c5b6e626b9b8e27c1d4fd021ff8fd2a786ac26,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
17843,89c5b6e626b9b8e27c1d4fd021ff8fd2a786ac26,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
17844,89c5b6e626b9b8e27c1d4fd021ff8fd2a786ac26,/12/jdk/alpine/Dockerfile,# basic smoke test
17845,89c5b6e626b9b8e27c1d4fd021ff8fd2a786ac26,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
17846,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17847,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
17848,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,# backwards compatibility shim
17849,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17850,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
17851,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
17852,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
17853,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,# amd64
17854,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,# fallback
17855,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
17856,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
17857,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
17858,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17859,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
17860,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17861,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17862,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,# basic smoke test
17863,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
17864,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17865,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
17866,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17867,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
17868,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,# arm64v8
17869,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,# amd64
17870,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,# fallback
17871,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
17872,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17873,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
17874,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,# basic smoke test
17875,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
17876,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17877,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
17878,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
17879,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17880,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,#!/bin/sh'; \
17881,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17882,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
17883,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17884,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17885,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17886,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17887,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
17888,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17889,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17890,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17891,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17892,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
17893,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17894,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
17895,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17896,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
17897,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17898,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
17899,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17900,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/oracle/Dockerfile,# basic smoke test
17901,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
17902,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
17903,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17904,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17905,fe489e584bd248f6ed6b379beed27eda755c5ba9,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17906,fe489e584bd248f6ed6b379beed27eda755c5ba9,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
17907,fe489e584bd248f6ed6b379beed27eda755c5ba9,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
17908,fe489e584bd248f6ed6b379beed27eda755c5ba9,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
17909,fe489e584bd248f6ed6b379beed27eda755c5ba9,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
17910,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17911,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
17912,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
17913,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17914,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,#!/bin/sh'; \
17915,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17916,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17917,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
17918,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17919,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17920,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17921,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17922,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
17923,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
17924,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17925,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17926,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
17927,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/oracle/Dockerfile,# https://jdk.java.net/
17928,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
17929,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17930,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/oracle/Dockerfile,# basic smoke test
17931,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
17932,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
17933,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17934,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
17935,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17936,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
17937,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,# arm64v8
17938,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,# amd64
17939,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,# fallback
17940,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
17941,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17942,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
17943,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,# basic smoke test
17944,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
17945,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17946,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17947,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17948,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
17949,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17950,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
17951,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17952,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
17953,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
17954,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
17955,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,# arm64v8
17956,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,# amd64
17957,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,# fallback
17958,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
17959,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17960,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
17961,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,# basic smoke test
17962,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17963,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17964,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
17965,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
17966,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17967,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17968,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17969,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
17970,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/Dockerfile,# Default to UTF-8 file.encoding
17971,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17972,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/Dockerfile,#!/bin/sh'; \
17973,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17974,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17975,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17976,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17977,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17978,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17979,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17980,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17981,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
17982,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17983,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
17984,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17985,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17986,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17987,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17988,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17989,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
17990,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17991,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17992,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
17993,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/oracle/Dockerfile,# https://jdk.java.net/
17994,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
17995,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17996,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/oracle/Dockerfile,# basic smoke test
17997,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
17998,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17999,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18000,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jdk/Dockerfile,# Default to UTF-8 file.encoding
18001,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18002,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jdk/Dockerfile,#!/bin/bash'; \
18003,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
18004,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
18005,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18006,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18007,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18008,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18009,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
18010,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18011,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18012,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
18013,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18014,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/alpine/Dockerfile,# basic smoke test
18015,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
18016,d183725a5acda253132f21011fe903f3924e7e12,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18017,d183725a5acda253132f21011fe903f3924e7e12,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18018,d183725a5acda253132f21011fe903f3924e7e12,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
18019,d183725a5acda253132f21011fe903f3924e7e12,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18020,d183725a5acda253132f21011fe903f3924e7e12,/9-jdk/Dockerfile,#!/bin/sh'; \
18021,d183725a5acda253132f21011fe903f3924e7e12,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18022,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18023,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18024,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18025,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18026,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18027,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18028,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18029,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18030,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
18031,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18032,43b1402a2b3af1eb182c0c16fec01886c9db9c37,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18033,43b1402a2b3af1eb182c0c16fec01886c9db9c37,/openjdk-8-jdk/Dockerfile,# Default to UTF-8 file.encoding
18034,43b1402a2b3af1eb182c0c16fec01886c9db9c37,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
18035,43b1402a2b3af1eb182c0c16fec01886c9db9c37,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
18036,43b1402a2b3af1eb182c0c16fec01886c9db9c37,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18037,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18038,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18039,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18040,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
18041,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18042,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18043,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18044,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18045,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18046,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18047,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18048,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18049,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
18050,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
18051,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
18052,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18053,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18054,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
18055,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
18056,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
18057,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18058,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18059,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jre/Dockerfile,# Default to UTF-8 file.encoding
18060,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18061,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jre/Dockerfile,#!/bin/bash'; \
18062,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18063,0b42083d3cd9c3a57e35db84e5e9d246c9fcc129,/9-jdk/windows/windowsservercore/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18064,0b42083d3cd9c3a57e35db84e5e9d246c9fcc129,/9-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18065,0b42083d3cd9c3a57e35db84e5e9d246c9fcc129,/9-jdk/windows/windowsservercore/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
18066,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18067,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18068,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18069,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
18070,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18071,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18072,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
18073,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/oracle/Dockerfile,# http://jdk.java.net/
18074,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
18075,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
18076,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/oracle/Dockerfile,# basic smoke test
18077,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
18078,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
18079,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
18080,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,# backwards compatibility shim
18081,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18082,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18083,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18084,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
18085,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18086,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18087,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18088,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,# basic smoke test
18089,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18090,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
18091,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18092,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jdk/Dockerfile,# Default to UTF-8 file.encoding
18093,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
18094,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
18095,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586"
18096,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18097,a8d6952a882f3e56041be8d80df6276dab111f82,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18098,a8d6952a882f3e56041be8d80df6276dab111f82,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18099,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18100,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
18101,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
18102,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18103,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
18104,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18105,1c98a9032d1a19122074c4009326eade264903b7,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18106,1c98a9032d1a19122074c4009326eade264903b7,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18107,1c98a9032d1a19122074c4009326eade264903b7,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
18108,1c98a9032d1a19122074c4009326eade264903b7,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18109,1c98a9032d1a19122074c4009326eade264903b7,/9-jre/Dockerfile,#!/bin/sh'; \
18110,1c98a9032d1a19122074c4009326eade264903b7,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18111,0467df283134a79840c25808093c00f7c94b9a88,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18112,0467df283134a79840c25808093c00f7c94b9a88,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18113,0467df283134a79840c25808093c00f7c94b9a88,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
18114,0467df283134a79840c25808093c00f7c94b9a88,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18115,0467df283134a79840c25808093c00f7c94b9a88,/7-jre/Dockerfile,#!/bin/sh'; \
18116,0467df283134a79840c25808093c00f7c94b9a88,/7-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18117,0467df283134a79840c25808093c00f7c94b9a88,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18118,0467df283134a79840c25808093c00f7c94b9a88,/7-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18119,0467df283134a79840c25808093c00f7c94b9a88,/7-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18120,0467df283134a79840c25808093c00f7c94b9a88,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18121,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
18122,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
18123,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18124,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
18125,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,# backwards compatibility shim
18126,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18127,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18128,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18129,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
18130,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18131,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18132,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18133,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,# basic smoke test
18134,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18135,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18136,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18137,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18138,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
18139,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18140,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18141,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
18142,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
18143,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
18144,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
18145,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/oracle/Dockerfile,# basic smoke test
18146,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
18147,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18148,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18149,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18150,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
18151,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18152,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18153,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18154,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
18155,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
18156,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
18157,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18158,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18159,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18160,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18161,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
18162,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18163,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18164,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
18165,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,# Default to UTF-8 file.encoding
18166,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18167,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,#!/bin/sh'; \
18168,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18169,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18170,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
18171,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18172,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18173,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18174,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18175,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18176,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
18177,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
18178,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18179,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
18180,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,# backwards compatibility shim
18181,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18182,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
18183,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
18184,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,# arm64v8
18185,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,# amd64
18186,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,# fallback
18187,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18188,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
18189,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18190,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18191,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18192,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,# basic smoke test
18193,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18194,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18195,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
18196,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
18197,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18198,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,#!/bin/sh'; \
18199,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18200,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
18201,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18202,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18203,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18204,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18205,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
18206,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18207,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
18208,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
18209,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,# backwards compatibility shim
18210,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18211,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,# https://jdk.java.net/
18212,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18213,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
18214,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18215,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18216,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18217,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,# basic smoke test
18218,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18219,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
18220,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18221,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
18222,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
18223,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18224,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,#!/bin/sh'; \
18225,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18226,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18227,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18228,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18229,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18230,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18231,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18232,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18233,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18234,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jre/Dockerfile,# Default to UTF-8 file.encoding
18235,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18236,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jre/Dockerfile,#!/bin/bash'; \
18237,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
18238,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
18239,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18240,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
18241,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
18242,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,# backwards compatibility shim
18243,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18244,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18245,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
18246,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,# arm64v8
18247,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,# amd64
18248,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,# fallback
18249,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18250,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
18251,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18252,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18253,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18254,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,# basic smoke test
18255,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18256,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18257,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18258,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18259,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
18260,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18261,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18262,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
18263,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
18264,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18265,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,#!/bin/sh'; \
18266,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18267,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
18268,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18269,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18270,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18271,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18272,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
18273,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18274,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18275,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18276,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18277,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
18278,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18279,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18280,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18281,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18282,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
18283,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18284,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18285,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
18286,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
18287,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
18288,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18289,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/oracle/Dockerfile,# basic smoke test
18290,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
18291,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18292,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18293,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
18294,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
18295,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
18296,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18297,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
18298,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18299,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
18300,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18301,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
18302,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18303,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/oracle/Dockerfile,# basic smoke test
18304,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
18305,15835397954c9ec123e42e685035ecd239e0a1db,/8/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
18306,15835397954c9ec123e42e685035ecd239e0a1db,/8/jre/windows/nanoserver-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
18307,15835397954c9ec123e42e685035ecd239e0a1db,/8/jre/windows/nanoserver-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
18308,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18309,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
18310,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
18311,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18312,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/slim/Dockerfile,#!/bin/sh'; \
18313,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18314,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18315,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18316,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18317,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18318,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18319,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/16/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18320,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/16/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
18321,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/16/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18322,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/16/jdk/alpine/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
18323,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/16/jdk/alpine/Dockerfile,# basic smoke test
18324,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/16/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
18325,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
18326,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/slim/Dockerfile,# backwards compatibility shim
18327,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18328,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
18329,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
18330,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
18331,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
18332,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
18333,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/slim/Dockerfile,# basic smoke test
18334,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18335,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18336,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
18337,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18338,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18339,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
18340,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,# Default to UTF-8 file.encoding
18341,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18342,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,#!/bin/sh'; \
18343,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18344,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18345,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
18346,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18347,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18348,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18349,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18350,4e39684901490c13eaef7892c44e39043d7c4bed,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18351,4e39684901490c13eaef7892c44e39043d7c4bed,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18352,4e39684901490c13eaef7892c44e39043d7c4bed,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
18353,4e39684901490c13eaef7892c44e39043d7c4bed,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18354,4e39684901490c13eaef7892c44e39043d7c4bed,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
18355,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18356,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18357,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
18358,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18359,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18360,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18361,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
18362,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18363,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
18364,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
18365,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18366,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
18367,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,# backwards compatibility shim
18368,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18369,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
18370,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
18371,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,# amd64
18372,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,# fallback
18373,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18374,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
18375,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18376,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18377,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18378,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,# basic smoke test
18379,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18380,5527e8e319a1451b9e302af846b9939da36d8992,/8/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18381,5527e8e319a1451b9e302af846b9939da36d8992,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18382,5527e8e319a1451b9e302af846b9939da36d8992,/8/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
18383,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18384,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18385,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jdk/Dockerfile,# Default to UTF-8 file.encoding
18386,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
18387,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
18388,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18389,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
18390,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
18391,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,# backwards compatibility shim
18392,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18393,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,# https://jdk.java.net/
18394,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18395,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
18396,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18397,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18398,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18399,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,# basic smoke test
18400,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18401,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
18402,4016bc190db90b9254f01ea808a91981f50500a2,/10/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18403,4016bc190db90b9254f01ea808a91981f50500a2,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18404,4016bc190db90b9254f01ea808a91981f50500a2,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18405,4016bc190db90b9254f01ea808a91981f50500a2,/10/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
18406,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18407,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18408,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
18409,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18410,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18411,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18412,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
18413,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18414,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18415,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
18416,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
18417,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
18418,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18419,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/oracle/Dockerfile,# basic smoke test
18420,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
18421,1de3476e9d15e63768d7afeb672ad8a0ccb3f56f,/8/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18422,1de3476e9d15e63768d7afeb672ad8a0ccb3f56f,/8/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18423,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18424,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18425,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jre/Dockerfile,# Default to UTF-8 file.encoding
18426,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18427,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jre/Dockerfile,#!/bin/bash'; \
18428,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18429,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18430,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/7-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18431,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/7-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
18432,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18433,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/7-jdk/alpine/Dockerfile,#!/bin/sh'; \
18434,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18435,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18436,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
18437,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
18438,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
18439,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18440,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
18441,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
18442,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18443,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,#!/bin/sh'; \
18444,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18445,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18446,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
18447,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18448,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18449,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18450,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18451,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18452,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
18453,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
18454,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18455,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/Dockerfile,#!/bin/sh'; \
18456,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18457,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18458,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18459,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18460,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18461,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18462,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18463,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18464,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
18465,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18466,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jre/Dockerfile,#!/bin/sh'; \
18467,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18468,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18469,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
18470,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
18471,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18472,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
18473,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18474,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18475,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
18476,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
18477,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18478,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18479,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18480,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18481,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18482,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18483,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18484,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
18485,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
18486,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
18487,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18488,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18489,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
18490,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
18491,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
18492,58866569ecc3d516467baf83375f3bd4cb0b8229,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18493,58866569ecc3d516467baf83375f3bd4cb0b8229,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
18494,58866569ecc3d516467baf83375f3bd4cb0b8229,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
18495,58866569ecc3d516467baf83375f3bd4cb0b8229,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18496,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
18497,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
18498,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18499,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
18500,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,# backwards compatibility shim
18501,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18502,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18503,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18504,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
18505,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18506,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18507,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18508,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,# basic smoke test
18509,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18510,5552e0cd8db55b834a0d26ab200d19cee54b09f3,/openjdk-9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18511,5552e0cd8db55b834a0d26ab200d19cee54b09f3,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18512,5552e0cd8db55b834a0d26ab200d19cee54b09f3,/openjdk-9-jre/Dockerfile,# Default to UTF-8 file.encoding
18513,5552e0cd8db55b834a0d26ab200d19cee54b09f3,/openjdk-9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18514,5552e0cd8db55b834a0d26ab200d19cee54b09f3,/openjdk-9-jre/Dockerfile,#!/bin/bash'; \
18515,5552e0cd8db55b834a0d26ab200d19cee54b09f3,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
18516,5552e0cd8db55b834a0d26ab200d19cee54b09f3,/openjdk-9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
18517,5552e0cd8db55b834a0d26ab200d19cee54b09f3,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18518,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18519,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18520,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18521,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
18522,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
18523,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18524,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
18525,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18526,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18527,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18528,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18529,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18530,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18531,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18532,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
18533,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18534,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18535,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/alpine3.12/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
18536,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/alpine3.12/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
18537,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/alpine3.12/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
18538,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/alpine3.12/Dockerfile,# amd64
18539,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/alpine3.12/Dockerfile,# fallback
18540,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/alpine3.12/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
18541,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/alpine3.12/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18542,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/alpine3.12/Dockerfile,# basic smoke test
18543,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/alpine3.12/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18544,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18545,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18546,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18547,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
18548,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18549,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18550,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18551,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18552,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
18553,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18554,8f8d04a5f77116be8ebfcaf84e4fcbd1190b95e8,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18555,8f8d04a5f77116be8ebfcaf84e4fcbd1190b95e8,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18556,8f8d04a5f77116be8ebfcaf84e4fcbd1190b95e8,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
18557,8f8d04a5f77116be8ebfcaf84e4fcbd1190b95e8,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18558,8f8d04a5f77116be8ebfcaf84e4fcbd1190b95e8,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
18559,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18560,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18561,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
18562,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18563,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
18564,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/Dockerfile,# backwards compatibility shim
18565,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18566,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
18567,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
18568,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
18569,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
18570,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
18571,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/Dockerfile,# basic smoke test
18572,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18573,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18574,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
18575,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18576,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jre/Dockerfile,#!/bin/sh'; \
18577,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18578,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
18579,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
18580,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18581,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
18582,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,# backwards compatibility shim
18583,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18584,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18585,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18586,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
18587,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18588,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18589,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18590,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,# basic smoke test
18591,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18592,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
18593,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18594,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
18595,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18596,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
18597,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18598,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/oracle/Dockerfile,# basic smoke test
18599,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
18600,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18601,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
18602,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jdk/Dockerfile,# backwards compatibility shim
18603,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18604,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
18605,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
18606,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
18607,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
18608,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jdk/Dockerfile,# basic smoke test
18609,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18610,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18611,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
18612,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18613,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18614,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
18615,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
18616,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18617,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
18618,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18619,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18620,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18621,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18622,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18623,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18624,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18625,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18626,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18627,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
18628,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18629,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jre/Dockerfile,#!/bin/sh'; \
18630,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18631,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18632,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18633,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18634,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18635,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18636,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
18637,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
18638,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18639,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/slim/Dockerfile,#!/bin/sh'; \
18640,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18641,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18642,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18643,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18644,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18645,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18646,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18647,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/7-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18648,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/7-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
18649,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18650,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/7-jdk/alpine/Dockerfile,#!/bin/sh'; \
18651,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18652,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
18653,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
18654,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18655,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jdk/alpine/Dockerfile,#!/bin/sh'; \
18656,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18657,c6c90f5e09a5dc1a1ccd662de8210342f94c673e,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18658,c6c90f5e09a5dc1a1ccd662de8210342f94c673e,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18659,c6c90f5e09a5dc1a1ccd662de8210342f94c673e,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
18660,c6c90f5e09a5dc1a1ccd662de8210342f94c673e,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18661,c6c90f5e09a5dc1a1ccd662de8210342f94c673e,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
18662,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18663,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18664,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18665,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
18666,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18667,9b3b7ed1bdd754fa61b5dd86c0bcd3e3400c6a33,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18668,9b3b7ed1bdd754fa61b5dd86c0bcd3e3400c6a33,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18669,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18670,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18671,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18672,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18673,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18674,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18675,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18676,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
18677,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18678,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jdk/Dockerfile,#!/bin/sh'; \
18679,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18680,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18681,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18682,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
18683,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18684,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18685,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18686,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
18687,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
18688,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
18689,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18690,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18691,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18692,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
18693,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18694,9efa5c2bd28c10d07e70ceac416187a011dd6184,/16/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18695,9efa5c2bd28c10d07e70ceac416187a011dd6184,/16/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
18696,9efa5c2bd28c10d07e70ceac416187a011dd6184,/16/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18697,9efa5c2bd28c10d07e70ceac416187a011dd6184,/16/jdk/alpine/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
18698,9efa5c2bd28c10d07e70ceac416187a011dd6184,/16/jdk/alpine/Dockerfile,# basic smoke test
18699,9efa5c2bd28c10d07e70ceac416187a011dd6184,/16/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
18700,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18701,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18702,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
18703,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
18704,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
18705,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18706,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18707,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18708,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
18709,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18710,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18711,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18712,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18713,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
18714,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
18715,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/slim/Dockerfile,# backwards compatibility shim
18716,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18717,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
18718,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
18719,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
18720,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
18721,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/slim/Dockerfile,# basic smoke test
18722,0f82de10e4aaa8b78d7f79cf725fd1fad1dc85e0,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18723,0f82de10e4aaa8b78d7f79cf725fd1fad1dc85e0,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
18724,0f82de10e4aaa8b78d7f79cf725fd1fad1dc85e0,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
18725,0f82de10e4aaa8b78d7f79cf725fd1fad1dc85e0,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
18726,0f82de10e4aaa8b78d7f79cf725fd1fad1dc85e0,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586"
18727,0f82de10e4aaa8b78d7f79cf725fd1fad1dc85e0,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18728,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18729,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18730,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-6-jdk/Dockerfile,# Default to UTF-8 file.encoding
18731,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18732,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18733,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-6"
18734,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/Dockerfile,# Default to UTF-8 file.encoding
18735,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18736,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/Dockerfile,#!/bin/sh'; \
18737,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18738,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18739,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18740,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18741,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18742,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18743,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
18744,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
18745,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,# backwards compatibility shim
18746,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18747,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18748,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
18749,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,# arm64v8
18750,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,# amd64
18751,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,# fallback
18752,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18753,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
18754,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18755,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18756,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18757,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,# basic smoke test
18758,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18759,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18760,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18761,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jre/Dockerfile,# Default to UTF-8 file.encoding
18762,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18763,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jre/Dockerfile,#!/bin/bash'; \
18764,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
18765,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
18766,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18767,fc1b362bdd68ab37654e47cc1276bf3fc212d132,/13/jdk/alpine/Dockerfile,# https://jdk.java.net/
18768,fc1b362bdd68ab37654e47cc1276bf3fc212d132,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
18769,fc1b362bdd68ab37654e47cc1276bf3fc212d132,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18770,fc1b362bdd68ab37654e47cc1276bf3fc212d132,/13/jdk/alpine/Dockerfile,# basic smoke test
18771,fc1b362bdd68ab37654e47cc1276bf3fc212d132,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
18772,d93be18f4f2d5e8457169cac00e559d953b6028e,/13/jdk/alpine/Dockerfile,# https://jdk.java.net/
18773,d93be18f4f2d5e8457169cac00e559d953b6028e,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
18774,d93be18f4f2d5e8457169cac00e559d953b6028e,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18775,d93be18f4f2d5e8457169cac00e559d953b6028e,/13/jdk/alpine/Dockerfile,# basic smoke test
18776,d93be18f4f2d5e8457169cac00e559d953b6028e,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
18777,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18778,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
18779,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,# Default to UTF-8 file.encoding
18780,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18781,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,#!/bin/sh'; \
18782,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18783,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18784,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
18785,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18786,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18787,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18788,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18789,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18790,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
18791,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18792,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
18793,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18794,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
18795,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,# arm64v8
18796,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,# amd64
18797,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,# fallback
18798,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
18799,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18800,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,# basic smoke test
18801,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
18802,58866569ecc3d516467baf83375f3bd4cb0b8229,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18803,58866569ecc3d516467baf83375f3bd4cb0b8229,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18804,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18805,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
18806,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
18807,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18808,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/slim/Dockerfile,#!/bin/sh'; \
18809,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18810,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18811,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18812,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18813,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18814,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18815,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
18816,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18817,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
18818,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18819,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
18820,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18821,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/oracle/Dockerfile,# basic smoke test
18822,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
18823,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18824,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18825,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18826,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
18827,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
18828,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
18829,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18830,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
18831,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
18832,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18833,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
18834,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18835,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18836,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18837,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18838,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18839,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18840,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18841,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18842,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18843,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18844,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18845,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
18846,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18847,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
18848,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18849,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18850,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
18851,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
18852,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,# backwards compatibility shim
18853,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18854,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
18855,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
18856,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
18857,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
18858,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
18859,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18860,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
18861,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18862,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18863,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,# basic smoke test
18864,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18865,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
18866,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
18867,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18868,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18869,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
18870,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
18871,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18872,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/Dockerfile,#!/bin/sh'; \
18873,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18874,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18875,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18876,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18877,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18878,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18879,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18880,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18881,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
18882,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
18883,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
18884,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18885,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18886,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
18887,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18888,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18889,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18890,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18891,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18892,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18893,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18894,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
18895,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
18896,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18897,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/Dockerfile,#!/bin/sh'; \
18898,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18899,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18900,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18901,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18902,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18903,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18904,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18905,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18906,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
18907,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18908,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18909,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
18910,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,# Default to UTF-8 file.encoding
18911,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18912,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,#!/bin/sh'; \
18913,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18914,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18915,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
18916,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18917,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18918,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18919,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18920,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18921,6930db691f13efa925c1de3bbc8bc393783b7b2f,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18922,6930db691f13efa925c1de3bbc8bc393783b7b2f,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18923,6930db691f13efa925c1de3bbc8bc393783b7b2f,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
18924,6930db691f13efa925c1de3bbc8bc393783b7b2f,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18925,6930db691f13efa925c1de3bbc8bc393783b7b2f,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
18926,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18927,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18928,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18929,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
18930,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18931,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
18932,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
18933,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18934,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
18935,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,# backwards compatibility shim
18936,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18937,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18938,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18939,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
18940,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18941,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18942,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18943,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,# basic smoke test
18944,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18945,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
18946,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
18947,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,# backwards compatibility shim
18948,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18949,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
18950,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
18951,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
18952,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
18953,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
18954,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18955,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
18956,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18957,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18958,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,# basic smoke test
18959,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
18960,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
18961,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,# backwards compatibility shim
18962,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18963,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
18964,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
18965,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
18966,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
18967,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
18968,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18969,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
18970,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18971,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18972,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,# basic smoke test
18973,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18974,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18975,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
18976,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
18977,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18978,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,#!/bin/sh'; \
18979,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18980,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18981,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18982,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18983,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18984,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18985,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18986,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
18987,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18988,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
18989,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18990,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
18991,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18992,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/oracle/Dockerfile,# basic smoke test
18993,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
18994,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18995,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18996,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18997,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18998,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18999,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19000,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
19001,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
19002,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
19003,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
19004,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/oracle/Dockerfile,# basic smoke test
19005,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
19006,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19007,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
19008,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
19009,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19010,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,#!/bin/sh'; \
19011,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19012,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19013,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
19014,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
19015,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19016,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19017,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19018,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19019,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19020,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19021,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19022,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19023,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
19024,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
19025,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
19026,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19027,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19028,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19029,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
19030,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19031,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
19032,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19033,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
19034,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
19035,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
19036,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,# arm64v8
19037,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,# amd64
19038,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,# fallback
19039,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
19040,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19041,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
19042,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,# basic smoke test
19043,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19044,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
19045,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/nanoserver-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19046,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19047,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
19048,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19049,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
19050,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
19051,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
19052,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19053,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/oracle/Dockerfile,# basic smoke test
19054,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
19055,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19056,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
19057,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19058,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
19059,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,# backwards compatibility shim
19060,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19061,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,# https://jdk.java.net/
19062,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19063,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
19064,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19065,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19066,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19067,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,# basic smoke test
19068,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19069,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19070,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19071,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
19072,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19073,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,#!/bin/sh'; \
19074,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19075,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
19076,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19077,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19078,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19079,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
19080,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19081,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19082,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19083,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
19084,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
19085,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
19086,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19087,a8d6952a882f3e56041be8d80df6276dab111f82,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19088,a8d6952a882f3e56041be8d80df6276dab111f82,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19089,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19090,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jre/Dockerfile,# Default to UTF-8 file.encoding
19091,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
19092,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
19093,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586"
19094,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19095,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
19096,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19097,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19098,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19099,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19100,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-1809/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
19101,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19102,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
19103,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/Dockerfile,# Default to UTF-8 file.encoding
19104,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19105,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/Dockerfile,#!/bin/sh'; \
19106,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19107,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19108,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19109,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19110,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19111,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19112,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19113,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19114,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
19115,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19116,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jre/Dockerfile,#!/bin/sh'; \
19117,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19118,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19119,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
19120,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,# backwards compatibility shim
19121,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19122,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19123,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
19124,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,# arm64v8
19125,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,# amd64
19126,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,# fallback
19127,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19128,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
19129,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19130,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19131,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19132,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,# basic smoke test
19133,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19134,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19135,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
19136,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,# backwards compatibility shim
19137,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19138,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
19139,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
19140,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
19141,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,# arm64v8
19142,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,# amd64
19143,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,# fallback
19144,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
19145,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
19146,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
19147,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19148,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
19149,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19150,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19151,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,# basic smoke test
19152,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19153,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19154,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19155,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19156,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19157,0259a649c03ace8b035432ef3ee7274ca30d3776,/8/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19158,0259a649c03ace8b035432ef3ee7274ca30d3776,/8/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19159,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19160,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
19161,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/oracle/Dockerfile,# https://jdk.java.net/
19162,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
19163,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19164,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/oracle/Dockerfile,# basic smoke test
19165,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
19166,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19167,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
19168,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
19169,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19170,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/Dockerfile,#!/bin/sh'; \
19171,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19172,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19173,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19174,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19175,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19176,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19177,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19178,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
19179,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
19180,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19181,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/slim/Dockerfile,#!/bin/sh'; \
19182,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19183,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19184,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19185,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19186,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19187,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19188,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19189,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
19190,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
19191,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19192,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/alpine/Dockerfile,#!/bin/sh'; \
19193,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19194,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19195,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19196,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
19197,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
19198,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
19199,873fb56728befef8ecaf8436c3a27fd239cba301,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19200,873fb56728befef8ecaf8436c3a27fd239cba301,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19201,873fb56728befef8ecaf8436c3a27fd239cba301,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
19202,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19203,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19204,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
19205,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19206,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jdk/Dockerfile,#!/bin/sh'; \
19207,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19208,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
19209,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/nanoserver-1809/Dockerfile,# https://jdk.java.net/
19210,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19211,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19212,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
19213,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
19214,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19215,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/Dockerfile,#!/bin/sh'; \
19216,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19217,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19218,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19219,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19220,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19221,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19222,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19223,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
19224,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
19225,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19226,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,#!/bin/sh'; \
19227,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19228,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19229,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
19230,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19231,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19232,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19233,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19234,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19235,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
19236,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,# backwards compatibility shim
19237,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19238,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19239,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19240,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
19241,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19242,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19243,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19244,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,# basic smoke test
19245,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19246,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
19247,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19248,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19249,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19250,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
19251,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19252,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19253,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
19254,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
19255,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19256,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/Dockerfile,#!/bin/sh'; \
19257,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19258,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19259,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19260,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19261,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19262,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19263,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19264,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19265,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
19266,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
19267,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
19268,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19269,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19270,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
19271,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,# backwards compatibility shim
19272,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19273,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19274,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19275,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
19276,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19277,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19278,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19279,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,# basic smoke test
19280,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19281,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
19282,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19283,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19284,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19285,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
19286,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19287,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19288,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
19289,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
19290,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
19291,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19292,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/oracle/Dockerfile,# basic smoke test
19293,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
19294,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
19295,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19296,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
19297,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19298,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
19299,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19300,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/oracle/Dockerfile,# basic smoke test
19301,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
19302,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19303,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19304,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
19305,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19306,4fc0f299672be87a236d1af61a31c14f67dfcdcc,/8/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19307,4fc0f299672be87a236d1af61a31c14f67dfcdcc,/8/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19308,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19309,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19310,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19311,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
19312,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
19313,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
19314,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
19315,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19316,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
19317,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19318,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
19319,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19320,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/oracle/Dockerfile,# basic smoke test
19321,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
19322,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19323,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
19324,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
19325,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19326,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/Dockerfile,#!/bin/sh'; \
19327,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19328,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19329,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19330,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19331,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19332,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19333,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19334,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
19335,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
19336,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19337,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/alpine/Dockerfile,#!/bin/sh'; \
19338,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19339,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19340,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
19341,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
19342,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19343,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/slim/Dockerfile,#!/bin/sh'; \
19344,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19345,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19346,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19347,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19348,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19349,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19350,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19351,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19352,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19353,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1809/Dockerfile,# http://jdk.java.net/
19354,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19355,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19356,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19357,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
19358,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,# backwards compatibility shim
19359,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19360,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
19361,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
19362,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
19363,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,# arm64v8
19364,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,# amd64
19365,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,# fallback
19366,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
19367,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
19368,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
19369,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19370,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
19371,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19372,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19373,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,# basic smoke test
19374,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19375,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19376,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19377,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
19378,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19379,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19380,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19381,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
19382,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19383,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jre/Dockerfile,#!/bin/sh'; \
19384,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19385,2057305e0474ebf6461daea607ff02874d690914,/7/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19386,2057305e0474ebf6461daea607ff02874d690914,/7/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
19387,2057305e0474ebf6461daea607ff02874d690914,/7/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
19388,2057305e0474ebf6461daea607ff02874d690914,/7/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19389,2057305e0474ebf6461daea607ff02874d690914,/7/jre/slim/Dockerfile,#!/bin/sh'; \
19390,2057305e0474ebf6461daea607ff02874d690914,/7/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19391,2057305e0474ebf6461daea607ff02874d690914,/7/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19392,2057305e0474ebf6461daea607ff02874d690914,/7/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19393,2057305e0474ebf6461daea607ff02874d690914,/7/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19394,2057305e0474ebf6461daea607ff02874d690914,/7/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19395,2057305e0474ebf6461daea607ff02874d690914,/7/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19396,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19397,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19398,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19399,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
19400,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,# Default to UTF-8 file.encoding
19401,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19402,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,#!/bin/sh'; \
19403,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19404,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19405,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
19406,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19407,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19408,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19409,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19410,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19411,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19412,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19413,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19414,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
19415,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19416,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19417,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19418,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19419,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
19420,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19421,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19422,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
19423,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19424,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
19425,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,# backwards compatibility shim
19426,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19427,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,# https://jdk.java.net/
19428,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19429,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
19430,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19431,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19432,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19433,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,# basic smoke test
19434,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19435,4735dcec5fec2833635b8f6634d24d7e22c617b2,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19436,4735dcec5fec2833635b8f6634d24d7e22c617b2,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
19437,4735dcec5fec2833635b8f6634d24d7e22c617b2,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
19438,4735dcec5fec2833635b8f6634d24d7e22c617b2,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19439,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19440,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19441,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19442,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
19443,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19444,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19445,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19446,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
19447,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19448,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19449,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19450,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
19451,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
19452,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
19453,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19454,15835397954c9ec123e42e685035ecd239e0a1db,/11/jre/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
19455,15835397954c9ec123e42e685035ecd239e0a1db,/11/jre/windows/nanoserver-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
19456,15835397954c9ec123e42e685035ecd239e0a1db,/11/jre/windows/nanoserver-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
19457,15835397954c9ec123e42e685035ecd239e0a1db,/11/jre/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19458,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19459,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
19460,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
19461,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
19462,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19463,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/oracle/Dockerfile,# basic smoke test
19464,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
19465,1992f5ab6b5b6b4748c9628125dbea37df405d99,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19466,1992f5ab6b5b6b4748c9628125dbea37df405d99,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
19467,1992f5ab6b5b6b4748c9628125dbea37df405d99,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
19468,1992f5ab6b5b6b4748c9628125dbea37df405d99,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19469,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19470,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19471,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
19472,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19473,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
19474,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19475,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
19476,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
19477,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19478,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/slim/Dockerfile,#!/bin/sh'; \
19479,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19480,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19481,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19482,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19483,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19484,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19485,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19486,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19487,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
19488,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
19489,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
19490,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19491,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19492,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19493,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
19494,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19495,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19496,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
19497,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
19498,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19499,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/slim/Dockerfile,#!/bin/sh'; \
19500,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19501,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19502,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19503,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19504,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19505,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19506,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19507,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19508,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19509,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19510,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19511,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19512,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19513,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,# Default to UTF-8 file.encoding
19514,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,# backwards compatibility shim
19515,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19516,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
19517,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
19518,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
19519,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,# amd64
19520,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,# fallback
19521,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
19522,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
19523,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
19524,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19525,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,#!/usr/bin/env bash'; \
19526,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19527,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19528,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,# basic smoke test
19529,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19530,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19531,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
19532,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19533,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19534,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
19535,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,# backwards compatibility shim
19536,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19537,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
19538,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
19539,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
19540,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
19541,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
19542,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19543,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
19544,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19545,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19546,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,# basic smoke test
19547,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
19548,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jdk/windows/nanoserver-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
19549,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jdk/windows/nanoserver-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
19550,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19551,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19552,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jdk/Dockerfile,# Default to UTF-8 file.encoding
19553,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19554,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jdk/Dockerfile,#!/bin/bash'; \
19555,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19556,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/windows/nanoserver/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19557,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19558,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/windows/nanoserver/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
19559,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19560,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
19561,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
19562,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19563,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
19564,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19565,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19566,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19567,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19568,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19569,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19570,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19571,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19572,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19573,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
19574,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19575,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jdk/Dockerfile,#!/bin/sh'; \
19576,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19577,8b20818d91705361ff42b597369620680d0af98c,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19578,8b20818d91705361ff42b597369620680d0af98c,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19579,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19580,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
19581,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
19582,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19583,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/slim/Dockerfile,#!/bin/sh'; \
19584,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19585,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19586,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19587,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19588,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19589,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19590,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19591,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19592,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
19593,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19594,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
19595,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19596,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19597,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19598,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
19599,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19600,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19601,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19602,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
19603,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19604,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19605,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19606,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
19607,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
19608,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
19609,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19610,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19611,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
19612,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
19613,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
19614,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
19615,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19616,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
19617,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
19618,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
19619,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,# arm64v8
19620,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,# amd64
19621,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,# fallback
19622,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
19623,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19624,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
19625,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,# basic smoke test
19626,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19627,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19628,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19629,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
19630,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,# backwards compatibility shim
19631,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19632,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
19633,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
19634,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
19635,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
19636,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
19637,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19638,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,#!/usr/bin/env bash'; \
19639,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19640,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19641,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,# basic smoke test
19642,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19643,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
19644,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
19645,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
19646,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
19647,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/oracle/Dockerfile,# basic smoke test
19648,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
19649,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19650,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19651,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
19652,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,# backwards compatibility shim
19653,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19654,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
19655,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
19656,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
19657,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
19658,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
19659,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19660,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,#!/usr/bin/env bash'; \
19661,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19662,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19663,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,# basic smoke test
19664,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19665,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
19666,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
19667,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19668,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jdk/alpine/Dockerfile,#!/bin/sh'; \
19669,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19670,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
19671,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19672,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19673,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19674,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19675,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
19676,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
19677,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
19678,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19679,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
19680,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
19681,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
19682,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19683,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/oracle/Dockerfile,# basic smoke test
19684,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
19685,3faf377815bd5409f91a007b092d38a36134baf5,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19686,3faf377815bd5409f91a007b092d38a36134baf5,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19687,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19688,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19689,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
19690,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
19691,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
19692,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19693,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19694,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
19695,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,# backwards compatibility shim
19696,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19697,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19698,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19699,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
19700,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19701,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19702,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19703,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,# basic smoke test
19704,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19705,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
19706,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19707,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
19708,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
19709,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19710,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,#!/bin/sh'; \
19711,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19712,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
19713,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19714,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19715,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19716,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19717,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
19718,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19719,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/alpine/Dockerfile,# http://jdk.java.net/
19720,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
19721,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
19722,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/alpine/Dockerfile,# basic smoke test
19723,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
19724,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19725,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
19726,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
19727,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19728,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,#!/bin/sh'; \
19729,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19730,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
19731,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19732,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19733,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19734,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19735,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
19736,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19737,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19738,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
19739,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,# backwards compatibility shim
19740,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19741,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
19742,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
19743,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
19744,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
19745,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
19746,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19747,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
19748,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19749,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19750,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,# basic smoke test
19751,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19752,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
19753,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
19754,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19755,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jre/alpine/Dockerfile,#!/bin/sh'; \
19756,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jre/alpine/Dockerfile,# https://bugs.alpinelinux.org/issues/10126
19757,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19758,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19759,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19760,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19761,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
19762,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19763,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19764,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19765,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
19766,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
19767,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
19768,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19769,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19770,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
19771,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
19772,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19773,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/Dockerfile,#!/bin/sh'; \
19774,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19775,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19776,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19777,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19778,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19779,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19780,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19781,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
19782,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,# backwards compatibility shim
19783,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19784,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19785,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
19786,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,# arm64v8
19787,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,# amd64
19788,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,# fallback
19789,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19790,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
19791,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19792,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19793,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19794,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,# basic smoke test
19795,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19796,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19797,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
19798,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,# backwards compatibility shim
19799,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19800,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19801,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19802,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
19803,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19804,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19805,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19806,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,# basic smoke test
19807,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19808,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
19809,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19810,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
19811,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,# backwards compatibility shim
19812,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19813,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19814,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19815,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
19816,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19817,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19818,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19819,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,# basic smoke test
19820,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19821,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
19822,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19823,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
19824,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,# Default to UTF-8 file.encoding
19825,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19826,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,#!/bin/sh'; \
19827,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19828,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19829,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
19830,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19831,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19832,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19833,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19834,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19835,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
19836,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
19837,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19838,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
19839,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19840,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19841,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19842,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19843,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19844,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19845,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19846,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19847,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19848,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19849,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19850,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19851,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19852,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19853,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19854,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
19855,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19856,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19857,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
19858,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,# backwards compatibility shim
19859,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19860,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
19861,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
19862,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
19863,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
19864,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
19865,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19866,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
19867,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19868,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19869,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,# basic smoke test
19870,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19871,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19872,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
19873,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19874,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19875,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19876,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
19877,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19878,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19879,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
19880,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
19881,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19882,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,#!/bin/sh'; \
19883,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19884,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19885,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19886,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19887,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19888,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19889,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19890,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19891,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19892,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19893,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
19894,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19895,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19896,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19897,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
19898,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,# backwards compatibility shim
19899,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19900,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
19901,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
19902,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
19903,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
19904,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
19905,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19906,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,#!/usr/bin/env bash'; \
19907,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19908,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19909,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,# basic smoke test
19910,349703e3d620e86fb46e2a4529a810c7116a9b4e,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19911,349703e3d620e86fb46e2a4529a810c7116a9b4e,/12/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
19912,349703e3d620e86fb46e2a4529a810c7116a9b4e,/12/jdk/oracle/Dockerfile,# https://jdk.java.net/
19913,349703e3d620e86fb46e2a4529a810c7116a9b4e,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
19914,349703e3d620e86fb46e2a4529a810c7116a9b4e,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19915,349703e3d620e86fb46e2a4529a810c7116a9b4e,/12/jdk/oracle/Dockerfile,# basic smoke test
19916,349703e3d620e86fb46e2a4529a810c7116a9b4e,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
19917,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19918,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
19919,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
19920,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19921,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,#!/bin/sh'; \
19922,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19923,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19924,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19925,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19926,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19927,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19928,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19929,0584b2804ed12dca7c5e264b5fc55fc07a3ac148,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19930,0584b2804ed12dca7c5e264b5fc55fc07a3ac148,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19931,0584b2804ed12dca7c5e264b5fc55fc07a3ac148,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
19932,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
19933,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/nanoserver-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
19934,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/nanoserver-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
19935,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19936,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19937,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
19938,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,# backwards compatibility shim
19939,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19940,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
19941,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
19942,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
19943,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
19944,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
19945,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19946,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
19947,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19948,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19949,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,# basic smoke test
19950,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19951,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19952,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19953,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
19954,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19955,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jdk/Dockerfile,#!/bin/sh'; \
19956,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19957,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19958,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19959,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19960,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
