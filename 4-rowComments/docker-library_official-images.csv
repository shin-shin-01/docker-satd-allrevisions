,CommitID,Dockerfile,Comment
0,7cee0649e15c21ecbcd37413325db34133ef3f34,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
1,7cee0649e15c21ecbcd37413325db34133ef3f34,/Dockerfile,# git for cloning source code
2,7cee0649e15c21ecbcd37413325db34133ef3f34,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
3,7cee0649e15c21ecbcd37413325db34133ef3f34,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
4,7cee0649e15c21ecbcd37413325db34133ef3f34,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
5,ee282fe6fbcf2981a153f8cdfba2633f1a9ded0a,/Dockerfile,# bash for running scripts
6,ee282fe6fbcf2981a153f8cdfba2633f1a9ded0a,/Dockerfile,# go for compiling bashbrew
7,ee282fe6fbcf2981a153f8cdfba2633f1a9ded0a,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
8,ee282fe6fbcf2981a153f8cdfba2633f1a9ded0a,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
9,84aa9ed158196e09a9e68f34d6a2a02ce43a0f7e,/bashbrew/put-multiarch/Dockerfile,# secure by default â™¥ (thanks to sri!)
10,84aa9ed158196e09a9e68f34d6a2a02ce43a0f7e,/bashbrew/put-multiarch/Dockerfile,"# TODO find a way to make --mirror-only / SSL work with backpan too :(
#RUN cpanm Digest::SHA Module::Signature
# TODO find a way to make --verify work with backpan as well :'(
#ENV PERL_CPANM_OPT $PERL_CPANM_OPT --verify"
11,84aa9ed158196e09a9e68f34d6a2a02ce43a0f7e,/bashbrew/put-multiarch/Dockerfile,"# reinstall cpanm itself, for good measure"
12,84aa9ed158196e09a9e68f34d6a2a02ce43a0f7e,/bashbrew/put-multiarch/Dockerfile,# the tests for IO::Socket::SSL like to hang... :(
13,84aa9ed158196e09a9e68f34d6a2a02ce43a0f7e,/bashbrew/put-multiarch/Dockerfile,# https://metacpan.org/pod/release/SRI/Mojolicious-7.94/lib/Mojo/IOLoop.pm#DESCRIPTION
14,84aa9ed158196e09a9e68f34d6a2a02ce43a0f7e,/bashbrew/put-multiarch/Dockerfile,# epoll (Linux)
15,18b84c17e4bf8e02f867866c5e4e0cbfb3e3432d,/Dockerfile,"# add ""edge"" since Alpine 3.3 only has Go 1.5 and we need 1.6+"
16,18b84c17e4bf8e02f867866c5e4e0cbfb3e3432d,/Dockerfile,# bash for running scripts
17,18b84c17e4bf8e02f867866c5e4e0cbfb3e3432d,/Dockerfile,# go for compiling bashbrew
18,18b84c17e4bf8e02f867866c5e4e0cbfb3e3432d,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
19,18b84c17e4bf8e02f867866c5e4e0cbfb3e3432d,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
20,5ea61be02a8018550ce5895365d8bc7531b0fa8c,/Dockerfile,# ssl for downloading files
21,5ea61be02a8018550ce5895365d8bc7531b0fa8c,/Dockerfile,# git for cloning source code
22,5ea61be02a8018550ce5895365d8bc7531b0fa8c,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
23,5ea61be02a8018550ce5895365d8bc7531b0fa8c,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
24,5ea61be02a8018550ce5895365d8bc7531b0fa8c,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
25,31d62561065a096c0062ee0a460929805f2da900,/Dockerfile,"# add ""edge"" since Alpine 3.3 only has Go 1.5 and we need 1.6+"
26,31d62561065a096c0062ee0a460929805f2da900,/Dockerfile,# bash for running scripts
27,31d62561065a096c0062ee0a460929805f2da900,/Dockerfile,# go for compiling bashbrew
28,4132946bff988833ad4972649b43d0e595138dbf,/Dockerfile,# bash for running scripts
29,4132946bff988833ad4972649b43d0e595138dbf,/Dockerfile,# go for compiling bashbrew
30,4132946bff988833ad4972649b43d0e595138dbf,/Dockerfile,# ssl for downloading files
31,4132946bff988833ad4972649b43d0e595138dbf,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
32,4132946bff988833ad4972649b43d0e595138dbf,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
33,3b661c2c61964667e6c8f4ea243e5e832d1fc2c7,/Dockerfile,"# add ""edge"" since Alpine 3.3 only has Go 1.5 and we need 1.6+"
34,3b661c2c61964667e6c8f4ea243e5e832d1fc2c7,/Dockerfile,# bash for running scripts
35,3b661c2c61964667e6c8f4ea243e5e832d1fc2c7,/Dockerfile,# go for compiling bashbrew
36,0896154b8b1389888d1c2f416d3fbbea4c002272,/Dockerfile,"# FYI, this base image is built via test-pr.sh (from https://github.com/docker-library/bashbrew/tree/master/Dockerfile)"
37,0896154b8b1389888d1c2f416d3fbbea4c002272,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
38,0896154b8b1389888d1c2f416d3fbbea4c002272,/Dockerfile,# git for cloning source code
39,3818af091af51923ccc0a276de74519d4f04faeb,/Dockerfile,# bash for running scripts
40,3818af091af51923ccc0a276de74519d4f04faeb,/Dockerfile,# go for compiling bashbrew
41,3818af091af51923ccc0a276de74519d4f04faeb,/Dockerfile,# ssl for downloading files
42,3818af091af51923ccc0a276de74519d4f04faeb,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
43,3818af091af51923ccc0a276de74519d4f04faeb,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
44,d441c7811f565870e461fea4ceefd1a8db79f960,/Dockerfile,"# add ""edge"" since Alpine 3.3 only has Go 1.5 and we need 1.6+"
45,d441c7811f565870e461fea4ceefd1a8db79f960,/Dockerfile,# bash for running scripts
46,d441c7811f565870e461fea4ceefd1a8db79f960,/Dockerfile,# go for compiling bashbrew
47,d441c7811f565870e461fea4ceefd1a8db79f960,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
48,d441c7811f565870e461fea4ceefd1a8db79f960,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
49,e9a3c6d607573ef4a8eaa938cdb4b20ab907d16f,/Dockerfile,"# FYI, this base image is built via test-pr.sh (from https://github.com/docker-library/bashbrew/tree/master/Dockerfile)"
50,e9a3c6d607573ef4a8eaa938cdb4b20ab907d16f,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
51,e9a3c6d607573ef4a8eaa938cdb4b20ab907d16f,/Dockerfile,# git for cloning source code
52,a230ff4d6fdca5f9ba22d6e7c4ab509e0ec399f6,/Dockerfile,# bash for running scripts
53,a230ff4d6fdca5f9ba22d6e7c4ab509e0ec399f6,/Dockerfile,# go for compiling bashbrew
54,a230ff4d6fdca5f9ba22d6e7c4ab509e0ec399f6,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
55,a230ff4d6fdca5f9ba22d6e7c4ab509e0ec399f6,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
56,95fa3a8011f942c024942abe2a78a03e43f87c5b,/Dockerfile,# bash for running scripts
57,95fa3a8011f942c024942abe2a78a03e43f87c5b,/Dockerfile,# go for compiling bashbrew
58,95fa3a8011f942c024942abe2a78a03e43f87c5b,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
59,95fa3a8011f942c024942abe2a78a03e43f87c5b,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
60,c2163904e11b34018f0789f10da6f20a1d342f69,/Dockerfile,# bash for running scripts
61,c2163904e11b34018f0789f10da6f20a1d342f69,/Dockerfile,# go for compiling bashbrew
62,c2163904e11b34018f0789f10da6f20a1d342f69,/Dockerfile,# ssl for downloading files
63,c2163904e11b34018f0789f10da6f20a1d342f69,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
64,c2163904e11b34018f0789f10da6f20a1d342f69,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
65,971a89f9a71fe6d2aa1027dbb47379993abf3aea,/Dockerfile,# bash for running scripts
66,971a89f9a71fe6d2aa1027dbb47379993abf3aea,/Dockerfile,# go for compiling bashbrew
67,971a89f9a71fe6d2aa1027dbb47379993abf3aea,/Dockerfile,# ssl for downloading files
68,971a89f9a71fe6d2aa1027dbb47379993abf3aea,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
69,971a89f9a71fe6d2aa1027dbb47379993abf3aea,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
70,971a89f9a71fe6d2aa1027dbb47379993abf3aea,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
71,dfc5512318d1a5359e554e7b98ca14219c647c27,/Dockerfile,"# add ""edge"" since Alpine 3.3 only has Go 1.5 and we need 1.6+"
72,058fbda764e8273f2bfbeda928e2be84450c04a2,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
73,058fbda764e8273f2bfbeda928e2be84450c04a2,/Dockerfile,# git for cloning source code
74,058fbda764e8273f2bfbeda928e2be84450c04a2,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
75,058fbda764e8273f2bfbeda928e2be84450c04a2,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
76,058fbda764e8273f2bfbeda928e2be84450c04a2,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
77,c06200ac9d9db1a72f7e631ad17998a1f2d31b66,/Dockerfile,# bash for running scripts
78,c06200ac9d9db1a72f7e631ad17998a1f2d31b66,/Dockerfile,# go for compiling bashbrew
79,c06200ac9d9db1a72f7e631ad17998a1f2d31b66,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
80,c06200ac9d9db1a72f7e631ad17998a1f2d31b66,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
81,38a906242d522b7bae3c04e4790336eb3dffa1d8,/Dockerfile,# bash for running scripts
82,38a906242d522b7bae3c04e4790336eb3dffa1d8,/Dockerfile,# go for compiling bashbrew
83,38a906242d522b7bae3c04e4790336eb3dffa1d8,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
84,38a906242d522b7bae3c04e4790336eb3dffa1d8,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
85,913735abfd10128d42182449b477afcae6f2c7f7,/Dockerfile,"# add ""edge"" since Alpine 3.3 only has Go 1.5 and we need 1.6+"
86,913735abfd10128d42182449b477afcae6f2c7f7,/Dockerfile,# bash for running scripts
87,913735abfd10128d42182449b477afcae6f2c7f7,/Dockerfile,# go for compiling bashbrew
88,bc1a0ca4ffbf126aa823dc86d4bb4cd02477e940,/bashbrew/put-multiarch/Dockerfile,# secure by default â™¥ (thanks to sri!)
89,bc1a0ca4ffbf126aa823dc86d4bb4cd02477e940,/bashbrew/put-multiarch/Dockerfile,"# TODO find a way to make --mirror-only / SSL work with backpan too :(
#RUN cpanm Digest::SHA Module::Signature
# TODO find a way to make --verify work with backpan as well :'(
#ENV PERL_CPANM_OPT $PERL_CPANM_OPT --verify"
90,bc1a0ca4ffbf126aa823dc86d4bb4cd02477e940,/bashbrew/put-multiarch/Dockerfile,"# reinstall cpanm itself, for good measure"
91,bc1a0ca4ffbf126aa823dc86d4bb4cd02477e940,/bashbrew/put-multiarch/Dockerfile,# the tests for IO::Socket::SSL like to hang... :(
92,bc1a0ca4ffbf126aa823dc86d4bb4cd02477e940,/bashbrew/put-multiarch/Dockerfile,# https://metacpan.org/pod/release/SRI/Mojolicious-7.94/lib/Mojo/IOLoop.pm#DESCRIPTION
93,bc1a0ca4ffbf126aa823dc86d4bb4cd02477e940,/bashbrew/put-multiarch/Dockerfile,# epoll (Linux)
94,f058fa714659faedd5199bb3b236e74e39e379cf,/Dockerfile,"# FYI, this base image is built via test-pr.sh (from https://github.com/docker-library/bashbrew/tree/master/Dockerfile)"
95,f058fa714659faedd5199bb3b236e74e39e379cf,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
96,f058fa714659faedd5199bb3b236e74e39e379cf,/Dockerfile,# git for cloning source code
97,c7c9c1d12bfadf10b62119bab2103940fa185757,/Dockerfile,"# add ""edge"" since Alpine 3.3 only has Go 1.5 and we need 1.6+"
98,c7c9c1d12bfadf10b62119bab2103940fa185757,/Dockerfile,# bash for running scripts
99,c7c9c1d12bfadf10b62119bab2103940fa185757,/Dockerfile,# go for compiling bashbrew
100,c7c9c1d12bfadf10b62119bab2103940fa185757,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
101,c7c9c1d12bfadf10b62119bab2103940fa185757,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
102,caa77d44ae0eb21b0963821d6ea0999d5e61bd32,/Dockerfile,# bash for running scripts
103,caa77d44ae0eb21b0963821d6ea0999d5e61bd32,/Dockerfile,# go for compiling bashbrew
104,caa77d44ae0eb21b0963821d6ea0999d5e61bd32,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
105,caa77d44ae0eb21b0963821d6ea0999d5e61bd32,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
106,cc7a2a4feae21d3e49afad94f9b2ddcfa98ae5b9,/Dockerfile,# bash for running scripts
107,cc7a2a4feae21d3e49afad94f9b2ddcfa98ae5b9,/Dockerfile,# go for compiling bashbrew
108,cc7a2a4feae21d3e49afad94f9b2ddcfa98ae5b9,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
109,cc7a2a4feae21d3e49afad94f9b2ddcfa98ae5b9,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
110,01342e45187a88b5ef94e77c89aa73ca01b8bc69,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
111,01342e45187a88b5ef94e77c89aa73ca01b8bc69,/Dockerfile,# git for cloning source code
112,01342e45187a88b5ef94e77c89aa73ca01b8bc69,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
113,01342e45187a88b5ef94e77c89aa73ca01b8bc69,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
114,01342e45187a88b5ef94e77c89aa73ca01b8bc69,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
115,c21ec66e1d610d681ffbb1fa3acb3a62b46f6f0c,/Dockerfile,# bash for running scripts
116,c21ec66e1d610d681ffbb1fa3acb3a62b46f6f0c,/Dockerfile,# go for compiling bashbrew
117,c21ec66e1d610d681ffbb1fa3acb3a62b46f6f0c,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
118,c21ec66e1d610d681ffbb1fa3acb3a62b46f6f0c,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
119,feee857f79da8bb02e6a1220831c9de248e91604,/Dockerfile,"# add ""edge"" since Alpine 3.3 only has Go 1.5 and we need 1.6+"
120,1fedec2869e560fdb21faf034fe85f0be103d8ef,/Dockerfile,# ssl for downloading files
121,1fedec2869e560fdb21faf034fe85f0be103d8ef,/Dockerfile,# git for cloning source code
122,1fedec2869e560fdb21faf034fe85f0be103d8ef,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
123,1fedec2869e560fdb21faf034fe85f0be103d8ef,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
124,1fedec2869e560fdb21faf034fe85f0be103d8ef,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
125,62a1d1e802084dc7c46770cf553476e815254082,/Dockerfile,# bash for running scripts
126,62a1d1e802084dc7c46770cf553476e815254082,/Dockerfile,# go for compiling bashbrew
127,62a1d1e802084dc7c46770cf553476e815254082,/Dockerfile,# ssl for downloading files
128,62a1d1e802084dc7c46770cf553476e815254082,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
129,62a1d1e802084dc7c46770cf553476e815254082,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
130,62a1d1e802084dc7c46770cf553476e815254082,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
