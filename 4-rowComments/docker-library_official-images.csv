,CommitID,Dockerfile,Comment
0,ca4013a5dff95c4aa9a1ba5383e4bc26401c1a8f,/Dockerfile,"# FYI, this base image is built via test-pr.sh (from https://github.com/docker-library/bashbrew/tree/master/Dockerfile)"
1,ca4013a5dff95c4aa9a1ba5383e4bc26401c1a8f,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
2,ca4013a5dff95c4aa9a1ba5383e4bc26401c1a8f,/Dockerfile,# git for cloning source code
3,3650bd89ae92c9655888df7037917a3ef3f42040,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
4,3650bd89ae92c9655888df7037917a3ef3f42040,/Dockerfile,# git for cloning source code
5,3650bd89ae92c9655888df7037917a3ef3f42040,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
6,3650bd89ae92c9655888df7037917a3ef3f42040,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
7,3650bd89ae92c9655888df7037917a3ef3f42040,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
8,2e6963e86389a49d011d1b65b7310fc382faea65,/Dockerfile,# bash for running scripts
9,2e6963e86389a49d011d1b65b7310fc382faea65,/Dockerfile,# go for compiling bashbrew
10,2e6963e86389a49d011d1b65b7310fc382faea65,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
11,2e6963e86389a49d011d1b65b7310fc382faea65,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
12,07a27576863e1868775d08ef07f046e83d4da6e1,/Dockerfile,# bash for running scripts
13,07a27576863e1868775d08ef07f046e83d4da6e1,/Dockerfile,# go for compiling bashbrew
14,07a27576863e1868775d08ef07f046e83d4da6e1,/Dockerfile,# ssl for downloading files
15,07a27576863e1868775d08ef07f046e83d4da6e1,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
16,07a27576863e1868775d08ef07f046e83d4da6e1,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
17,be144e0d6eedd99385040cdc4184ead18c7bfb86,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
18,be144e0d6eedd99385040cdc4184ead18c7bfb86,/Dockerfile,# git for cloning source code
19,be144e0d6eedd99385040cdc4184ead18c7bfb86,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
20,be144e0d6eedd99385040cdc4184ead18c7bfb86,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
21,be144e0d6eedd99385040cdc4184ead18c7bfb86,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
22,64b3ac9f17f2cc3a8b5d2bfdabc2a2605ceb898a,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
23,64b3ac9f17f2cc3a8b5d2bfdabc2a2605ceb898a,/Dockerfile,# git for cloning source code
24,64b3ac9f17f2cc3a8b5d2bfdabc2a2605ceb898a,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
25,64b3ac9f17f2cc3a8b5d2bfdabc2a2605ceb898a,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
26,64b3ac9f17f2cc3a8b5d2bfdabc2a2605ceb898a,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
27,5b871aed231937fb2683984217b93fac31014f46,/bashbrew/put-multiarch/Dockerfile,# secure by default â™¥ (thanks to sri!)
28,5b871aed231937fb2683984217b93fac31014f46,/bashbrew/put-multiarch/Dockerfile,"# TODO find a way to make --mirror-only / SSL work with backpan too :(
#RUN cpanm Digest::SHA Module::Signature
# TODO find a way to make --verify work with backpan as well :'(
#ENV PERL_CPANM_OPT $PERL_CPANM_OPT --verify"
29,5b871aed231937fb2683984217b93fac31014f46,/bashbrew/put-multiarch/Dockerfile,"# reinstall cpanm itself, for good measure"
30,5b871aed231937fb2683984217b93fac31014f46,/bashbrew/put-multiarch/Dockerfile,# the tests for IO::Socket::SSL like to hang... :(
31,5b871aed231937fb2683984217b93fac31014f46,/bashbrew/put-multiarch/Dockerfile,# https://metacpan.org/pod/release/SRI/Mojolicious-7.94/lib/Mojo/IOLoop.pm#DESCRIPTION
32,5b871aed231937fb2683984217b93fac31014f46,/bashbrew/put-multiarch/Dockerfile,# epoll (Linux)
33,7cee0649e15c21ecbcd37413325db34133ef3f34,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
34,7cee0649e15c21ecbcd37413325db34133ef3f34,/Dockerfile,# git for cloning source code
35,7cee0649e15c21ecbcd37413325db34133ef3f34,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
36,7cee0649e15c21ecbcd37413325db34133ef3f34,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
37,7cee0649e15c21ecbcd37413325db34133ef3f34,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
38,15a1fe04f6409849e9d7bdf0ff8ba259d0e6bee0,/Dockerfile,# bash for running scripts
39,15a1fe04f6409849e9d7bdf0ff8ba259d0e6bee0,/Dockerfile,# go for compiling bashbrew
40,15a1fe04f6409849e9d7bdf0ff8ba259d0e6bee0,/Dockerfile,# ssl for downloading files
41,15a1fe04f6409849e9d7bdf0ff8ba259d0e6bee0,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
42,15a1fe04f6409849e9d7bdf0ff8ba259d0e6bee0,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
43,15a1fe04f6409849e9d7bdf0ff8ba259d0e6bee0,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
44,14970bb30dc6ccfb2b6bc959c1a57f5bc7c5b931,/Dockerfile,"# FYI, this base image is built via test-pr.sh (from https://github.com/docker-library/bashbrew/tree/master/Dockerfile)"
45,14970bb30dc6ccfb2b6bc959c1a57f5bc7c5b931,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
46,14970bb30dc6ccfb2b6bc959c1a57f5bc7c5b931,/Dockerfile,# git for cloning source code
47,9cd42902bad827828f7d89ea6ed5bff37464278f,/Dockerfile,# bash for running scripts
48,9cd42902bad827828f7d89ea6ed5bff37464278f,/Dockerfile,# go for compiling bashbrew
49,9cd42902bad827828f7d89ea6ed5bff37464278f,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
50,9cd42902bad827828f7d89ea6ed5bff37464278f,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
51,de09e0b6efb3119589b4df027b191ac4ec07d3a1,/Dockerfile,# bash for running scripts
52,de09e0b6efb3119589b4df027b191ac4ec07d3a1,/Dockerfile,# go for compiling bashbrew
53,de09e0b6efb3119589b4df027b191ac4ec07d3a1,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
54,de09e0b6efb3119589b4df027b191ac4ec07d3a1,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
55,cffd4a67959c6d79cdcac824f00ce38cf7a8fad8,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
56,cffd4a67959c6d79cdcac824f00ce38cf7a8fad8,/Dockerfile,# git for cloning source code
57,cffd4a67959c6d79cdcac824f00ce38cf7a8fad8,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
58,cffd4a67959c6d79cdcac824f00ce38cf7a8fad8,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
59,cffd4a67959c6d79cdcac824f00ce38cf7a8fad8,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
60,fea7c6838344638afec59005fce12cc568f94069,/Dockerfile,# bash for running scripts
61,fea7c6838344638afec59005fce12cc568f94069,/Dockerfile,# go for compiling bashbrew
62,fea7c6838344638afec59005fce12cc568f94069,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
63,fea7c6838344638afec59005fce12cc568f94069,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
64,68a175ff8f1b5a3d184ed42e6736d9782e0cea3e,/Dockerfile,# bash for running scripts
65,68a175ff8f1b5a3d184ed42e6736d9782e0cea3e,/Dockerfile,# go for compiling bashbrew
66,68a175ff8f1b5a3d184ed42e6736d9782e0cea3e,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
67,68a175ff8f1b5a3d184ed42e6736d9782e0cea3e,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
68,21cdbdbb884c42790034d31cd7477c6ce5367f88,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
69,21cdbdbb884c42790034d31cd7477c6ce5367f88,/Dockerfile,# git for cloning source code
70,21cdbdbb884c42790034d31cd7477c6ce5367f88,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
71,21cdbdbb884c42790034d31cd7477c6ce5367f88,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
72,21cdbdbb884c42790034d31cd7477c6ce5367f88,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
73,0a9844158485af6a248441267a94452da2d69ffc,/Dockerfile,"# FYI, this base image is built via test-pr.sh (from https://github.com/docker-library/bashbrew/tree/master/Dockerfile)"
74,0a9844158485af6a248441267a94452da2d69ffc,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
75,0a9844158485af6a248441267a94452da2d69ffc,/Dockerfile,# git for cloning source code
76,114e657a41a9911c5ca608d53bce8f3c2fe7e7e4,/Dockerfile,# bash for running scripts
77,114e657a41a9911c5ca608d53bce8f3c2fe7e7e4,/Dockerfile,# go for compiling bashbrew
78,114e657a41a9911c5ca608d53bce8f3c2fe7e7e4,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
79,114e657a41a9911c5ca608d53bce8f3c2fe7e7e4,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
80,b31c720cf9e9da63c840ce18559629771f73e96e,/Dockerfile,# bash for running scripts
81,b31c720cf9e9da63c840ce18559629771f73e96e,/Dockerfile,# go for compiling bashbrew
82,b31c720cf9e9da63c840ce18559629771f73e96e,/Dockerfile,# ssl for downloading files
83,b31c720cf9e9da63c840ce18559629771f73e96e,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
84,b31c720cf9e9da63c840ce18559629771f73e96e,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
85,b31c720cf9e9da63c840ce18559629771f73e96e,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
86,2f93e9bfc3e64fcd78628612ed6b6fb908af8d6b,/Dockerfile,# bash for running scripts
87,2f93e9bfc3e64fcd78628612ed6b6fb908af8d6b,/Dockerfile,# go for compiling bashbrew
88,2f93e9bfc3e64fcd78628612ed6b6fb908af8d6b,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
89,2f93e9bfc3e64fcd78628612ed6b6fb908af8d6b,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
90,1be33ddfd36585277797ac577b5f8c75d5c82417,/bashbrew/put-multiarch/Dockerfile,# secure by default â™¥ (thanks to sri!)
91,1be33ddfd36585277797ac577b5f8c75d5c82417,/bashbrew/put-multiarch/Dockerfile,"# TODO find a way to make --mirror-only / SSL work with backpan too :(
#RUN cpanm Digest::SHA Module::Signature
# TODO find a way to make --verify work with backpan as well :'(
#ENV PERL_CPANM_OPT $PERL_CPANM_OPT --verify"
92,1be33ddfd36585277797ac577b5f8c75d5c82417,/bashbrew/put-multiarch/Dockerfile,"# reinstall cpanm itself, for good measure"
93,1be33ddfd36585277797ac577b5f8c75d5c82417,/bashbrew/put-multiarch/Dockerfile,# the tests for IO::Socket::SSL like to hang... :(
94,1be33ddfd36585277797ac577b5f8c75d5c82417,/bashbrew/put-multiarch/Dockerfile,# https://metacpan.org/pod/release/SRI/Mojolicious-7.94/lib/Mojo/IOLoop.pm#DESCRIPTION
95,1be33ddfd36585277797ac577b5f8c75d5c82417,/bashbrew/put-multiarch/Dockerfile,# epoll (Linux)
96,f289a9cc9bed94963d1502bb4d8ae5ce8b8830cb,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
97,f289a9cc9bed94963d1502bb4d8ae5ce8b8830cb,/Dockerfile,# git for cloning source code
98,f289a9cc9bed94963d1502bb4d8ae5ce8b8830cb,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
99,f289a9cc9bed94963d1502bb4d8ae5ce8b8830cb,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
100,f289a9cc9bed94963d1502bb4d8ae5ce8b8830cb,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
101,d4642c389bf2e2d4c049cbd9182069b556cad3a1,/Dockerfile,"# FYI, this base image is built via test-pr.sh (from https://github.com/docker-library/bashbrew/tree/master/Dockerfile)"
102,d4642c389bf2e2d4c049cbd9182069b556cad3a1,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
103,d4642c389bf2e2d4c049cbd9182069b556cad3a1,/Dockerfile,# git for cloning source code
104,7c53048add4a14868eb7d0b99ca14f244b5e5229,/Dockerfile,# bash for running scripts
105,7c53048add4a14868eb7d0b99ca14f244b5e5229,/Dockerfile,# go for compiling bashbrew
106,7c53048add4a14868eb7d0b99ca14f244b5e5229,/Dockerfile,# ssl for downloading files
107,7c53048add4a14868eb7d0b99ca14f244b5e5229,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
108,7c53048add4a14868eb7d0b99ca14f244b5e5229,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
109,8d861c699efa145251441afea0d08a750a0cedba,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
110,8d861c699efa145251441afea0d08a750a0cedba,/Dockerfile,# git for cloning source code
111,8d861c699efa145251441afea0d08a750a0cedba,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
112,8d861c699efa145251441afea0d08a750a0cedba,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
113,8d861c699efa145251441afea0d08a750a0cedba,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
114,4b4177edf558abc0bff0b5a718e0b078f99f2d4e,/Dockerfile,# bash for running scripts
115,4b4177edf558abc0bff0b5a718e0b078f99f2d4e,/Dockerfile,# go for compiling bashbrew
116,4b4177edf558abc0bff0b5a718e0b078f99f2d4e,/Dockerfile,# ssl for downloading files
117,4b4177edf558abc0bff0b5a718e0b078f99f2d4e,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
118,4b4177edf558abc0bff0b5a718e0b078f99f2d4e,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
119,7ae3c26ad9a11566b6dde4df447fe3ca83e1f12b,/bashbrew/put-multiarch/Dockerfile,# secure by default â™¥ (thanks to sri!)
120,7ae3c26ad9a11566b6dde4df447fe3ca83e1f12b,/bashbrew/put-multiarch/Dockerfile,"# TODO find a way to make --mirror-only / SSL work with backpan too :(
#RUN cpanm Digest::SHA Module::Signature
# TODO find a way to make --verify work with backpan as well :'(
#ENV PERL_CPANM_OPT $PERL_CPANM_OPT --verify"
121,7ae3c26ad9a11566b6dde4df447fe3ca83e1f12b,/bashbrew/put-multiarch/Dockerfile,"# reinstall cpanm itself, for good measure"
122,7ae3c26ad9a11566b6dde4df447fe3ca83e1f12b,/bashbrew/put-multiarch/Dockerfile,# the tests for IO::Socket::SSL like to hang... :(
123,7ae3c26ad9a11566b6dde4df447fe3ca83e1f12b,/bashbrew/put-multiarch/Dockerfile,# https://metacpan.org/pod/release/SRI/Mojolicious-7.94/lib/Mojo/IOLoop.pm#DESCRIPTION
124,7ae3c26ad9a11566b6dde4df447fe3ca83e1f12b,/bashbrew/put-multiarch/Dockerfile,# epoll (Linux)
125,ebe2c478119fd8e4c124f512c59fd7f7ea0697a7,/Dockerfile,# bash for running scripts
126,ebe2c478119fd8e4c124f512c59fd7f7ea0697a7,/Dockerfile,# go for compiling bashbrew
127,ebe2c478119fd8e4c124f512c59fd7f7ea0697a7,/Dockerfile,# ssl for downloading files
128,ebe2c478119fd8e4c124f512c59fd7f7ea0697a7,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
129,ebe2c478119fd8e4c124f512c59fd7f7ea0697a7,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
130,ebe2c478119fd8e4c124f512c59fd7f7ea0697a7,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
131,3045e68dc6139f85d49aed221c5f3c52074217bf,/Dockerfile,# bash for running scripts
132,3045e68dc6139f85d49aed221c5f3c52074217bf,/Dockerfile,# go for compiling bashbrew
133,3045e68dc6139f85d49aed221c5f3c52074217bf,/Dockerfile,# ssl for downloading files
134,3045e68dc6139f85d49aed221c5f3c52074217bf,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
135,3045e68dc6139f85d49aed221c5f3c52074217bf,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
136,3045e68dc6139f85d49aed221c5f3c52074217bf,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
137,0bb463ec5b4783a7eba507a9c22f0642858ddd95,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
138,0bb463ec5b4783a7eba507a9c22f0642858ddd95,/Dockerfile,# git for cloning source code
139,0bb463ec5b4783a7eba507a9c22f0642858ddd95,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
140,0bb463ec5b4783a7eba507a9c22f0642858ddd95,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
141,0bb463ec5b4783a7eba507a9c22f0642858ddd95,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
142,2cbe9e023f5a02354267690ab91afedac9dd52fd,/Dockerfile,"# add ""edge"" since Alpine 3.3 only has Go 1.5 and we need 1.6+"
143,2cbe9e023f5a02354267690ab91afedac9dd52fd,/Dockerfile,# bash for running scripts
144,2cbe9e023f5a02354267690ab91afedac9dd52fd,/Dockerfile,# go for compiling bashbrew
145,2cbe9e023f5a02354267690ab91afedac9dd52fd,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
146,2cbe9e023f5a02354267690ab91afedac9dd52fd,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
147,bb4910554273b4061c0408bde64600e3e0995aa2,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
148,bb4910554273b4061c0408bde64600e3e0995aa2,/Dockerfile,# git for cloning source code
149,bb4910554273b4061c0408bde64600e3e0995aa2,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
150,bb4910554273b4061c0408bde64600e3e0995aa2,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
151,bb4910554273b4061c0408bde64600e3e0995aa2,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
152,a9877bccaae99513ce8d685245e2e51dd8b1f085,/Dockerfile,"# FYI, this base image is built via test-pr.sh (from https://github.com/docker-library/bashbrew/tree/master/Dockerfile)"
153,a9877bccaae99513ce8d685245e2e51dd8b1f085,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
154,a9877bccaae99513ce8d685245e2e51dd8b1f085,/Dockerfile,# git for cloning source code
155,71bfbebbc45ace49ec52987b48e97878d558f7b7,/Dockerfile,# bash for running scripts
156,71bfbebbc45ace49ec52987b48e97878d558f7b7,/Dockerfile,# go for compiling bashbrew
157,71bfbebbc45ace49ec52987b48e97878d558f7b7,/Dockerfile,# ssl for downloading files
158,71bfbebbc45ace49ec52987b48e97878d558f7b7,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
159,71bfbebbc45ace49ec52987b48e97878d558f7b7,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
160,71bfbebbc45ace49ec52987b48e97878d558f7b7,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
161,1806604405924b505d0b2c58ba5cf8a7b02a2705,/Dockerfile,# bash for running scripts
162,1806604405924b505d0b2c58ba5cf8a7b02a2705,/Dockerfile,# go for compiling bashbrew
163,1806604405924b505d0b2c58ba5cf8a7b02a2705,/Dockerfile,# ssl for downloading files
164,1806604405924b505d0b2c58ba5cf8a7b02a2705,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
165,1806604405924b505d0b2c58ba5cf8a7b02a2705,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
166,1806604405924b505d0b2c58ba5cf8a7b02a2705,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
167,aaac922e92e103ced13b7bf087e0f7dea546af48,/Dockerfile,# bash for running scripts
168,aaac922e92e103ced13b7bf087e0f7dea546af48,/Dockerfile,# go for compiling bashbrew
169,aaac922e92e103ced13b7bf087e0f7dea546af48,/Dockerfile,# ssl for downloading files
170,aaac922e92e103ced13b7bf087e0f7dea546af48,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
171,aaac922e92e103ced13b7bf087e0f7dea546af48,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
172,aaac922e92e103ced13b7bf087e0f7dea546af48,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
173,de37719287bb5abf1d37eeebc9d3598cf9805316,/Dockerfile,# bash for running scripts
174,de37719287bb5abf1d37eeebc9d3598cf9805316,/Dockerfile,# go for compiling bashbrew
175,de37719287bb5abf1d37eeebc9d3598cf9805316,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
176,de37719287bb5abf1d37eeebc9d3598cf9805316,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
177,ee282fe6fbcf2981a153f8cdfba2633f1a9ded0a,/Dockerfile,# bash for running scripts
178,ee282fe6fbcf2981a153f8cdfba2633f1a9ded0a,/Dockerfile,# go for compiling bashbrew
179,ee282fe6fbcf2981a153f8cdfba2633f1a9ded0a,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
180,ee282fe6fbcf2981a153f8cdfba2633f1a9ded0a,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
181,6541e1ad7a8c755a42dc63efc1831487647b7f9e,/Dockerfile,"# FYI, this base image is built via test-pr.sh (from https://github.com/docker-library/bashbrew/tree/master/Dockerfile)"
182,6541e1ad7a8c755a42dc63efc1831487647b7f9e,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
183,6541e1ad7a8c755a42dc63efc1831487647b7f9e,/Dockerfile,# git for cloning source code
184,c676f91ad8cedf83062417a1d609abaea5e236c0,/Dockerfile,"# add ""edge"" since Alpine 3.3 only has Go 1.5 and we need 1.6+"
185,c676f91ad8cedf83062417a1d609abaea5e236c0,/Dockerfile,# bash for running scripts
186,c676f91ad8cedf83062417a1d609abaea5e236c0,/Dockerfile,# go for compiling bashbrew
187,c676f91ad8cedf83062417a1d609abaea5e236c0,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
188,c676f91ad8cedf83062417a1d609abaea5e236c0,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
189,84aa9ed158196e09a9e68f34d6a2a02ce43a0f7e,/bashbrew/put-multiarch/Dockerfile,# secure by default â™¥ (thanks to sri!)
190,84aa9ed158196e09a9e68f34d6a2a02ce43a0f7e,/bashbrew/put-multiarch/Dockerfile,"# TODO find a way to make --mirror-only / SSL work with backpan too :(
#RUN cpanm Digest::SHA Module::Signature
# TODO find a way to make --verify work with backpan as well :'(
#ENV PERL_CPANM_OPT $PERL_CPANM_OPT --verify"
191,84aa9ed158196e09a9e68f34d6a2a02ce43a0f7e,/bashbrew/put-multiarch/Dockerfile,"# reinstall cpanm itself, for good measure"
192,84aa9ed158196e09a9e68f34d6a2a02ce43a0f7e,/bashbrew/put-multiarch/Dockerfile,# the tests for IO::Socket::SSL like to hang... :(
193,84aa9ed158196e09a9e68f34d6a2a02ce43a0f7e,/bashbrew/put-multiarch/Dockerfile,# https://metacpan.org/pod/release/SRI/Mojolicious-7.94/lib/Mojo/IOLoop.pm#DESCRIPTION
194,84aa9ed158196e09a9e68f34d6a2a02ce43a0f7e,/bashbrew/put-multiarch/Dockerfile,# epoll (Linux)
195,18b84c17e4bf8e02f867866c5e4e0cbfb3e3432d,/Dockerfile,"# add ""edge"" since Alpine 3.3 only has Go 1.5 and we need 1.6+"
196,18b84c17e4bf8e02f867866c5e4e0cbfb3e3432d,/Dockerfile,# bash for running scripts
197,18b84c17e4bf8e02f867866c5e4e0cbfb3e3432d,/Dockerfile,# go for compiling bashbrew
198,18b84c17e4bf8e02f867866c5e4e0cbfb3e3432d,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
199,18b84c17e4bf8e02f867866c5e4e0cbfb3e3432d,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
200,bd2751bb7c2fe76faa313b17d9e447e897423369,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
201,bd2751bb7c2fe76faa313b17d9e447e897423369,/Dockerfile,# git for cloning source code
202,bd2751bb7c2fe76faa313b17d9e447e897423369,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
203,bd2751bb7c2fe76faa313b17d9e447e897423369,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
204,bd2751bb7c2fe76faa313b17d9e447e897423369,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
205,6abdb4661be57d681d780babd6b518fb08d2bf4c,/Dockerfile,# bash for running scripts
206,6abdb4661be57d681d780babd6b518fb08d2bf4c,/Dockerfile,# go for compiling bashbrew
207,6abdb4661be57d681d780babd6b518fb08d2bf4c,/Dockerfile,# ssl for downloading files
208,6abdb4661be57d681d780babd6b518fb08d2bf4c,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
209,6abdb4661be57d681d780babd6b518fb08d2bf4c,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
210,29876ea85b0c8801f91487834243c43be8b89011,/Dockerfile,# bash for running scripts
211,29876ea85b0c8801f91487834243c43be8b89011,/Dockerfile,# go for compiling bashbrew
212,29876ea85b0c8801f91487834243c43be8b89011,/Dockerfile,# ssl for downloading files
213,29876ea85b0c8801f91487834243c43be8b89011,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
214,29876ea85b0c8801f91487834243c43be8b89011,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
215,5b2244296d6c9ac57aa578fe70f41ea2e43229f4,/bashbrew/put-multiarch/Dockerfile,# secure by default â™¥ (thanks to sri!)
216,5b2244296d6c9ac57aa578fe70f41ea2e43229f4,/bashbrew/put-multiarch/Dockerfile,"# TODO find a way to make --mirror-only / SSL work with backpan too :(
#RUN cpanm Digest::SHA Module::Signature
# TODO find a way to make --verify work with backpan as well :'(
#ENV PERL_CPANM_OPT $PERL_CPANM_OPT --verify"
217,5b2244296d6c9ac57aa578fe70f41ea2e43229f4,/bashbrew/put-multiarch/Dockerfile,"# reinstall cpanm itself, for good measure"
218,5b2244296d6c9ac57aa578fe70f41ea2e43229f4,/bashbrew/put-multiarch/Dockerfile,# the tests for IO::Socket::SSL like to hang... :(
219,5b2244296d6c9ac57aa578fe70f41ea2e43229f4,/bashbrew/put-multiarch/Dockerfile,# https://metacpan.org/pod/release/SRI/Mojolicious-7.94/lib/Mojo/IOLoop.pm#DESCRIPTION
220,5b2244296d6c9ac57aa578fe70f41ea2e43229f4,/bashbrew/put-multiarch/Dockerfile,# epoll (Linux)
221,a92af5b121b78400c287bd086925b6b09ee0c7e2,/Dockerfile,"# add ""edge"" since Alpine 3.3 only has Go 1.5 and we need 1.6+"
222,a92af5b121b78400c287bd086925b6b09ee0c7e2,/Dockerfile,# bash for running scripts
223,a92af5b121b78400c287bd086925b6b09ee0c7e2,/Dockerfile,# go for compiling bashbrew
224,a92af5b121b78400c287bd086925b6b09ee0c7e2,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
225,a92af5b121b78400c287bd086925b6b09ee0c7e2,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
226,991468ce05efacdbb1f8e4db963870273f51f945,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
227,991468ce05efacdbb1f8e4db963870273f51f945,/Dockerfile,# git for cloning source code
228,991468ce05efacdbb1f8e4db963870273f51f945,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
229,991468ce05efacdbb1f8e4db963870273f51f945,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
230,991468ce05efacdbb1f8e4db963870273f51f945,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
231,c7f2287a24f0a890cee6eebb9d59130f1af2baf6,/Dockerfile,"# FYI, this base image is built via test-pr.sh (from https://github.com/docker-library/bashbrew/tree/master/Dockerfile)"
232,c7f2287a24f0a890cee6eebb9d59130f1af2baf6,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
233,c7f2287a24f0a890cee6eebb9d59130f1af2baf6,/Dockerfile,# git for cloning source code
234,f90d965f9b20e487f540758a8bfef163e18342a5,/Dockerfile,# bash for running scripts
235,f90d965f9b20e487f540758a8bfef163e18342a5,/Dockerfile,# go for compiling bashbrew
236,f90d965f9b20e487f540758a8bfef163e18342a5,/Dockerfile,# ssl for downloading files
237,f90d965f9b20e487f540758a8bfef163e18342a5,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
238,f90d965f9b20e487f540758a8bfef163e18342a5,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
239,2403c493abddcaadc49fd44f6d856baac76062f5,/Dockerfile,# bash for running scripts
240,2403c493abddcaadc49fd44f6d856baac76062f5,/Dockerfile,# go for compiling bashbrew
241,2403c493abddcaadc49fd44f6d856baac76062f5,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
242,2403c493abddcaadc49fd44f6d856baac76062f5,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
243,8a4216d21bb1adcc1b5bb6b4512d6a1ad2551a57,/Dockerfile,# bash for running scripts
244,8a4216d21bb1adcc1b5bb6b4512d6a1ad2551a57,/Dockerfile,# go for compiling bashbrew
245,8a4216d21bb1adcc1b5bb6b4512d6a1ad2551a57,/Dockerfile,# ssl for downloading files
246,8a4216d21bb1adcc1b5bb6b4512d6a1ad2551a57,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
247,8a4216d21bb1adcc1b5bb6b4512d6a1ad2551a57,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
248,24e5537ead1ee359199d2c443cff5478b55b9867,/bashbrew/put-multiarch/Dockerfile,# secure by default â™¥ (thanks to sri!)
249,24e5537ead1ee359199d2c443cff5478b55b9867,/bashbrew/put-multiarch/Dockerfile,"# TODO find a way to make --mirror-only / SSL work with backpan too :(
#RUN cpanm Digest::SHA Module::Signature
# TODO find a way to make --verify work with backpan as well :'(
#ENV PERL_CPANM_OPT $PERL_CPANM_OPT --verify"
250,24e5537ead1ee359199d2c443cff5478b55b9867,/bashbrew/put-multiarch/Dockerfile,"# reinstall cpanm itself, for good measure"
251,24e5537ead1ee359199d2c443cff5478b55b9867,/bashbrew/put-multiarch/Dockerfile,# the tests for IO::Socket::SSL like to hang... :(
252,24e5537ead1ee359199d2c443cff5478b55b9867,/bashbrew/put-multiarch/Dockerfile,# https://metacpan.org/pod/release/SRI/Mojolicious-7.94/lib/Mojo/IOLoop.pm#DESCRIPTION
253,24e5537ead1ee359199d2c443cff5478b55b9867,/bashbrew/put-multiarch/Dockerfile,# epoll (Linux)
254,26851a5944a2a699b9dfde69f064bf1c6c5ac9d3,/Dockerfile,# bash for running scripts
255,26851a5944a2a699b9dfde69f064bf1c6c5ac9d3,/Dockerfile,# go for compiling bashbrew
256,26851a5944a2a699b9dfde69f064bf1c6c5ac9d3,/Dockerfile,# ssl for downloading files
257,26851a5944a2a699b9dfde69f064bf1c6c5ac9d3,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
258,26851a5944a2a699b9dfde69f064bf1c6c5ac9d3,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
259,26851a5944a2a699b9dfde69f064bf1c6c5ac9d3,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
260,6218706d40f14facdc67f4638d6758921c0e75a6,/Dockerfile,# bash for running scripts
261,6218706d40f14facdc67f4638d6758921c0e75a6,/Dockerfile,# go for compiling bashbrew
262,6218706d40f14facdc67f4638d6758921c0e75a6,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
263,6218706d40f14facdc67f4638d6758921c0e75a6,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
264,0ed93af8aba95c626b93fc6eb0482e71f43bd9c9,/Dockerfile,# bash for running scripts
265,0ed93af8aba95c626b93fc6eb0482e71f43bd9c9,/Dockerfile,# go for compiling bashbrew
266,0ed93af8aba95c626b93fc6eb0482e71f43bd9c9,/Dockerfile,# ssl for downloading files
267,0ed93af8aba95c626b93fc6eb0482e71f43bd9c9,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
268,0ed93af8aba95c626b93fc6eb0482e71f43bd9c9,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
269,0ed93af8aba95c626b93fc6eb0482e71f43bd9c9,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
270,847f8cc19face7d44b3a8166fca85862abb6cf94,/Dockerfile,# bash for running scripts
271,847f8cc19face7d44b3a8166fca85862abb6cf94,/Dockerfile,# go for compiling bashbrew
272,847f8cc19face7d44b3a8166fca85862abb6cf94,/Dockerfile,# ssl for downloading files
273,847f8cc19face7d44b3a8166fca85862abb6cf94,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
274,847f8cc19face7d44b3a8166fca85862abb6cf94,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
275,847f8cc19face7d44b3a8166fca85862abb6cf94,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
276,5ea61be02a8018550ce5895365d8bc7531b0fa8c,/Dockerfile,# ssl for downloading files
277,5ea61be02a8018550ce5895365d8bc7531b0fa8c,/Dockerfile,# git for cloning source code
278,5ea61be02a8018550ce5895365d8bc7531b0fa8c,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
279,5ea61be02a8018550ce5895365d8bc7531b0fa8c,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
280,5ea61be02a8018550ce5895365d8bc7531b0fa8c,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
281,f14066a95ec4842c9fbe95576aa78dab892a43d4,/bashbrew/put-multiarch/Dockerfile,# secure by default â™¥ (thanks to sri!)
282,f14066a95ec4842c9fbe95576aa78dab892a43d4,/bashbrew/put-multiarch/Dockerfile,"# TODO find a way to make --mirror-only / SSL work with backpan too :(
#RUN cpanm Digest::SHA Module::Signature
# TODO find a way to make --verify work with backpan as well :'(
#ENV PERL_CPANM_OPT $PERL_CPANM_OPT --verify"
283,f14066a95ec4842c9fbe95576aa78dab892a43d4,/bashbrew/put-multiarch/Dockerfile,"# reinstall cpanm itself, for good measure"
284,f14066a95ec4842c9fbe95576aa78dab892a43d4,/bashbrew/put-multiarch/Dockerfile,# the tests for IO::Socket::SSL like to hang... :(
285,f14066a95ec4842c9fbe95576aa78dab892a43d4,/bashbrew/put-multiarch/Dockerfile,# https://metacpan.org/pod/release/SRI/Mojolicious-7.94/lib/Mojo/IOLoop.pm#DESCRIPTION
286,f14066a95ec4842c9fbe95576aa78dab892a43d4,/bashbrew/put-multiarch/Dockerfile,# epoll (Linux)
287,a74281499b773f827f415b7b6567669438e8c14f,/Dockerfile,# bash for running scripts
288,a74281499b773f827f415b7b6567669438e8c14f,/Dockerfile,# go for compiling bashbrew
289,a74281499b773f827f415b7b6567669438e8c14f,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
290,a74281499b773f827f415b7b6567669438e8c14f,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
291,7ed224bfffc04ce89a44c06907ebc50e2eb8d733,/bashbrew/put-multiarch/Dockerfile,# secure by default â™¥ (thanks to sri!)
292,7ed224bfffc04ce89a44c06907ebc50e2eb8d733,/bashbrew/put-multiarch/Dockerfile,"# TODO find a way to make --mirror-only / SSL work with backpan too :(
#RUN cpanm Digest::SHA Module::Signature
# TODO find a way to make --verify work with backpan as well :'(
#ENV PERL_CPANM_OPT $PERL_CPANM_OPT --verify"
293,7ed224bfffc04ce89a44c06907ebc50e2eb8d733,/bashbrew/put-multiarch/Dockerfile,"# reinstall cpanm itself, for good measure"
294,7ed224bfffc04ce89a44c06907ebc50e2eb8d733,/bashbrew/put-multiarch/Dockerfile,# the tests for IO::Socket::SSL like to hang... :(
295,7ed224bfffc04ce89a44c06907ebc50e2eb8d733,/bashbrew/put-multiarch/Dockerfile,# https://metacpan.org/pod/release/SRI/Mojolicious-7.94/lib/Mojo/IOLoop.pm#DESCRIPTION
296,7ed224bfffc04ce89a44c06907ebc50e2eb8d733,/bashbrew/put-multiarch/Dockerfile,# epoll (Linux)
297,05ab00823819c3dd5f0ef520d841d84ad5023893,/Dockerfile,"# FYI, this base image is built via test-pr.sh (from https://github.com/docker-library/bashbrew/tree/master/Dockerfile)"
298,05ab00823819c3dd5f0ef520d841d84ad5023893,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
299,05ab00823819c3dd5f0ef520d841d84ad5023893,/Dockerfile,# git for cloning source code
300,be02a6a45ab4bd2239b62e3d9c4df2535e342b94,/Dockerfile,"# add ""edge"" since Alpine 3.3 only has Go 1.5 and we need 1.6+"
301,be02a6a45ab4bd2239b62e3d9c4df2535e342b94,/Dockerfile,# bash for running scripts
302,be02a6a45ab4bd2239b62e3d9c4df2535e342b94,/Dockerfile,# go for compiling bashbrew
303,be02a6a45ab4bd2239b62e3d9c4df2535e342b94,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
304,be02a6a45ab4bd2239b62e3d9c4df2535e342b94,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
305,4bb10490c60bf8758465df23b2611573c2fc0925,/Dockerfile,"# FYI, this base image is built via test-pr.sh (from https://github.com/docker-library/bashbrew/tree/master/Dockerfile)"
306,4bb10490c60bf8758465df23b2611573c2fc0925,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
307,4bb10490c60bf8758465df23b2611573c2fc0925,/Dockerfile,# git for cloning source code
308,ea3a2be458884e57ad896247169e8d12a767b8a4,/Dockerfile,# bash for running scripts
309,ea3a2be458884e57ad896247169e8d12a767b8a4,/Dockerfile,# go for compiling bashbrew
310,ea3a2be458884e57ad896247169e8d12a767b8a4,/Dockerfile,# ssl for downloading files
311,ea3a2be458884e57ad896247169e8d12a767b8a4,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
312,ea3a2be458884e57ad896247169e8d12a767b8a4,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
313,ea3a2be458884e57ad896247169e8d12a767b8a4,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
314,e2f8dca186e4305b2208a182b8a059bf2eaf4ee7,/Dockerfile,# bash for running scripts
315,e2f8dca186e4305b2208a182b8a059bf2eaf4ee7,/Dockerfile,# go for compiling bashbrew
316,e2f8dca186e4305b2208a182b8a059bf2eaf4ee7,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
317,e2f8dca186e4305b2208a182b8a059bf2eaf4ee7,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
318,47b75a3bc1d3b5c04b8b02ddae76a613f1b19927,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
319,47b75a3bc1d3b5c04b8b02ddae76a613f1b19927,/Dockerfile,# git for cloning source code
320,47b75a3bc1d3b5c04b8b02ddae76a613f1b19927,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
321,47b75a3bc1d3b5c04b8b02ddae76a613f1b19927,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
322,47b75a3bc1d3b5c04b8b02ddae76a613f1b19927,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
323,a3510f47ec3eb7bd5b7d1e289188cc116cd68846,/Dockerfile,"# FYI, this base image is built via test-pr.sh (from https://github.com/docker-library/bashbrew/tree/master/Dockerfile)"
324,a3510f47ec3eb7bd5b7d1e289188cc116cd68846,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
325,a3510f47ec3eb7bd5b7d1e289188cc116cd68846,/Dockerfile,# git for cloning source code
326,46f5a674efb35904348a9a2b79d839880dd81642,/Dockerfile,# bash for running scripts
327,46f5a674efb35904348a9a2b79d839880dd81642,/Dockerfile,# go for compiling bashbrew
328,46f5a674efb35904348a9a2b79d839880dd81642,/Dockerfile,# ssl for downloading files
329,46f5a674efb35904348a9a2b79d839880dd81642,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
330,46f5a674efb35904348a9a2b79d839880dd81642,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
331,31d62561065a096c0062ee0a460929805f2da900,/Dockerfile,"# add ""edge"" since Alpine 3.3 only has Go 1.5 and we need 1.6+"
332,31d62561065a096c0062ee0a460929805f2da900,/Dockerfile,# bash for running scripts
333,31d62561065a096c0062ee0a460929805f2da900,/Dockerfile,# go for compiling bashbrew
334,5ff294f05bcc4a9e331f226697edb3c2e4249dde,/Dockerfile,# bash for running scripts
335,5ff294f05bcc4a9e331f226697edb3c2e4249dde,/Dockerfile,# go for compiling bashbrew
336,5ff294f05bcc4a9e331f226697edb3c2e4249dde,/Dockerfile,# ssl for downloading files
337,5ff294f05bcc4a9e331f226697edb3c2e4249dde,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
338,5ff294f05bcc4a9e331f226697edb3c2e4249dde,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
339,5ff294f05bcc4a9e331f226697edb3c2e4249dde,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
340,4132946bff988833ad4972649b43d0e595138dbf,/Dockerfile,# bash for running scripts
341,4132946bff988833ad4972649b43d0e595138dbf,/Dockerfile,# go for compiling bashbrew
342,4132946bff988833ad4972649b43d0e595138dbf,/Dockerfile,# ssl for downloading files
343,4132946bff988833ad4972649b43d0e595138dbf,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
344,4132946bff988833ad4972649b43d0e595138dbf,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
345,5c4b300526cee89b052f9df2a7b5459c76e2bb60,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
346,5c4b300526cee89b052f9df2a7b5459c76e2bb60,/Dockerfile,# git for cloning source code
347,5c4b300526cee89b052f9df2a7b5459c76e2bb60,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
348,5c4b300526cee89b052f9df2a7b5459c76e2bb60,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
349,5c4b300526cee89b052f9df2a7b5459c76e2bb60,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
350,fe68da8fa57b7f9d518b6a4d58cb24496ce7d4e0,/Dockerfile,# bash for running scripts
351,fe68da8fa57b7f9d518b6a4d58cb24496ce7d4e0,/Dockerfile,# go for compiling bashbrew
352,fe68da8fa57b7f9d518b6a4d58cb24496ce7d4e0,/Dockerfile,# ssl for downloading files
353,fe68da8fa57b7f9d518b6a4d58cb24496ce7d4e0,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
354,fe68da8fa57b7f9d518b6a4d58cb24496ce7d4e0,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
355,fe68da8fa57b7f9d518b6a4d58cb24496ce7d4e0,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
356,c4448b4b264605c5f116029d004659a9b1b3d482,/Dockerfile,# bash for running scripts
357,c4448b4b264605c5f116029d004659a9b1b3d482,/Dockerfile,# go for compiling bashbrew
358,c4448b4b264605c5f116029d004659a9b1b3d482,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
359,c4448b4b264605c5f116029d004659a9b1b3d482,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
360,3b661c2c61964667e6c8f4ea243e5e832d1fc2c7,/Dockerfile,"# add ""edge"" since Alpine 3.3 only has Go 1.5 and we need 1.6+"
361,3b661c2c61964667e6c8f4ea243e5e832d1fc2c7,/Dockerfile,# bash for running scripts
362,3b661c2c61964667e6c8f4ea243e5e832d1fc2c7,/Dockerfile,# go for compiling bashbrew
363,37c376fe37fa47a8635cd2fcd5b93c2dc891b374,/Dockerfile,# bash for running scripts
364,37c376fe37fa47a8635cd2fcd5b93c2dc891b374,/Dockerfile,# go for compiling bashbrew
365,37c376fe37fa47a8635cd2fcd5b93c2dc891b374,/Dockerfile,# ssl for downloading files
366,37c376fe37fa47a8635cd2fcd5b93c2dc891b374,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
367,37c376fe37fa47a8635cd2fcd5b93c2dc891b374,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
368,37c376fe37fa47a8635cd2fcd5b93c2dc891b374,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
369,960b1e5d559424fb3c5012956a646749caabd890,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
370,960b1e5d559424fb3c5012956a646749caabd890,/Dockerfile,# git for cloning source code
371,960b1e5d559424fb3c5012956a646749caabd890,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
372,960b1e5d559424fb3c5012956a646749caabd890,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
373,960b1e5d559424fb3c5012956a646749caabd890,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
374,869f76becc9e1115098aecefcf349d256963cbc6,/Dockerfile,# bash for running scripts
375,869f76becc9e1115098aecefcf349d256963cbc6,/Dockerfile,# go for compiling bashbrew
376,869f76becc9e1115098aecefcf349d256963cbc6,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
377,869f76becc9e1115098aecefcf349d256963cbc6,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
378,52496cce1db37c05921b72cb95dbff469000af71,/Dockerfile,"# FYI, this base image is built via test-pr.sh (from https://github.com/docker-library/bashbrew/tree/master/Dockerfile)"
379,52496cce1db37c05921b72cb95dbff469000af71,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
380,52496cce1db37c05921b72cb95dbff469000af71,/Dockerfile,# git for cloning source code
381,277f4afd964c9af839b18124b6705dec5b4d44d7,/Dockerfile,"# FYI, this base image is built via test-pr.sh (from https://github.com/docker-library/bashbrew/tree/master/Dockerfile)"
382,277f4afd964c9af839b18124b6705dec5b4d44d7,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
383,277f4afd964c9af839b18124b6705dec5b4d44d7,/Dockerfile,# git for cloning source code
384,e62606d7aad6bbd63af6b6b9039bd8432c5233c4,/bashbrew/put-multiarch/Dockerfile,# secure by default â™¥ (thanks to sri!)
385,e62606d7aad6bbd63af6b6b9039bd8432c5233c4,/bashbrew/put-multiarch/Dockerfile,"# TODO find a way to make --mirror-only / SSL work with backpan too :(
#RUN cpanm Digest::SHA Module::Signature
# TODO find a way to make --verify work with backpan as well :'(
#ENV PERL_CPANM_OPT $PERL_CPANM_OPT --verify"
386,e62606d7aad6bbd63af6b6b9039bd8432c5233c4,/bashbrew/put-multiarch/Dockerfile,"# reinstall cpanm itself, for good measure"
387,e62606d7aad6bbd63af6b6b9039bd8432c5233c4,/bashbrew/put-multiarch/Dockerfile,# the tests for IO::Socket::SSL like to hang... :(
388,e62606d7aad6bbd63af6b6b9039bd8432c5233c4,/bashbrew/put-multiarch/Dockerfile,# https://metacpan.org/pod/release/SRI/Mojolicious-7.94/lib/Mojo/IOLoop.pm#DESCRIPTION
389,e62606d7aad6bbd63af6b6b9039bd8432c5233c4,/bashbrew/put-multiarch/Dockerfile,# epoll (Linux)
390,7e525b84084103e348ee1597a6ac5087070bbfbb,/Dockerfile,# bash for running scripts
391,7e525b84084103e348ee1597a6ac5087070bbfbb,/Dockerfile,# go for compiling bashbrew
392,7e525b84084103e348ee1597a6ac5087070bbfbb,/Dockerfile,# ssl for downloading files
393,7e525b84084103e348ee1597a6ac5087070bbfbb,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
394,7e525b84084103e348ee1597a6ac5087070bbfbb,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
395,7e525b84084103e348ee1597a6ac5087070bbfbb,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
396,9c3495a370917a077de3e942697c3984effe43c4,/Dockerfile,# bash for running scripts
397,9c3495a370917a077de3e942697c3984effe43c4,/Dockerfile,# go for compiling bashbrew
398,9c3495a370917a077de3e942697c3984effe43c4,/Dockerfile,# ssl for downloading files
399,9c3495a370917a077de3e942697c3984effe43c4,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
400,9c3495a370917a077de3e942697c3984effe43c4,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
401,9c3495a370917a077de3e942697c3984effe43c4,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
402,af4bbe8220c881ff580a1a901769897d929eb8e3,/Dockerfile,# bash for running scripts
403,af4bbe8220c881ff580a1a901769897d929eb8e3,/Dockerfile,# go for compiling bashbrew
404,af4bbe8220c881ff580a1a901769897d929eb8e3,/Dockerfile,# ssl for downloading files
405,af4bbe8220c881ff580a1a901769897d929eb8e3,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
406,af4bbe8220c881ff580a1a901769897d929eb8e3,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
407,a36656216b59db7d48e50798e8c7fbf45146a6e4,/Dockerfile,# bash for running scripts
408,a36656216b59db7d48e50798e8c7fbf45146a6e4,/Dockerfile,# go for compiling bashbrew
409,a36656216b59db7d48e50798e8c7fbf45146a6e4,/Dockerfile,# ssl for downloading files
410,a36656216b59db7d48e50798e8c7fbf45146a6e4,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
411,a36656216b59db7d48e50798e8c7fbf45146a6e4,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
412,a36656216b59db7d48e50798e8c7fbf45146a6e4,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
413,d112ff985f5a8a174b42e4d309ab0731529b7779,/Dockerfile,"# FYI, this base image is built via test-pr.sh (from https://github.com/docker-library/bashbrew/tree/master/Dockerfile)"
414,d112ff985f5a8a174b42e4d309ab0731529b7779,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
415,d112ff985f5a8a174b42e4d309ab0731529b7779,/Dockerfile,# git for cloning source code
416,2dae4b705e93f18d68349197033fc5f12530132b,/Dockerfile,# bash for running scripts
417,2dae4b705e93f18d68349197033fc5f12530132b,/Dockerfile,# go for compiling bashbrew
418,2dae4b705e93f18d68349197033fc5f12530132b,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
419,2dae4b705e93f18d68349197033fc5f12530132b,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
420,4f570c39942c28513edb0b9157c937bca9509056,/Dockerfile,# bash for running scripts
421,4f570c39942c28513edb0b9157c937bca9509056,/Dockerfile,# go for compiling bashbrew
422,4f570c39942c28513edb0b9157c937bca9509056,/Dockerfile,# ssl for downloading files
423,4f570c39942c28513edb0b9157c937bca9509056,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
424,4f570c39942c28513edb0b9157c937bca9509056,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
425,0896154b8b1389888d1c2f416d3fbbea4c002272,/Dockerfile,"# FYI, this base image is built via test-pr.sh (from https://github.com/docker-library/bashbrew/tree/master/Dockerfile)"
426,0896154b8b1389888d1c2f416d3fbbea4c002272,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
427,0896154b8b1389888d1c2f416d3fbbea4c002272,/Dockerfile,# git for cloning source code
428,15a67f42cd7322f0b1f8faf8f9c94ff6faef3f4e,/Dockerfile,# bash for running scripts
429,15a67f42cd7322f0b1f8faf8f9c94ff6faef3f4e,/Dockerfile,# go for compiling bashbrew
430,15a67f42cd7322f0b1f8faf8f9c94ff6faef3f4e,/Dockerfile,# ssl for downloading files
431,15a67f42cd7322f0b1f8faf8f9c94ff6faef3f4e,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
432,15a67f42cd7322f0b1f8faf8f9c94ff6faef3f4e,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
433,15a67f42cd7322f0b1f8faf8f9c94ff6faef3f4e,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
434,4e22bdf4104ee406d12fc8036dcacb5c596a090b,/Dockerfile,# bash for running scripts
435,4e22bdf4104ee406d12fc8036dcacb5c596a090b,/Dockerfile,# go for compiling bashbrew
436,4e22bdf4104ee406d12fc8036dcacb5c596a090b,/Dockerfile,# ssl for downloading files
437,4e22bdf4104ee406d12fc8036dcacb5c596a090b,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
438,4e22bdf4104ee406d12fc8036dcacb5c596a090b,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
439,4e22bdf4104ee406d12fc8036dcacb5c596a090b,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
440,ec6fafb6b3db45f112babe34fade06be17e2a7cd,/Dockerfile,# bash for running scripts
441,ec6fafb6b3db45f112babe34fade06be17e2a7cd,/Dockerfile,# go for compiling bashbrew
442,ec6fafb6b3db45f112babe34fade06be17e2a7cd,/Dockerfile,# ssl for downloading files
443,ec6fafb6b3db45f112babe34fade06be17e2a7cd,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
444,ec6fafb6b3db45f112babe34fade06be17e2a7cd,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
445,ec6fafb6b3db45f112babe34fade06be17e2a7cd,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
446,a14aad8054aa1c5e41fbd367211c2a9b7c95a910,/Dockerfile,# bash for running scripts
447,a14aad8054aa1c5e41fbd367211c2a9b7c95a910,/Dockerfile,# go for compiling bashbrew
448,a14aad8054aa1c5e41fbd367211c2a9b7c95a910,/Dockerfile,# ssl for downloading files
449,a14aad8054aa1c5e41fbd367211c2a9b7c95a910,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
450,a14aad8054aa1c5e41fbd367211c2a9b7c95a910,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
451,a14aad8054aa1c5e41fbd367211c2a9b7c95a910,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
452,3d2dc0f05796d9046cc06cd0e5f3398d16549909,/Dockerfile,"# FYI, this base image is built via test-pr.sh (from https://github.com/docker-library/bashbrew/tree/master/Dockerfile)"
453,3d2dc0f05796d9046cc06cd0e5f3398d16549909,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
454,3d2dc0f05796d9046cc06cd0e5f3398d16549909,/Dockerfile,# git for cloning source code
455,70e5264cc822a279a8c79fc73e9cc7aac4f43979,/Dockerfile,# bash for running scripts
456,70e5264cc822a279a8c79fc73e9cc7aac4f43979,/Dockerfile,# go for compiling bashbrew
457,70e5264cc822a279a8c79fc73e9cc7aac4f43979,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
458,70e5264cc822a279a8c79fc73e9cc7aac4f43979,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
459,99d23932e2fea0605f2e509729f2284af32285c4,/Dockerfile,# bash for running scripts
460,99d23932e2fea0605f2e509729f2284af32285c4,/Dockerfile,# go for compiling bashbrew
461,99d23932e2fea0605f2e509729f2284af32285c4,/Dockerfile,# ssl for downloading files
462,99d23932e2fea0605f2e509729f2284af32285c4,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
463,99d23932e2fea0605f2e509729f2284af32285c4,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
464,99d23932e2fea0605f2e509729f2284af32285c4,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
465,f84b6122fb04d17ca4f9373147c25abe563e183a,/Dockerfile,"# FYI, this base image is built via test-pr.sh (from https://github.com/docker-library/bashbrew/tree/master/Dockerfile)"
466,f84b6122fb04d17ca4f9373147c25abe563e183a,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
467,f84b6122fb04d17ca4f9373147c25abe563e183a,/Dockerfile,# git for cloning source code
468,4f6af8252b5ffcea2e6d93b2b67968f667241380,/bashbrew/put-multiarch/Dockerfile,# secure by default â™¥ (thanks to sri!)
469,4f6af8252b5ffcea2e6d93b2b67968f667241380,/bashbrew/put-multiarch/Dockerfile,"# TODO find a way to make --mirror-only / SSL work with backpan too :(
#RUN cpanm Digest::SHA Module::Signature
# TODO find a way to make --verify work with backpan as well :'(
#ENV PERL_CPANM_OPT $PERL_CPANM_OPT --verify"
470,4f6af8252b5ffcea2e6d93b2b67968f667241380,/bashbrew/put-multiarch/Dockerfile,"# reinstall cpanm itself, for good measure"
471,4f6af8252b5ffcea2e6d93b2b67968f667241380,/bashbrew/put-multiarch/Dockerfile,# the tests for IO::Socket::SSL like to hang... :(
472,4f6af8252b5ffcea2e6d93b2b67968f667241380,/bashbrew/put-multiarch/Dockerfile,# https://metacpan.org/pod/release/SRI/Mojolicious-7.94/lib/Mojo/IOLoop.pm#DESCRIPTION
473,4f6af8252b5ffcea2e6d93b2b67968f667241380,/bashbrew/put-multiarch/Dockerfile,# epoll (Linux)
474,3818af091af51923ccc0a276de74519d4f04faeb,/Dockerfile,# bash for running scripts
475,3818af091af51923ccc0a276de74519d4f04faeb,/Dockerfile,# go for compiling bashbrew
476,3818af091af51923ccc0a276de74519d4f04faeb,/Dockerfile,# ssl for downloading files
477,3818af091af51923ccc0a276de74519d4f04faeb,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
478,3818af091af51923ccc0a276de74519d4f04faeb,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
479,ac4c700468020f72df5d1178a64d792b58cedf05,/Dockerfile,"# FYI, this base image is built via test-pr.sh (from https://github.com/docker-library/bashbrew/tree/master/Dockerfile)"
480,ac4c700468020f72df5d1178a64d792b58cedf05,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
481,ac4c700468020f72df5d1178a64d792b58cedf05,/Dockerfile,# git for cloning source code
482,cdbe153c9c7f89bc50d0cba81e75b050baa0e879,/Dockerfile,# bash for running scripts
483,cdbe153c9c7f89bc50d0cba81e75b050baa0e879,/Dockerfile,# go for compiling bashbrew
484,cdbe153c9c7f89bc50d0cba81e75b050baa0e879,/Dockerfile,# ssl for downloading files
485,cdbe153c9c7f89bc50d0cba81e75b050baa0e879,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
486,cdbe153c9c7f89bc50d0cba81e75b050baa0e879,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
487,1e0268b04ba3a226a355c6aff4354ae6a7897dcb,/Dockerfile,# bash for running scripts
488,1e0268b04ba3a226a355c6aff4354ae6a7897dcb,/Dockerfile,# go for compiling bashbrew
489,1e0268b04ba3a226a355c6aff4354ae6a7897dcb,/Dockerfile,# ssl for downloading files
490,1e0268b04ba3a226a355c6aff4354ae6a7897dcb,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
491,1e0268b04ba3a226a355c6aff4354ae6a7897dcb,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
492,1e0268b04ba3a226a355c6aff4354ae6a7897dcb,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
493,d0152cbc44c0c5ee82aceb378c4f7ee497385f05,/Dockerfile,# bash for running scripts
494,d0152cbc44c0c5ee82aceb378c4f7ee497385f05,/Dockerfile,# go for compiling bashbrew
495,d0152cbc44c0c5ee82aceb378c4f7ee497385f05,/Dockerfile,# ssl for downloading files
496,d0152cbc44c0c5ee82aceb378c4f7ee497385f05,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
497,d0152cbc44c0c5ee82aceb378c4f7ee497385f05,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
498,d0152cbc44c0c5ee82aceb378c4f7ee497385f05,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
499,7593b2001472ef2c27d44fbb871d8335453ec68b,/Dockerfile,# bash for running scripts
500,7593b2001472ef2c27d44fbb871d8335453ec68b,/Dockerfile,# go for compiling bashbrew
501,7593b2001472ef2c27d44fbb871d8335453ec68b,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
502,7593b2001472ef2c27d44fbb871d8335453ec68b,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
503,d441c7811f565870e461fea4ceefd1a8db79f960,/Dockerfile,"# add ""edge"" since Alpine 3.3 only has Go 1.5 and we need 1.6+"
504,d441c7811f565870e461fea4ceefd1a8db79f960,/Dockerfile,# bash for running scripts
505,d441c7811f565870e461fea4ceefd1a8db79f960,/Dockerfile,# go for compiling bashbrew
506,d441c7811f565870e461fea4ceefd1a8db79f960,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
507,d441c7811f565870e461fea4ceefd1a8db79f960,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
508,e9a3c6d607573ef4a8eaa938cdb4b20ab907d16f,/Dockerfile,"# FYI, this base image is built via test-pr.sh (from https://github.com/docker-library/bashbrew/tree/master/Dockerfile)"
509,e9a3c6d607573ef4a8eaa938cdb4b20ab907d16f,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
510,e9a3c6d607573ef4a8eaa938cdb4b20ab907d16f,/Dockerfile,# git for cloning source code
511,e2656b4923ce5cafbb743bf70c1df39ad182df21,/Dockerfile,# bash for running scripts
512,e2656b4923ce5cafbb743bf70c1df39ad182df21,/Dockerfile,# go for compiling bashbrew
513,e2656b4923ce5cafbb743bf70c1df39ad182df21,/Dockerfile,# ssl for downloading files
514,e2656b4923ce5cafbb743bf70c1df39ad182df21,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
515,e2656b4923ce5cafbb743bf70c1df39ad182df21,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
516,e2656b4923ce5cafbb743bf70c1df39ad182df21,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
517,4cee763acf93ac0a0d5d2004a70f39264b8f8f29,/Dockerfile,"# FYI, this base image is built via test-pr.sh (from https://github.com/docker-library/bashbrew/tree/master/Dockerfile)"
518,4cee763acf93ac0a0d5d2004a70f39264b8f8f29,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
519,4cee763acf93ac0a0d5d2004a70f39264b8f8f29,/Dockerfile,# git for cloning source code
520,8127fc48edab905a6216b4f16fbd646e61037465,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
521,8127fc48edab905a6216b4f16fbd646e61037465,/Dockerfile,# git for cloning source code
522,8127fc48edab905a6216b4f16fbd646e61037465,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
523,8127fc48edab905a6216b4f16fbd646e61037465,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
524,8127fc48edab905a6216b4f16fbd646e61037465,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
525,b7c2f530858bfa7669883ca71fc92947157b52d5,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
526,b7c2f530858bfa7669883ca71fc92947157b52d5,/Dockerfile,# git for cloning source code
527,b7c2f530858bfa7669883ca71fc92947157b52d5,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
528,b7c2f530858bfa7669883ca71fc92947157b52d5,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
529,b7c2f530858bfa7669883ca71fc92947157b52d5,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
530,884322089815e97f8bc124e64183a766fa97fbeb,/Dockerfile,# bash for running scripts
531,884322089815e97f8bc124e64183a766fa97fbeb,/Dockerfile,# go for compiling bashbrew
532,884322089815e97f8bc124e64183a766fa97fbeb,/Dockerfile,# ssl for downloading files
533,884322089815e97f8bc124e64183a766fa97fbeb,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
534,884322089815e97f8bc124e64183a766fa97fbeb,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
535,884322089815e97f8bc124e64183a766fa97fbeb,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
536,76a3585e9f1bbddbd0cc956fb1b4ecbd662d34f3,/Dockerfile,# bash for running scripts
537,76a3585e9f1bbddbd0cc956fb1b4ecbd662d34f3,/Dockerfile,# go for compiling bashbrew
538,76a3585e9f1bbddbd0cc956fb1b4ecbd662d34f3,/Dockerfile,# ssl for downloading files
539,76a3585e9f1bbddbd0cc956fb1b4ecbd662d34f3,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
540,76a3585e9f1bbddbd0cc956fb1b4ecbd662d34f3,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
541,a230ff4d6fdca5f9ba22d6e7c4ab509e0ec399f6,/Dockerfile,# bash for running scripts
542,a230ff4d6fdca5f9ba22d6e7c4ab509e0ec399f6,/Dockerfile,# go for compiling bashbrew
543,a230ff4d6fdca5f9ba22d6e7c4ab509e0ec399f6,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
544,a230ff4d6fdca5f9ba22d6e7c4ab509e0ec399f6,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
545,dcb73c8ddfda2950e2a7b6b840efb361c70719e7,/Dockerfile,# bash for running scripts
546,dcb73c8ddfda2950e2a7b6b840efb361c70719e7,/Dockerfile,# go for compiling bashbrew
547,dcb73c8ddfda2950e2a7b6b840efb361c70719e7,/Dockerfile,# ssl for downloading files
548,dcb73c8ddfda2950e2a7b6b840efb361c70719e7,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
549,dcb73c8ddfda2950e2a7b6b840efb361c70719e7,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
550,dcb73c8ddfda2950e2a7b6b840efb361c70719e7,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
551,47f4539aa7d32766558203c1230c4ffdf7d824e5,/Dockerfile,# bash for running scripts
552,47f4539aa7d32766558203c1230c4ffdf7d824e5,/Dockerfile,# go for compiling bashbrew
553,47f4539aa7d32766558203c1230c4ffdf7d824e5,/Dockerfile,# ssl for downloading files
554,47f4539aa7d32766558203c1230c4ffdf7d824e5,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
555,47f4539aa7d32766558203c1230c4ffdf7d824e5,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
556,47f4539aa7d32766558203c1230c4ffdf7d824e5,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
557,366c6692efdfaa1b1a095998f264494c6fe4367e,/Dockerfile,"# FYI, this base image is built via test-pr.sh (from https://github.com/docker-library/bashbrew/tree/master/Dockerfile)"
558,366c6692efdfaa1b1a095998f264494c6fe4367e,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
559,366c6692efdfaa1b1a095998f264494c6fe4367e,/Dockerfile,# git for cloning source code
560,c90bab0d2128cd0cefc7dfd083cc27ca10ea4de8,/bashbrew/put-multiarch/Dockerfile,# secure by default â™¥ (thanks to sri!)
561,c90bab0d2128cd0cefc7dfd083cc27ca10ea4de8,/bashbrew/put-multiarch/Dockerfile,"# TODO find a way to make --mirror-only / SSL work with backpan too :(
#RUN cpanm Digest::SHA Module::Signature
# TODO find a way to make --verify work with backpan as well :'(
#ENV PERL_CPANM_OPT $PERL_CPANM_OPT --verify"
562,c90bab0d2128cd0cefc7dfd083cc27ca10ea4de8,/bashbrew/put-multiarch/Dockerfile,"# reinstall cpanm itself, for good measure"
563,c90bab0d2128cd0cefc7dfd083cc27ca10ea4de8,/bashbrew/put-multiarch/Dockerfile,# the tests for IO::Socket::SSL like to hang... :(
564,c90bab0d2128cd0cefc7dfd083cc27ca10ea4de8,/bashbrew/put-multiarch/Dockerfile,# https://metacpan.org/pod/release/SRI/Mojolicious-7.94/lib/Mojo/IOLoop.pm#DESCRIPTION
565,c90bab0d2128cd0cefc7dfd083cc27ca10ea4de8,/bashbrew/put-multiarch/Dockerfile,# epoll (Linux)
566,f41864dc698eadbfa17e5cf12e318eb3e939dac2,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
567,f41864dc698eadbfa17e5cf12e318eb3e939dac2,/Dockerfile,# git for cloning source code
568,f41864dc698eadbfa17e5cf12e318eb3e939dac2,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
569,f41864dc698eadbfa17e5cf12e318eb3e939dac2,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
570,f41864dc698eadbfa17e5cf12e318eb3e939dac2,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
571,bc08fadb023d6d7d207de52d301080a2e0513d4b,/Dockerfile,# bash for running scripts
572,bc08fadb023d6d7d207de52d301080a2e0513d4b,/Dockerfile,# go for compiling bashbrew
573,bc08fadb023d6d7d207de52d301080a2e0513d4b,/Dockerfile,# ssl for downloading files
574,bc08fadb023d6d7d207de52d301080a2e0513d4b,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
575,bc08fadb023d6d7d207de52d301080a2e0513d4b,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
576,bc08fadb023d6d7d207de52d301080a2e0513d4b,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
577,dcb8ba956c193dc3396c27abfc5ad2bf3fc3760b,/Dockerfile,# bash for running scripts
578,dcb8ba956c193dc3396c27abfc5ad2bf3fc3760b,/Dockerfile,# go for compiling bashbrew
579,dcb8ba956c193dc3396c27abfc5ad2bf3fc3760b,/Dockerfile,# ssl for downloading files
580,dcb8ba956c193dc3396c27abfc5ad2bf3fc3760b,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
581,dcb8ba956c193dc3396c27abfc5ad2bf3fc3760b,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
582,46232742675883c57c74ad0c428802651e34f47b,/Dockerfile,# bash for running scripts
583,46232742675883c57c74ad0c428802651e34f47b,/Dockerfile,# go for compiling bashbrew
584,46232742675883c57c74ad0c428802651e34f47b,/Dockerfile,# ssl for downloading files
585,46232742675883c57c74ad0c428802651e34f47b,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
586,46232742675883c57c74ad0c428802651e34f47b,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
587,46232742675883c57c74ad0c428802651e34f47b,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
588,b5a0d7dcf6e1fb3987ac5337b22ca2f9f7af1ead,/bashbrew/put-multiarch/Dockerfile,# secure by default â™¥ (thanks to sri!)
589,b5a0d7dcf6e1fb3987ac5337b22ca2f9f7af1ead,/bashbrew/put-multiarch/Dockerfile,"# TODO find a way to make --mirror-only / SSL work with backpan too :(
#RUN cpanm Digest::SHA Module::Signature
# TODO find a way to make --verify work with backpan as well :'(
#ENV PERL_CPANM_OPT $PERL_CPANM_OPT --verify"
590,b5a0d7dcf6e1fb3987ac5337b22ca2f9f7af1ead,/bashbrew/put-multiarch/Dockerfile,"# reinstall cpanm itself, for good measure"
591,b5a0d7dcf6e1fb3987ac5337b22ca2f9f7af1ead,/bashbrew/put-multiarch/Dockerfile,# the tests for IO::Socket::SSL like to hang... :(
592,b5a0d7dcf6e1fb3987ac5337b22ca2f9f7af1ead,/bashbrew/put-multiarch/Dockerfile,# https://metacpan.org/pod/release/SRI/Mojolicious-7.94/lib/Mojo/IOLoop.pm#DESCRIPTION
593,b5a0d7dcf6e1fb3987ac5337b22ca2f9f7af1ead,/bashbrew/put-multiarch/Dockerfile,# epoll (Linux)
594,e3557197e85f650c75fc42ccacd1bf61a752dd67,/Dockerfile,# bash for running scripts
595,e3557197e85f650c75fc42ccacd1bf61a752dd67,/Dockerfile,# go for compiling bashbrew
596,e3557197e85f650c75fc42ccacd1bf61a752dd67,/Dockerfile,# ssl for downloading files
597,e3557197e85f650c75fc42ccacd1bf61a752dd67,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
598,e3557197e85f650c75fc42ccacd1bf61a752dd67,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
599,e8bc2ce280fbaa45bd4c3aac9ce34aad81d9af9c,/Dockerfile,"# FYI, this base image is built via test-pr.sh (from https://github.com/docker-library/bashbrew/tree/master/Dockerfile)"
600,e8bc2ce280fbaa45bd4c3aac9ce34aad81d9af9c,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
601,e8bc2ce280fbaa45bd4c3aac9ce34aad81d9af9c,/Dockerfile,# git for cloning source code
602,95fa3a8011f942c024942abe2a78a03e43f87c5b,/Dockerfile,# bash for running scripts
603,95fa3a8011f942c024942abe2a78a03e43f87c5b,/Dockerfile,# go for compiling bashbrew
604,95fa3a8011f942c024942abe2a78a03e43f87c5b,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
605,95fa3a8011f942c024942abe2a78a03e43f87c5b,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
606,c8983a4b154380e2d9756531cf33bd66c8a9c82d,/Dockerfile,# bash for running scripts
607,c8983a4b154380e2d9756531cf33bd66c8a9c82d,/Dockerfile,# go for compiling bashbrew
608,c8983a4b154380e2d9756531cf33bd66c8a9c82d,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
609,c8983a4b154380e2d9756531cf33bd66c8a9c82d,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
610,0c69eaa52ede5cd5a88c9367f39a30e8dda3de9e,/Dockerfile,"# add ""edge"" since Alpine 3.3 only has Go 1.5 and we need 1.6+"
611,0c69eaa52ede5cd5a88c9367f39a30e8dda3de9e,/Dockerfile,# bash for running scripts
612,0c69eaa52ede5cd5a88c9367f39a30e8dda3de9e,/Dockerfile,# go for compiling bashbrew
613,0c69eaa52ede5cd5a88c9367f39a30e8dda3de9e,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
614,0c69eaa52ede5cd5a88c9367f39a30e8dda3de9e,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
615,c2163904e11b34018f0789f10da6f20a1d342f69,/Dockerfile,# bash for running scripts
616,c2163904e11b34018f0789f10da6f20a1d342f69,/Dockerfile,# go for compiling bashbrew
617,c2163904e11b34018f0789f10da6f20a1d342f69,/Dockerfile,# ssl for downloading files
618,c2163904e11b34018f0789f10da6f20a1d342f69,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
619,c2163904e11b34018f0789f10da6f20a1d342f69,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
620,59a6d46728d7e2e3cf0f0028255ec19aca06b941,/Dockerfile,# bash for running scripts
621,59a6d46728d7e2e3cf0f0028255ec19aca06b941,/Dockerfile,# go for compiling bashbrew
622,59a6d46728d7e2e3cf0f0028255ec19aca06b941,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
623,59a6d46728d7e2e3cf0f0028255ec19aca06b941,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
624,971a89f9a71fe6d2aa1027dbb47379993abf3aea,/Dockerfile,# bash for running scripts
625,971a89f9a71fe6d2aa1027dbb47379993abf3aea,/Dockerfile,# go for compiling bashbrew
626,971a89f9a71fe6d2aa1027dbb47379993abf3aea,/Dockerfile,# ssl for downloading files
627,971a89f9a71fe6d2aa1027dbb47379993abf3aea,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
628,971a89f9a71fe6d2aa1027dbb47379993abf3aea,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
629,971a89f9a71fe6d2aa1027dbb47379993abf3aea,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
630,adef26d02bd969c9198e7859dc7f5a0aa2e83679,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
631,adef26d02bd969c9198e7859dc7f5a0aa2e83679,/Dockerfile,# git for cloning source code
632,adef26d02bd969c9198e7859dc7f5a0aa2e83679,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
633,adef26d02bd969c9198e7859dc7f5a0aa2e83679,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
634,adef26d02bd969c9198e7859dc7f5a0aa2e83679,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
635,dfc5512318d1a5359e554e7b98ca14219c647c27,/Dockerfile,"# add ""edge"" since Alpine 3.3 only has Go 1.5 and we need 1.6+"
636,9ab1fa3f4bb311a2ea490f63906e19146990e808,/Dockerfile,# bash for running scripts
637,9ab1fa3f4bb311a2ea490f63906e19146990e808,/Dockerfile,# go for compiling bashbrew
638,9ab1fa3f4bb311a2ea490f63906e19146990e808,/Dockerfile,# ssl for downloading files
639,9ab1fa3f4bb311a2ea490f63906e19146990e808,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
640,9ab1fa3f4bb311a2ea490f63906e19146990e808,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
641,86269f8022ec558ba552ceb4c37669775535aafc,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
642,86269f8022ec558ba552ceb4c37669775535aafc,/Dockerfile,# git for cloning source code
643,86269f8022ec558ba552ceb4c37669775535aafc,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
644,86269f8022ec558ba552ceb4c37669775535aafc,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
645,86269f8022ec558ba552ceb4c37669775535aafc,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
646,058fbda764e8273f2bfbeda928e2be84450c04a2,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
647,058fbda764e8273f2bfbeda928e2be84450c04a2,/Dockerfile,# git for cloning source code
648,058fbda764e8273f2bfbeda928e2be84450c04a2,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
649,058fbda764e8273f2bfbeda928e2be84450c04a2,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
650,058fbda764e8273f2bfbeda928e2be84450c04a2,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
651,a271d1ee928d802fbd3247a868c4e684b26db7f7,/Dockerfile,# bash for running scripts
652,a271d1ee928d802fbd3247a868c4e684b26db7f7,/Dockerfile,# go for compiling bashbrew
653,a271d1ee928d802fbd3247a868c4e684b26db7f7,/Dockerfile,# ssl for downloading files
654,a271d1ee928d802fbd3247a868c4e684b26db7f7,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
655,a271d1ee928d802fbd3247a868c4e684b26db7f7,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
656,a271d1ee928d802fbd3247a868c4e684b26db7f7,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
657,d6abc873d6070c8d98340d1764f1f4f8f2086a32,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
658,d6abc873d6070c8d98340d1764f1f4f8f2086a32,/Dockerfile,# git for cloning source code
659,d6abc873d6070c8d98340d1764f1f4f8f2086a32,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
660,d6abc873d6070c8d98340d1764f1f4f8f2086a32,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
661,d6abc873d6070c8d98340d1764f1f4f8f2086a32,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
662,9a8746dd4dd9aad26d16e1ae072d036e7c44ac27,/Dockerfile,"# FYI, this base image is built via test-pr.sh (from https://github.com/docker-library/bashbrew/tree/master/Dockerfile)"
663,9a8746dd4dd9aad26d16e1ae072d036e7c44ac27,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
664,9a8746dd4dd9aad26d16e1ae072d036e7c44ac27,/Dockerfile,# git for cloning source code
665,5ee11ec33bd142a5a0bef7e3c96d2981f1fb7973,/Dockerfile,# bash for running scripts
666,5ee11ec33bd142a5a0bef7e3c96d2981f1fb7973,/Dockerfile,# go for compiling bashbrew
667,5ee11ec33bd142a5a0bef7e3c96d2981f1fb7973,/Dockerfile,# ssl for downloading files
668,5ee11ec33bd142a5a0bef7e3c96d2981f1fb7973,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
669,5ee11ec33bd142a5a0bef7e3c96d2981f1fb7973,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
670,f75494d766d7907ca221c0bec33842d5544b2894,/Dockerfile,"# add ""edge"" since Alpine 3.3 only has Go 1.5 and we need 1.6+"
671,f75494d766d7907ca221c0bec33842d5544b2894,/Dockerfile,# bash for running scripts
672,f75494d766d7907ca221c0bec33842d5544b2894,/Dockerfile,# go for compiling bashbrew
673,f75494d766d7907ca221c0bec33842d5544b2894,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
674,f75494d766d7907ca221c0bec33842d5544b2894,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
675,2fc2529ddcd0c682fae7cde509864c5408b0adbf,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
676,2fc2529ddcd0c682fae7cde509864c5408b0adbf,/Dockerfile,# git for cloning source code
677,2fc2529ddcd0c682fae7cde509864c5408b0adbf,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
678,2fc2529ddcd0c682fae7cde509864c5408b0adbf,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
679,2fc2529ddcd0c682fae7cde509864c5408b0adbf,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
680,47d50af6e2cd2128b4f1c2ddcc1228d8d7724db6,/Dockerfile,# bash for running scripts
681,47d50af6e2cd2128b4f1c2ddcc1228d8d7724db6,/Dockerfile,# go for compiling bashbrew
682,47d50af6e2cd2128b4f1c2ddcc1228d8d7724db6,/Dockerfile,# ssl for downloading files
683,47d50af6e2cd2128b4f1c2ddcc1228d8d7724db6,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
684,47d50af6e2cd2128b4f1c2ddcc1228d8d7724db6,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
685,47d50af6e2cd2128b4f1c2ddcc1228d8d7724db6,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
686,be5de4049e3b8c06d024b55a65ab666e07cf1768,/Dockerfile,"# FYI, this base image is built via test-pr.sh (from https://github.com/docker-library/bashbrew/tree/master/Dockerfile)"
687,be5de4049e3b8c06d024b55a65ab666e07cf1768,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
688,be5de4049e3b8c06d024b55a65ab666e07cf1768,/Dockerfile,# git for cloning source code
689,c06200ac9d9db1a72f7e631ad17998a1f2d31b66,/Dockerfile,# bash for running scripts
690,c06200ac9d9db1a72f7e631ad17998a1f2d31b66,/Dockerfile,# go for compiling bashbrew
691,c06200ac9d9db1a72f7e631ad17998a1f2d31b66,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
692,c06200ac9d9db1a72f7e631ad17998a1f2d31b66,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
693,38a906242d522b7bae3c04e4790336eb3dffa1d8,/Dockerfile,# bash for running scripts
694,38a906242d522b7bae3c04e4790336eb3dffa1d8,/Dockerfile,# go for compiling bashbrew
695,38a906242d522b7bae3c04e4790336eb3dffa1d8,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
696,38a906242d522b7bae3c04e4790336eb3dffa1d8,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
697,7131e86fe2079b660830c0bde13dbfe849227624,/Dockerfile,# bash for running scripts
698,7131e86fe2079b660830c0bde13dbfe849227624,/Dockerfile,# go for compiling bashbrew
699,7131e86fe2079b660830c0bde13dbfe849227624,/Dockerfile,# ssl for downloading files
700,7131e86fe2079b660830c0bde13dbfe849227624,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
701,7131e86fe2079b660830c0bde13dbfe849227624,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
702,06ae9865ffc41958d28241b42bf2882f4477b7c3,/bashbrew/put-multiarch/Dockerfile,# secure by default â™¥ (thanks to sri!)
703,06ae9865ffc41958d28241b42bf2882f4477b7c3,/bashbrew/put-multiarch/Dockerfile,"# TODO find a way to make --mirror-only / SSL work with backpan too :(
#RUN cpanm Digest::SHA Module::Signature
# TODO find a way to make --verify work with backpan as well :'(
#ENV PERL_CPANM_OPT $PERL_CPANM_OPT --verify"
704,06ae9865ffc41958d28241b42bf2882f4477b7c3,/bashbrew/put-multiarch/Dockerfile,"# reinstall cpanm itself, for good measure"
705,06ae9865ffc41958d28241b42bf2882f4477b7c3,/bashbrew/put-multiarch/Dockerfile,# the tests for IO::Socket::SSL like to hang... :(
706,06ae9865ffc41958d28241b42bf2882f4477b7c3,/bashbrew/put-multiarch/Dockerfile,# https://metacpan.org/pod/release/SRI/Mojolicious-7.94/lib/Mojo/IOLoop.pm#DESCRIPTION
707,06ae9865ffc41958d28241b42bf2882f4477b7c3,/bashbrew/put-multiarch/Dockerfile,# epoll (Linux)
708,e169536311bd522d5ce5602e8da714d8ea3ad18a,/Dockerfile,# bash for running scripts
709,e169536311bd522d5ce5602e8da714d8ea3ad18a,/Dockerfile,# go for compiling bashbrew
710,e169536311bd522d5ce5602e8da714d8ea3ad18a,/Dockerfile,# ssl for downloading files
711,e169536311bd522d5ce5602e8da714d8ea3ad18a,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
712,e169536311bd522d5ce5602e8da714d8ea3ad18a,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
713,e169536311bd522d5ce5602e8da714d8ea3ad18a,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
714,b7b79d5793921f54f4346064c06439f55ec82c30,/Dockerfile,# ssl for downloading files
715,b7b79d5793921f54f4346064c06439f55ec82c30,/Dockerfile,# git for cloning source code
716,b7b79d5793921f54f4346064c06439f55ec82c30,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
717,b7b79d5793921f54f4346064c06439f55ec82c30,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
718,b7b79d5793921f54f4346064c06439f55ec82c30,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
719,3c47b4446ba44230c6bf13f7ee11dcb5ffec19bb,/Dockerfile,# bash for running scripts
720,3c47b4446ba44230c6bf13f7ee11dcb5ffec19bb,/Dockerfile,# go for compiling bashbrew
721,3c47b4446ba44230c6bf13f7ee11dcb5ffec19bb,/Dockerfile,# ssl for downloading files
722,3c47b4446ba44230c6bf13f7ee11dcb5ffec19bb,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
723,3c47b4446ba44230c6bf13f7ee11dcb5ffec19bb,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
724,3c47b4446ba44230c6bf13f7ee11dcb5ffec19bb,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
725,bf1469d26ac71471891428e6fe6fbeae41d99386,/Dockerfile,# bash for running scripts
726,bf1469d26ac71471891428e6fe6fbeae41d99386,/Dockerfile,# go for compiling bashbrew
727,bf1469d26ac71471891428e6fe6fbeae41d99386,/Dockerfile,# ssl for downloading files
728,bf1469d26ac71471891428e6fe6fbeae41d99386,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
729,bf1469d26ac71471891428e6fe6fbeae41d99386,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
730,bf1469d26ac71471891428e6fe6fbeae41d99386,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
731,796e92d83d114ce1e06a259e28dbe5abd5ca91b3,/bashbrew/put-multiarch/Dockerfile,# secure by default â™¥ (thanks to sri!)
732,796e92d83d114ce1e06a259e28dbe5abd5ca91b3,/bashbrew/put-multiarch/Dockerfile,"# TODO find a way to make --mirror-only / SSL work with backpan too :(
#RUN cpanm Digest::SHA Module::Signature
# TODO find a way to make --verify work with backpan as well :'(
#ENV PERL_CPANM_OPT $PERL_CPANM_OPT --verify"
733,796e92d83d114ce1e06a259e28dbe5abd5ca91b3,/bashbrew/put-multiarch/Dockerfile,"# reinstall cpanm itself, for good measure"
734,796e92d83d114ce1e06a259e28dbe5abd5ca91b3,/bashbrew/put-multiarch/Dockerfile,# the tests for IO::Socket::SSL like to hang... :(
735,796e92d83d114ce1e06a259e28dbe5abd5ca91b3,/bashbrew/put-multiarch/Dockerfile,# https://metacpan.org/pod/release/SRI/Mojolicious-7.94/lib/Mojo/IOLoop.pm#DESCRIPTION
736,796e92d83d114ce1e06a259e28dbe5abd5ca91b3,/bashbrew/put-multiarch/Dockerfile,# epoll (Linux)
737,cf9e55c51bface2b503389c8ec0556d3711c7028,/bashbrew/put-multiarch/Dockerfile,# secure by default â™¥ (thanks to sri!)
738,cf9e55c51bface2b503389c8ec0556d3711c7028,/bashbrew/put-multiarch/Dockerfile,"# TODO find a way to make --mirror-only / SSL work with backpan too :(
#RUN cpanm Digest::SHA Module::Signature
# TODO find a way to make --verify work with backpan as well :'(
#ENV PERL_CPANM_OPT $PERL_CPANM_OPT --verify"
739,cf9e55c51bface2b503389c8ec0556d3711c7028,/bashbrew/put-multiarch/Dockerfile,"# reinstall cpanm itself, for good measure"
740,cf9e55c51bface2b503389c8ec0556d3711c7028,/bashbrew/put-multiarch/Dockerfile,# the tests for IO::Socket::SSL like to hang... :(
741,cf9e55c51bface2b503389c8ec0556d3711c7028,/bashbrew/put-multiarch/Dockerfile,# https://metacpan.org/pod/release/SRI/Mojolicious-7.94/lib/Mojo/IOLoop.pm#DESCRIPTION
742,cf9e55c51bface2b503389c8ec0556d3711c7028,/bashbrew/put-multiarch/Dockerfile,# epoll (Linux)
743,993a2274c3da7e07c65c4eec63c133a70720b258,/bashbrew/put-multiarch/Dockerfile,# secure by default â™¥ (thanks to sri!)
744,993a2274c3da7e07c65c4eec63c133a70720b258,/bashbrew/put-multiarch/Dockerfile,"# TODO find a way to make --mirror-only / SSL work with backpan too :(
#RUN cpanm Digest::SHA Module::Signature
# TODO find a way to make --verify work with backpan as well :'(
#ENV PERL_CPANM_OPT $PERL_CPANM_OPT --verify"
745,993a2274c3da7e07c65c4eec63c133a70720b258,/bashbrew/put-multiarch/Dockerfile,"# reinstall cpanm itself, for good measure"
746,993a2274c3da7e07c65c4eec63c133a70720b258,/bashbrew/put-multiarch/Dockerfile,# the tests for IO::Socket::SSL like to hang... :(
747,993a2274c3da7e07c65c4eec63c133a70720b258,/bashbrew/put-multiarch/Dockerfile,# https://metacpan.org/pod/release/SRI/Mojolicious-7.94/lib/Mojo/IOLoop.pm#DESCRIPTION
748,993a2274c3da7e07c65c4eec63c133a70720b258,/bashbrew/put-multiarch/Dockerfile,# epoll (Linux)
749,913735abfd10128d42182449b477afcae6f2c7f7,/Dockerfile,"# add ""edge"" since Alpine 3.3 only has Go 1.5 and we need 1.6+"
750,913735abfd10128d42182449b477afcae6f2c7f7,/Dockerfile,# bash for running scripts
751,913735abfd10128d42182449b477afcae6f2c7f7,/Dockerfile,# go for compiling bashbrew
752,8ae896e5b861ea34fb0f4455bfecbc5bbc1cf8a4,/Dockerfile,"# FYI, this base image is built via test-pr.sh (from https://github.com/docker-library/bashbrew/tree/master/Dockerfile)"
753,8ae896e5b861ea34fb0f4455bfecbc5bbc1cf8a4,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
754,8ae896e5b861ea34fb0f4455bfecbc5bbc1cf8a4,/Dockerfile,# git for cloning source code
755,bc1a0ca4ffbf126aa823dc86d4bb4cd02477e940,/bashbrew/put-multiarch/Dockerfile,# secure by default â™¥ (thanks to sri!)
756,bc1a0ca4ffbf126aa823dc86d4bb4cd02477e940,/bashbrew/put-multiarch/Dockerfile,"# TODO find a way to make --mirror-only / SSL work with backpan too :(
#RUN cpanm Digest::SHA Module::Signature
# TODO find a way to make --verify work with backpan as well :'(
#ENV PERL_CPANM_OPT $PERL_CPANM_OPT --verify"
757,bc1a0ca4ffbf126aa823dc86d4bb4cd02477e940,/bashbrew/put-multiarch/Dockerfile,"# reinstall cpanm itself, for good measure"
758,bc1a0ca4ffbf126aa823dc86d4bb4cd02477e940,/bashbrew/put-multiarch/Dockerfile,# the tests for IO::Socket::SSL like to hang... :(
759,bc1a0ca4ffbf126aa823dc86d4bb4cd02477e940,/bashbrew/put-multiarch/Dockerfile,# https://metacpan.org/pod/release/SRI/Mojolicious-7.94/lib/Mojo/IOLoop.pm#DESCRIPTION
760,bc1a0ca4ffbf126aa823dc86d4bb4cd02477e940,/bashbrew/put-multiarch/Dockerfile,# epoll (Linux)
761,e1851bdaf299f4fee95242476a5a9cbdec7e0c7c,/Dockerfile,# bash for running scripts
762,e1851bdaf299f4fee95242476a5a9cbdec7e0c7c,/Dockerfile,# go for compiling bashbrew
763,e1851bdaf299f4fee95242476a5a9cbdec7e0c7c,/Dockerfile,# ssl for downloading files
764,e1851bdaf299f4fee95242476a5a9cbdec7e0c7c,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
765,e1851bdaf299f4fee95242476a5a9cbdec7e0c7c,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
766,49b7b8ef428bfc1de4aaff7985b93bd301d67e60,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
767,49b7b8ef428bfc1de4aaff7985b93bd301d67e60,/Dockerfile,# git for cloning source code
768,49b7b8ef428bfc1de4aaff7985b93bd301d67e60,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
769,49b7b8ef428bfc1de4aaff7985b93bd301d67e60,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
770,49b7b8ef428bfc1de4aaff7985b93bd301d67e60,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
771,783209a23ee1376243adce91be93f09662daf57c,/Dockerfile,"# FYI, this base image is built via test-pr.sh (from https://github.com/docker-library/bashbrew/tree/master/Dockerfile)"
772,783209a23ee1376243adce91be93f09662daf57c,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
773,783209a23ee1376243adce91be93f09662daf57c,/Dockerfile,# git for cloning source code
774,fc7f5ff17986df5842d16ba1c615277ece7ff2f4,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
775,fc7f5ff17986df5842d16ba1c615277ece7ff2f4,/Dockerfile,# git for cloning source code
776,fc7f5ff17986df5842d16ba1c615277ece7ff2f4,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
777,fc7f5ff17986df5842d16ba1c615277ece7ff2f4,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
778,fc7f5ff17986df5842d16ba1c615277ece7ff2f4,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
779,f7f75a068597101a468024120242854532055639,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
780,f7f75a068597101a468024120242854532055639,/Dockerfile,# git for cloning source code
781,f7f75a068597101a468024120242854532055639,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
782,f7f75a068597101a468024120242854532055639,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
783,f7f75a068597101a468024120242854532055639,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
784,9c312b6827cb96e1110b4caf7133a4755ad43c69,/Dockerfile,# bash for running scripts
785,9c312b6827cb96e1110b4caf7133a4755ad43c69,/Dockerfile,# go for compiling bashbrew
786,9c312b6827cb96e1110b4caf7133a4755ad43c69,/Dockerfile,# ssl for downloading files
787,9c312b6827cb96e1110b4caf7133a4755ad43c69,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
788,9c312b6827cb96e1110b4caf7133a4755ad43c69,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
789,9c312b6827cb96e1110b4caf7133a4755ad43c69,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
790,f058fa714659faedd5199bb3b236e74e39e379cf,/Dockerfile,"# FYI, this base image is built via test-pr.sh (from https://github.com/docker-library/bashbrew/tree/master/Dockerfile)"
791,f058fa714659faedd5199bb3b236e74e39e379cf,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
792,f058fa714659faedd5199bb3b236e74e39e379cf,/Dockerfile,# git for cloning source code
793,fdcd929b96e524f55148a91b74148f56b8f78d6b,/Dockerfile,"# FYI, this base image is built via test-pr.sh (from https://github.com/docker-library/bashbrew/tree/master/Dockerfile)"
794,fdcd929b96e524f55148a91b74148f56b8f78d6b,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
795,fdcd929b96e524f55148a91b74148f56b8f78d6b,/Dockerfile,# git for cloning source code
796,9a971e780df783afc59c1917f7f2171518fbdcff,/Dockerfile,# bash for running scripts
797,9a971e780df783afc59c1917f7f2171518fbdcff,/Dockerfile,# go for compiling bashbrew
798,9a971e780df783afc59c1917f7f2171518fbdcff,/Dockerfile,# ssl for downloading files
799,9a971e780df783afc59c1917f7f2171518fbdcff,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
800,9a971e780df783afc59c1917f7f2171518fbdcff,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
801,9a971e780df783afc59c1917f7f2171518fbdcff,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
802,a02dbf6e093e5e55b1b234e350032230eacc1b85,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
803,a02dbf6e093e5e55b1b234e350032230eacc1b85,/Dockerfile,# git for cloning source code
804,a02dbf6e093e5e55b1b234e350032230eacc1b85,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
805,a02dbf6e093e5e55b1b234e350032230eacc1b85,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
806,a02dbf6e093e5e55b1b234e350032230eacc1b85,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
807,365ddab17da911947d154bc1a81fe8c3d3177e94,/Dockerfile,# bash for running scripts
808,365ddab17da911947d154bc1a81fe8c3d3177e94,/Dockerfile,# go for compiling bashbrew
809,365ddab17da911947d154bc1a81fe8c3d3177e94,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
810,365ddab17da911947d154bc1a81fe8c3d3177e94,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
811,2040c37689c040286b0a957d4d22e04577e8ba55,/Dockerfile,# bash for running scripts
812,2040c37689c040286b0a957d4d22e04577e8ba55,/Dockerfile,# go for compiling bashbrew
813,2040c37689c040286b0a957d4d22e04577e8ba55,/Dockerfile,# ssl for downloading files
814,2040c37689c040286b0a957d4d22e04577e8ba55,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
815,2040c37689c040286b0a957d4d22e04577e8ba55,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
816,2040c37689c040286b0a957d4d22e04577e8ba55,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
817,db02fc39966004cb5396678cc83d84717e87dd0d,/bashbrew/put-multiarch/Dockerfile,# secure by default â™¥ (thanks to sri!)
818,db02fc39966004cb5396678cc83d84717e87dd0d,/bashbrew/put-multiarch/Dockerfile,"# TODO find a way to make --mirror-only / SSL work with backpan too :(
#RUN cpanm Digest::SHA Module::Signature
# TODO find a way to make --verify work with backpan as well :'(
#ENV PERL_CPANM_OPT $PERL_CPANM_OPT --verify"
819,db02fc39966004cb5396678cc83d84717e87dd0d,/bashbrew/put-multiarch/Dockerfile,"# reinstall cpanm itself, for good measure"
820,db02fc39966004cb5396678cc83d84717e87dd0d,/bashbrew/put-multiarch/Dockerfile,# the tests for IO::Socket::SSL like to hang... :(
821,db02fc39966004cb5396678cc83d84717e87dd0d,/bashbrew/put-multiarch/Dockerfile,# https://metacpan.org/pod/release/SRI/Mojolicious-7.94/lib/Mojo/IOLoop.pm#DESCRIPTION
822,db02fc39966004cb5396678cc83d84717e87dd0d,/bashbrew/put-multiarch/Dockerfile,# epoll (Linux)
823,e2d01f188733681b164a5242669927a36957e67a,/Dockerfile,# bash for running scripts
824,e2d01f188733681b164a5242669927a36957e67a,/Dockerfile,# go for compiling bashbrew
825,e2d01f188733681b164a5242669927a36957e67a,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
826,e2d01f188733681b164a5242669927a36957e67a,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
827,d781031efacb54704e3d0eac95ad845bde594da9,/Dockerfile,# bash for running scripts
828,d781031efacb54704e3d0eac95ad845bde594da9,/Dockerfile,# go for compiling bashbrew
829,d781031efacb54704e3d0eac95ad845bde594da9,/Dockerfile,# ssl for downloading files
830,d781031efacb54704e3d0eac95ad845bde594da9,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
831,d781031efacb54704e3d0eac95ad845bde594da9,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
832,ceb1c5fb9de5f3955473479745e5b8a8a3a7afea,/Dockerfile,# bash for running scripts
833,ceb1c5fb9de5f3955473479745e5b8a8a3a7afea,/Dockerfile,# go for compiling bashbrew
834,ceb1c5fb9de5f3955473479745e5b8a8a3a7afea,/Dockerfile,# ssl for downloading files
835,ceb1c5fb9de5f3955473479745e5b8a8a3a7afea,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
836,ceb1c5fb9de5f3955473479745e5b8a8a3a7afea,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
837,ceb1c5fb9de5f3955473479745e5b8a8a3a7afea,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
838,c7c9c1d12bfadf10b62119bab2103940fa185757,/Dockerfile,"# add ""edge"" since Alpine 3.3 only has Go 1.5 and we need 1.6+"
839,c7c9c1d12bfadf10b62119bab2103940fa185757,/Dockerfile,# bash for running scripts
840,c7c9c1d12bfadf10b62119bab2103940fa185757,/Dockerfile,# go for compiling bashbrew
841,c7c9c1d12bfadf10b62119bab2103940fa185757,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
842,c7c9c1d12bfadf10b62119bab2103940fa185757,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
843,872b4f8597f6f9b3cc16401b82d0722af2fd8472,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
844,872b4f8597f6f9b3cc16401b82d0722af2fd8472,/Dockerfile,# git for cloning source code
845,872b4f8597f6f9b3cc16401b82d0722af2fd8472,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
846,872b4f8597f6f9b3cc16401b82d0722af2fd8472,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
847,872b4f8597f6f9b3cc16401b82d0722af2fd8472,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
848,ce89f4b215069c57ad83e128f117b6499f381d2e,/Dockerfile,# bash for running scripts
849,ce89f4b215069c57ad83e128f117b6499f381d2e,/Dockerfile,# go for compiling bashbrew
850,ce89f4b215069c57ad83e128f117b6499f381d2e,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
851,ce89f4b215069c57ad83e128f117b6499f381d2e,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
852,caa77d44ae0eb21b0963821d6ea0999d5e61bd32,/Dockerfile,# bash for running scripts
853,caa77d44ae0eb21b0963821d6ea0999d5e61bd32,/Dockerfile,# go for compiling bashbrew
854,caa77d44ae0eb21b0963821d6ea0999d5e61bd32,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
855,caa77d44ae0eb21b0963821d6ea0999d5e61bd32,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
856,94be5e56728badee4ffa2d5a0aa75b19ae7389bd,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
857,94be5e56728badee4ffa2d5a0aa75b19ae7389bd,/Dockerfile,# git for cloning source code
858,94be5e56728badee4ffa2d5a0aa75b19ae7389bd,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
859,94be5e56728badee4ffa2d5a0aa75b19ae7389bd,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
860,94be5e56728badee4ffa2d5a0aa75b19ae7389bd,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
861,3b512a89a9719efa190d5938ea3ca4ca5291d68c,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
862,3b512a89a9719efa190d5938ea3ca4ca5291d68c,/Dockerfile,# git for cloning source code
863,3b512a89a9719efa190d5938ea3ca4ca5291d68c,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
864,3b512a89a9719efa190d5938ea3ca4ca5291d68c,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
865,3b512a89a9719efa190d5938ea3ca4ca5291d68c,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
866,9d40942ab5c3c85aa7c92ef5200119feb583f6ea,/Dockerfile,# bash for running scripts
867,9d40942ab5c3c85aa7c92ef5200119feb583f6ea,/Dockerfile,# go for compiling bashbrew
868,9d40942ab5c3c85aa7c92ef5200119feb583f6ea,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
869,9d40942ab5c3c85aa7c92ef5200119feb583f6ea,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
870,75ac01833126621780bd8d4195913bce01aa7f90,/Dockerfile,"# FYI, this base image is built via test-pr.sh (from https://github.com/docker-library/bashbrew/tree/master/Dockerfile)"
871,75ac01833126621780bd8d4195913bce01aa7f90,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
872,75ac01833126621780bd8d4195913bce01aa7f90,/Dockerfile,# git for cloning source code
873,b7f908fb2be9402977c2ccda096babb57a8d7f3b,/Dockerfile,"# add ""edge"" since Alpine 3.3 only has Go 1.5 and we need 1.6+"
874,b7f908fb2be9402977c2ccda096babb57a8d7f3b,/Dockerfile,# bash for running scripts
875,b7f908fb2be9402977c2ccda096babb57a8d7f3b,/Dockerfile,# go for compiling bashbrew
876,b7f908fb2be9402977c2ccda096babb57a8d7f3b,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
877,b7f908fb2be9402977c2ccda096babb57a8d7f3b,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
878,600ce63a49e621beb6a2ea603980017084af0fa6,/Dockerfile,"# add ""edge"" since Alpine 3.3 only has Go 1.5 and we need 1.6+"
879,600ce63a49e621beb6a2ea603980017084af0fa6,/Dockerfile,# bash for running scripts
880,600ce63a49e621beb6a2ea603980017084af0fa6,/Dockerfile,# go for compiling bashbrew
881,600ce63a49e621beb6a2ea603980017084af0fa6,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
882,600ce63a49e621beb6a2ea603980017084af0fa6,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
883,0c84df3d5f2184eef242bcdff5160bc18298678f,/Dockerfile,"# FYI, this base image is built via test-pr.sh (from https://github.com/docker-library/bashbrew/tree/master/Dockerfile)"
884,0c84df3d5f2184eef242bcdff5160bc18298678f,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
885,0c84df3d5f2184eef242bcdff5160bc18298678f,/Dockerfile,# git for cloning source code
886,31ed46ad49ca6d9cf354973c53c1419bafa2e139,/Dockerfile,# bash for running scripts
887,31ed46ad49ca6d9cf354973c53c1419bafa2e139,/Dockerfile,# go for compiling bashbrew
888,31ed46ad49ca6d9cf354973c53c1419bafa2e139,/Dockerfile,# ssl for downloading files
889,31ed46ad49ca6d9cf354973c53c1419bafa2e139,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
890,31ed46ad49ca6d9cf354973c53c1419bafa2e139,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
891,2777316102324dec09dee0fe4dbb2a0488b113fa,/Dockerfile,# bash for running scripts
892,2777316102324dec09dee0fe4dbb2a0488b113fa,/Dockerfile,# go for compiling bashbrew
893,2777316102324dec09dee0fe4dbb2a0488b113fa,/Dockerfile,# ssl for downloading files
894,2777316102324dec09dee0fe4dbb2a0488b113fa,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
895,2777316102324dec09dee0fe4dbb2a0488b113fa,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
896,2777316102324dec09dee0fe4dbb2a0488b113fa,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
897,1c5a8dc01ba07a8a5c1a869cd58652cdd56b6770,/Dockerfile,# bash for running scripts
898,1c5a8dc01ba07a8a5c1a869cd58652cdd56b6770,/Dockerfile,# go for compiling bashbrew
899,1c5a8dc01ba07a8a5c1a869cd58652cdd56b6770,/Dockerfile,# ssl for downloading files
900,1c5a8dc01ba07a8a5c1a869cd58652cdd56b6770,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
901,1c5a8dc01ba07a8a5c1a869cd58652cdd56b6770,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
902,1c5a8dc01ba07a8a5c1a869cd58652cdd56b6770,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
903,09dfca3beb327878c9247b088aa64e9504cc590a,/Dockerfile,# bash for running scripts
904,09dfca3beb327878c9247b088aa64e9504cc590a,/Dockerfile,# go for compiling bashbrew
905,09dfca3beb327878c9247b088aa64e9504cc590a,/Dockerfile,# ssl for downloading files
906,09dfca3beb327878c9247b088aa64e9504cc590a,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
907,09dfca3beb327878c9247b088aa64e9504cc590a,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
908,09dfca3beb327878c9247b088aa64e9504cc590a,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
909,4191ce6b8cfb7349027295991f937c5732ec3e72,/Dockerfile,"# add ""edge"" since Alpine 3.3 only has Go 1.5 and we need 1.6+"
910,4191ce6b8cfb7349027295991f937c5732ec3e72,/Dockerfile,# bash for running scripts
911,4191ce6b8cfb7349027295991f937c5732ec3e72,/Dockerfile,# go for compiling bashbrew
912,4191ce6b8cfb7349027295991f937c5732ec3e72,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
913,4191ce6b8cfb7349027295991f937c5732ec3e72,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
914,3c73200e90e86e2ad5d1d61f8704b0a227f24fbc,/Dockerfile,# bash for running scripts
915,3c73200e90e86e2ad5d1d61f8704b0a227f24fbc,/Dockerfile,# go for compiling bashbrew
916,3c73200e90e86e2ad5d1d61f8704b0a227f24fbc,/Dockerfile,# ssl for downloading files
917,3c73200e90e86e2ad5d1d61f8704b0a227f24fbc,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
918,3c73200e90e86e2ad5d1d61f8704b0a227f24fbc,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
919,3c73200e90e86e2ad5d1d61f8704b0a227f24fbc,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
920,bdc498cd7a143a34b3ac6c788e2e43af8ef90179,/Dockerfile,# bash for running scripts
921,bdc498cd7a143a34b3ac6c788e2e43af8ef90179,/Dockerfile,# go for compiling bashbrew
922,bdc498cd7a143a34b3ac6c788e2e43af8ef90179,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
923,bdc498cd7a143a34b3ac6c788e2e43af8ef90179,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
924,33cad77216029f801b4f3eeafdd217300fae14c7,/Dockerfile,"# FYI, this base image is built via test-pr.sh (from https://github.com/docker-library/bashbrew/tree/master/Dockerfile)"
925,33cad77216029f801b4f3eeafdd217300fae14c7,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
926,33cad77216029f801b4f3eeafdd217300fae14c7,/Dockerfile,# git for cloning source code
927,8c089e5dc062a20ead1d101d890b2352e0537bae,/Dockerfile,# bash for running scripts
928,8c089e5dc062a20ead1d101d890b2352e0537bae,/Dockerfile,# go for compiling bashbrew
929,8c089e5dc062a20ead1d101d890b2352e0537bae,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
930,8c089e5dc062a20ead1d101d890b2352e0537bae,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
931,ec4fc262806bd96a3b419f47e8b97fd802284a28,/Dockerfile,# bash for running scripts
932,ec4fc262806bd96a3b419f47e8b97fd802284a28,/Dockerfile,# go for compiling bashbrew
933,ec4fc262806bd96a3b419f47e8b97fd802284a28,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
934,ec4fc262806bd96a3b419f47e8b97fd802284a28,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
935,ab4396f527eb0e1f9646c85de908c7431345065e,/bashbrew/put-multiarch/Dockerfile,# secure by default â™¥ (thanks to sri!)
936,ab4396f527eb0e1f9646c85de908c7431345065e,/bashbrew/put-multiarch/Dockerfile,"# TODO find a way to make --mirror-only / SSL work with backpan too :(
#RUN cpanm Digest::SHA Module::Signature
# TODO find a way to make --verify work with backpan as well :'(
#ENV PERL_CPANM_OPT $PERL_CPANM_OPT --verify"
937,ab4396f527eb0e1f9646c85de908c7431345065e,/bashbrew/put-multiarch/Dockerfile,"# reinstall cpanm itself, for good measure"
938,ab4396f527eb0e1f9646c85de908c7431345065e,/bashbrew/put-multiarch/Dockerfile,# the tests for IO::Socket::SSL like to hang... :(
939,ab4396f527eb0e1f9646c85de908c7431345065e,/bashbrew/put-multiarch/Dockerfile,# https://metacpan.org/pod/release/SRI/Mojolicious-7.94/lib/Mojo/IOLoop.pm#DESCRIPTION
940,ab4396f527eb0e1f9646c85de908c7431345065e,/bashbrew/put-multiarch/Dockerfile,# epoll (Linux)
941,b91175c1f239af521c60f724a7ae799ceff9ab18,/Dockerfile,# bash for running scripts
942,b91175c1f239af521c60f724a7ae799ceff9ab18,/Dockerfile,# go for compiling bashbrew
943,b91175c1f239af521c60f724a7ae799ceff9ab18,/Dockerfile,# ssl for downloading files
944,b91175c1f239af521c60f724a7ae799ceff9ab18,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
945,b91175c1f239af521c60f724a7ae799ceff9ab18,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
946,9674242c7dcd4de8cfdf48b9ec22c5aaeac049b0,/Dockerfile,"# FYI, this base image is built via test-pr.sh (from https://github.com/docker-library/bashbrew/tree/master/Dockerfile)"
947,9674242c7dcd4de8cfdf48b9ec22c5aaeac049b0,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
948,9674242c7dcd4de8cfdf48b9ec22c5aaeac049b0,/Dockerfile,# git for cloning source code
949,a443f4dad7ad1e85f8e53f236134f14efa16c3de,/bashbrew/put-multiarch/Dockerfile,# secure by default â™¥ (thanks to sri!)
950,a443f4dad7ad1e85f8e53f236134f14efa16c3de,/bashbrew/put-multiarch/Dockerfile,"# TODO find a way to make --mirror-only / SSL work with backpan too :(
#RUN cpanm Digest::SHA Module::Signature
# TODO find a way to make --verify work with backpan as well :'(
#ENV PERL_CPANM_OPT $PERL_CPANM_OPT --verify"
951,a443f4dad7ad1e85f8e53f236134f14efa16c3de,/bashbrew/put-multiarch/Dockerfile,"# reinstall cpanm itself, for good measure"
952,a443f4dad7ad1e85f8e53f236134f14efa16c3de,/bashbrew/put-multiarch/Dockerfile,# the tests for IO::Socket::SSL like to hang... :(
953,a443f4dad7ad1e85f8e53f236134f14efa16c3de,/bashbrew/put-multiarch/Dockerfile,# https://metacpan.org/pod/release/SRI/Mojolicious-7.94/lib/Mojo/IOLoop.pm#DESCRIPTION
954,a443f4dad7ad1e85f8e53f236134f14efa16c3de,/bashbrew/put-multiarch/Dockerfile,# epoll (Linux)
955,cc7a2a4feae21d3e49afad94f9b2ddcfa98ae5b9,/Dockerfile,# bash for running scripts
956,cc7a2a4feae21d3e49afad94f9b2ddcfa98ae5b9,/Dockerfile,# go for compiling bashbrew
957,cc7a2a4feae21d3e49afad94f9b2ddcfa98ae5b9,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
958,cc7a2a4feae21d3e49afad94f9b2ddcfa98ae5b9,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
959,b0e81c734ff31013f07785774a2af8b9cc9fac3f,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
960,b0e81c734ff31013f07785774a2af8b9cc9fac3f,/Dockerfile,# git for cloning source code
961,b0e81c734ff31013f07785774a2af8b9cc9fac3f,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
962,b0e81c734ff31013f07785774a2af8b9cc9fac3f,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
963,b0e81c734ff31013f07785774a2af8b9cc9fac3f,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
964,351cbd088ae7b0fdd843893469294a29bbec851d,/Dockerfile,# bash for running scripts
965,351cbd088ae7b0fdd843893469294a29bbec851d,/Dockerfile,# go for compiling bashbrew
966,351cbd088ae7b0fdd843893469294a29bbec851d,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
967,351cbd088ae7b0fdd843893469294a29bbec851d,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
968,f9047bed7005a09ac579783948548260317d1e80,/Dockerfile,# bash for running scripts
969,f9047bed7005a09ac579783948548260317d1e80,/Dockerfile,# go for compiling bashbrew
970,f9047bed7005a09ac579783948548260317d1e80,/Dockerfile,# ssl for downloading files
971,f9047bed7005a09ac579783948548260317d1e80,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
972,f9047bed7005a09ac579783948548260317d1e80,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
973,f9047bed7005a09ac579783948548260317d1e80,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
974,f46246ee72fdea11cd9c632d368a448f4b5ccf5b,/Dockerfile,# bash for running scripts
975,f46246ee72fdea11cd9c632d368a448f4b5ccf5b,/Dockerfile,# go for compiling bashbrew
976,f46246ee72fdea11cd9c632d368a448f4b5ccf5b,/Dockerfile,# ssl for downloading files
977,f46246ee72fdea11cd9c632d368a448f4b5ccf5b,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
978,f46246ee72fdea11cd9c632d368a448f4b5ccf5b,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
979,f46246ee72fdea11cd9c632d368a448f4b5ccf5b,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
980,d0791691ddf0062621205f561641c810b82fdc0e,/Dockerfile,# bash for running scripts
981,d0791691ddf0062621205f561641c810b82fdc0e,/Dockerfile,# go for compiling bashbrew
982,d0791691ddf0062621205f561641c810b82fdc0e,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
983,d0791691ddf0062621205f561641c810b82fdc0e,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
984,b3768acff5c01c6680d253965fc79e3d0f901aba,/Dockerfile,# bash for running scripts
985,b3768acff5c01c6680d253965fc79e3d0f901aba,/Dockerfile,# go for compiling bashbrew
986,b3768acff5c01c6680d253965fc79e3d0f901aba,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
987,b3768acff5c01c6680d253965fc79e3d0f901aba,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
988,a5e126ebfbfd85d9872226fd5bf9fc04f97c4fdf,/Dockerfile,# bash for running scripts
989,a5e126ebfbfd85d9872226fd5bf9fc04f97c4fdf,/Dockerfile,# go for compiling bashbrew
990,a5e126ebfbfd85d9872226fd5bf9fc04f97c4fdf,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
991,a5e126ebfbfd85d9872226fd5bf9fc04f97c4fdf,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
992,6542167d925145d8b49a4ed9477465f99b95861d,/Dockerfile,# bash for running scripts
993,6542167d925145d8b49a4ed9477465f99b95861d,/Dockerfile,# go for compiling bashbrew
994,6542167d925145d8b49a4ed9477465f99b95861d,/Dockerfile,# ssl for downloading files
995,6542167d925145d8b49a4ed9477465f99b95861d,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
996,6542167d925145d8b49a4ed9477465f99b95861d,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
997,6542167d925145d8b49a4ed9477465f99b95861d,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
998,1c08f4f4f3542f265701be3ca36b45fbc824e9ff,/Dockerfile,# bash for running scripts
999,1c08f4f4f3542f265701be3ca36b45fbc824e9ff,/Dockerfile,# go for compiling bashbrew
1000,1c08f4f4f3542f265701be3ca36b45fbc824e9ff,/Dockerfile,# ssl for downloading files
1001,1c08f4f4f3542f265701be3ca36b45fbc824e9ff,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
1002,1c08f4f4f3542f265701be3ca36b45fbc824e9ff,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
1003,1c08f4f4f3542f265701be3ca36b45fbc824e9ff,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
1004,10a016b4c60e575622801d3fb5ec01b88e60060c,/Dockerfile,# bash for running scripts
1005,10a016b4c60e575622801d3fb5ec01b88e60060c,/Dockerfile,# go for compiling bashbrew
1006,10a016b4c60e575622801d3fb5ec01b88e60060c,/Dockerfile,# ssl for downloading files
1007,10a016b4c60e575622801d3fb5ec01b88e60060c,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
1008,10a016b4c60e575622801d3fb5ec01b88e60060c,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
1009,a992beb20f463850df6809b1a7f7296b7270d877,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
1010,a992beb20f463850df6809b1a7f7296b7270d877,/Dockerfile,# git for cloning source code
1011,a992beb20f463850df6809b1a7f7296b7270d877,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
1012,a992beb20f463850df6809b1a7f7296b7270d877,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
1013,a992beb20f463850df6809b1a7f7296b7270d877,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
1014,afb7dd7f5782a9d127cbd4ef871bfdd16f545998,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
1015,afb7dd7f5782a9d127cbd4ef871bfdd16f545998,/Dockerfile,# git for cloning source code
1016,afb7dd7f5782a9d127cbd4ef871bfdd16f545998,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
1017,afb7dd7f5782a9d127cbd4ef871bfdd16f545998,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
1018,afb7dd7f5782a9d127cbd4ef871bfdd16f545998,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
1019,7e4e9d9f0e4351b5beeb4b6a5fe0760bf62794ea,/Dockerfile,# bash for running scripts
1020,7e4e9d9f0e4351b5beeb4b6a5fe0760bf62794ea,/Dockerfile,# go for compiling bashbrew
1021,7e4e9d9f0e4351b5beeb4b6a5fe0760bf62794ea,/Dockerfile,# ssl for downloading files
1022,7e4e9d9f0e4351b5beeb4b6a5fe0760bf62794ea,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
1023,7e4e9d9f0e4351b5beeb4b6a5fe0760bf62794ea,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
1024,436fc6fa7d66f40f3adff7da5aaf7f1d8e7e252e,/Dockerfile,# bash for running scripts
1025,436fc6fa7d66f40f3adff7da5aaf7f1d8e7e252e,/Dockerfile,# go for compiling bashbrew
1026,436fc6fa7d66f40f3adff7da5aaf7f1d8e7e252e,/Dockerfile,# ssl for downloading files
1027,436fc6fa7d66f40f3adff7da5aaf7f1d8e7e252e,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
1028,436fc6fa7d66f40f3adff7da5aaf7f1d8e7e252e,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
1029,436fc6fa7d66f40f3adff7da5aaf7f1d8e7e252e,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
1030,01342e45187a88b5ef94e77c89aa73ca01b8bc69,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
1031,01342e45187a88b5ef94e77c89aa73ca01b8bc69,/Dockerfile,# git for cloning source code
1032,01342e45187a88b5ef94e77c89aa73ca01b8bc69,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
1033,01342e45187a88b5ef94e77c89aa73ca01b8bc69,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
1034,01342e45187a88b5ef94e77c89aa73ca01b8bc69,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
1035,744bc3e0da0e8304842ce85303922918301cdc04,/Dockerfile,# bash for running scripts
1036,744bc3e0da0e8304842ce85303922918301cdc04,/Dockerfile,# go for compiling bashbrew
1037,744bc3e0da0e8304842ce85303922918301cdc04,/Dockerfile,# ssl for downloading files
1038,744bc3e0da0e8304842ce85303922918301cdc04,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
1039,744bc3e0da0e8304842ce85303922918301cdc04,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
1040,744bc3e0da0e8304842ce85303922918301cdc04,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
1041,092096a63f590cb598cac09d5130ec6816fa3651,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
1042,092096a63f590cb598cac09d5130ec6816fa3651,/Dockerfile,# git for cloning source code
1043,092096a63f590cb598cac09d5130ec6816fa3651,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
1044,092096a63f590cb598cac09d5130ec6816fa3651,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
1045,092096a63f590cb598cac09d5130ec6816fa3651,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
1046,7ed29c5671bfa8ba938f63edfe9d3fa816e6632b,/Dockerfile,# bash for running scripts
1047,7ed29c5671bfa8ba938f63edfe9d3fa816e6632b,/Dockerfile,# go for compiling bashbrew
1048,7ed29c5671bfa8ba938f63edfe9d3fa816e6632b,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
1049,7ed29c5671bfa8ba938f63edfe9d3fa816e6632b,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
1050,23486bdf38f2b6fd232e8786b2bcc567a1d01bf0,/bashbrew/put-multiarch/Dockerfile,# secure by default â™¥ (thanks to sri!)
1051,23486bdf38f2b6fd232e8786b2bcc567a1d01bf0,/bashbrew/put-multiarch/Dockerfile,"# TODO find a way to make --mirror-only / SSL work with backpan too :(
#RUN cpanm Digest::SHA Module::Signature
# TODO find a way to make --verify work with backpan as well :'(
#ENV PERL_CPANM_OPT $PERL_CPANM_OPT --verify"
1052,23486bdf38f2b6fd232e8786b2bcc567a1d01bf0,/bashbrew/put-multiarch/Dockerfile,"# reinstall cpanm itself, for good measure"
1053,23486bdf38f2b6fd232e8786b2bcc567a1d01bf0,/bashbrew/put-multiarch/Dockerfile,# the tests for IO::Socket::SSL like to hang... :(
1054,23486bdf38f2b6fd232e8786b2bcc567a1d01bf0,/bashbrew/put-multiarch/Dockerfile,# https://metacpan.org/pod/release/SRI/Mojolicious-7.94/lib/Mojo/IOLoop.pm#DESCRIPTION
1055,23486bdf38f2b6fd232e8786b2bcc567a1d01bf0,/bashbrew/put-multiarch/Dockerfile,# epoll (Linux)
1056,1e8f81ef241b13ed54325341f9d1f005c6100526,/Dockerfile,# bash for running scripts
1057,1e8f81ef241b13ed54325341f9d1f005c6100526,/Dockerfile,# go for compiling bashbrew
1058,1e8f81ef241b13ed54325341f9d1f005c6100526,/Dockerfile,# ssl for downloading files
1059,1e8f81ef241b13ed54325341f9d1f005c6100526,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
1060,1e8f81ef241b13ed54325341f9d1f005c6100526,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
1061,1e8f81ef241b13ed54325341f9d1f005c6100526,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
1062,b60da4b6bce00e29ef731f5ce0add6253950104d,/Dockerfile,# bash for running scripts
1063,b60da4b6bce00e29ef731f5ce0add6253950104d,/Dockerfile,# go for compiling bashbrew
1064,b60da4b6bce00e29ef731f5ce0add6253950104d,/Dockerfile,# ssl for downloading files
1065,b60da4b6bce00e29ef731f5ce0add6253950104d,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
1066,b60da4b6bce00e29ef731f5ce0add6253950104d,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
1067,b60da4b6bce00e29ef731f5ce0add6253950104d,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
1068,82f3a60c55c9e2331289f666224558b3bc9c9858,/Dockerfile,# bash for running scripts
1069,82f3a60c55c9e2331289f666224558b3bc9c9858,/Dockerfile,# go for compiling bashbrew
1070,82f3a60c55c9e2331289f666224558b3bc9c9858,/Dockerfile,# ssl for downloading files
1071,82f3a60c55c9e2331289f666224558b3bc9c9858,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
1072,82f3a60c55c9e2331289f666224558b3bc9c9858,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
1073,82f3a60c55c9e2331289f666224558b3bc9c9858,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
1074,500612e2ad611beece5a6256c73af8f6140b661f,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
1075,500612e2ad611beece5a6256c73af8f6140b661f,/Dockerfile,# git for cloning source code
1076,500612e2ad611beece5a6256c73af8f6140b661f,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
1077,500612e2ad611beece5a6256c73af8f6140b661f,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
1078,500612e2ad611beece5a6256c73af8f6140b661f,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
1079,d796d91307abe74684f38206763b380ce6d6f94c,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
1080,d796d91307abe74684f38206763b380ce6d6f94c,/Dockerfile,# git for cloning source code
1081,d796d91307abe74684f38206763b380ce6d6f94c,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
1082,d796d91307abe74684f38206763b380ce6d6f94c,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
1083,d796d91307abe74684f38206763b380ce6d6f94c,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
1084,4b77cc543543e5216696547065042f6a85cdb2e9,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
1085,4b77cc543543e5216696547065042f6a85cdb2e9,/Dockerfile,# git for cloning source code
1086,4b77cc543543e5216696547065042f6a85cdb2e9,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
1087,4b77cc543543e5216696547065042f6a85cdb2e9,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
1088,4b77cc543543e5216696547065042f6a85cdb2e9,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
1089,3f4cfb7805f2a2b3ba1d53b674a51b99dab8e1a9,/bashbrew/put-multiarch/Dockerfile,# secure by default â™¥ (thanks to sri!)
1090,3f4cfb7805f2a2b3ba1d53b674a51b99dab8e1a9,/bashbrew/put-multiarch/Dockerfile,"# TODO find a way to make --mirror-only / SSL work with backpan too :(
#RUN cpanm Digest::SHA Module::Signature
# TODO find a way to make --verify work with backpan as well :'(
#ENV PERL_CPANM_OPT $PERL_CPANM_OPT --verify"
1091,3f4cfb7805f2a2b3ba1d53b674a51b99dab8e1a9,/bashbrew/put-multiarch/Dockerfile,"# reinstall cpanm itself, for good measure"
1092,3f4cfb7805f2a2b3ba1d53b674a51b99dab8e1a9,/bashbrew/put-multiarch/Dockerfile,# the tests for IO::Socket::SSL like to hang... :(
1093,3f4cfb7805f2a2b3ba1d53b674a51b99dab8e1a9,/bashbrew/put-multiarch/Dockerfile,# https://metacpan.org/pod/release/SRI/Mojolicious-7.94/lib/Mojo/IOLoop.pm#DESCRIPTION
1094,3f4cfb7805f2a2b3ba1d53b674a51b99dab8e1a9,/bashbrew/put-multiarch/Dockerfile,# epoll (Linux)
1095,c21ec66e1d610d681ffbb1fa3acb3a62b46f6f0c,/Dockerfile,# bash for running scripts
1096,c21ec66e1d610d681ffbb1fa3acb3a62b46f6f0c,/Dockerfile,# go for compiling bashbrew
1097,c21ec66e1d610d681ffbb1fa3acb3a62b46f6f0c,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
1098,c21ec66e1d610d681ffbb1fa3acb3a62b46f6f0c,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
1099,99d6385896db653be9a20b13f53bd572519cbfbc,/Dockerfile,# bash for running scripts
1100,99d6385896db653be9a20b13f53bd572519cbfbc,/Dockerfile,# go for compiling bashbrew
1101,99d6385896db653be9a20b13f53bd572519cbfbc,/Dockerfile,# ssl for downloading files
1102,99d6385896db653be9a20b13f53bd572519cbfbc,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
1103,99d6385896db653be9a20b13f53bd572519cbfbc,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
1104,99d6385896db653be9a20b13f53bd572519cbfbc,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
1105,aa60dae350c74a6d33da8dc49b3cfcf01a54fba6,/Dockerfile,# bash for running scripts
1106,aa60dae350c74a6d33da8dc49b3cfcf01a54fba6,/Dockerfile,# go for compiling bashbrew
1107,aa60dae350c74a6d33da8dc49b3cfcf01a54fba6,/Dockerfile,# ssl for downloading files
1108,aa60dae350c74a6d33da8dc49b3cfcf01a54fba6,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
1109,aa60dae350c74a6d33da8dc49b3cfcf01a54fba6,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
1110,aa60dae350c74a6d33da8dc49b3cfcf01a54fba6,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
1111,c9b50a595880bd9967c7a981fe7fed31323d208f,/Dockerfile,"# FYI, this base image is built via test-pr.sh (from https://github.com/docker-library/bashbrew/tree/master/Dockerfile)"
1112,c9b50a595880bd9967c7a981fe7fed31323d208f,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
1113,c9b50a595880bd9967c7a981fe7fed31323d208f,/Dockerfile,# git for cloning source code
1114,00bb816b645622547e6a47f1acc88a807651a891,/Dockerfile,# bash for running scripts
1115,00bb816b645622547e6a47f1acc88a807651a891,/Dockerfile,# go for compiling bashbrew
1116,00bb816b645622547e6a47f1acc88a807651a891,/Dockerfile,# ssl for downloading files
1117,00bb816b645622547e6a47f1acc88a807651a891,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
1118,00bb816b645622547e6a47f1acc88a807651a891,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
1119,00bb816b645622547e6a47f1acc88a807651a891,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
1120,dc0cef28f15316181184f950c0cc67e2b4abe350,/Dockerfile,"# FYI, this base image is built via test-pr.sh (from https://github.com/docker-library/bashbrew/tree/master/Dockerfile)"
1121,dc0cef28f15316181184f950c0cc67e2b4abe350,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
1122,dc0cef28f15316181184f950c0cc67e2b4abe350,/Dockerfile,# git for cloning source code
1123,cf9e55c51bface2b503389c8ec0556d3711c7028,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
1124,cf9e55c51bface2b503389c8ec0556d3711c7028,/Dockerfile,# git for cloning source code
1125,cf9e55c51bface2b503389c8ec0556d3711c7028,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
1126,cf9e55c51bface2b503389c8ec0556d3711c7028,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
1127,cf9e55c51bface2b503389c8ec0556d3711c7028,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
1128,3e348cfe10f5451704da8806885d88feb8c972a8,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
1129,3e348cfe10f5451704da8806885d88feb8c972a8,/Dockerfile,# git for cloning source code
1130,3e348cfe10f5451704da8806885d88feb8c972a8,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
1131,3e348cfe10f5451704da8806885d88feb8c972a8,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
1132,3e348cfe10f5451704da8806885d88feb8c972a8,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
1133,4c787e86ca7dba93a8faaf9590c9f62a836a246a,/Dockerfile,"# FYI, this base image is built via test-pr.sh (from https://github.com/docker-library/bashbrew/tree/master/Dockerfile)"
1134,4c787e86ca7dba93a8faaf9590c9f62a836a246a,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
1135,4c787e86ca7dba93a8faaf9590c9f62a836a246a,/Dockerfile,# git for cloning source code
1136,ad33d39b3cbe5372937a61be226fe45ed770dfca,/Dockerfile,# bash for running scripts
1137,ad33d39b3cbe5372937a61be226fe45ed770dfca,/Dockerfile,# go for compiling bashbrew
1138,ad33d39b3cbe5372937a61be226fe45ed770dfca,/Dockerfile,# ssl for downloading files
1139,ad33d39b3cbe5372937a61be226fe45ed770dfca,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
1140,ad33d39b3cbe5372937a61be226fe45ed770dfca,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
1141,ad33d39b3cbe5372937a61be226fe45ed770dfca,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
1142,a443f4dad7ad1e85f8e53f236134f14efa16c3de,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
1143,a443f4dad7ad1e85f8e53f236134f14efa16c3de,/Dockerfile,# git for cloning source code
1144,a443f4dad7ad1e85f8e53f236134f14efa16c3de,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
1145,a443f4dad7ad1e85f8e53f236134f14efa16c3de,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
1146,a443f4dad7ad1e85f8e53f236134f14efa16c3de,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
1147,033c708751cc389f4661ae4f4a16474f3c8e33e2,/bashbrew/put-multiarch/Dockerfile,# secure by default â™¥ (thanks to sri!)
1148,033c708751cc389f4661ae4f4a16474f3c8e33e2,/bashbrew/put-multiarch/Dockerfile,"# TODO find a way to make --mirror-only / SSL work with backpan too :(
#RUN cpanm Digest::SHA Module::Signature
# TODO find a way to make --verify work with backpan as well :'(
#ENV PERL_CPANM_OPT $PERL_CPANM_OPT --verify"
1149,033c708751cc389f4661ae4f4a16474f3c8e33e2,/bashbrew/put-multiarch/Dockerfile,"# reinstall cpanm itself, for good measure"
1150,033c708751cc389f4661ae4f4a16474f3c8e33e2,/bashbrew/put-multiarch/Dockerfile,# the tests for IO::Socket::SSL like to hang... :(
1151,033c708751cc389f4661ae4f4a16474f3c8e33e2,/bashbrew/put-multiarch/Dockerfile,# https://metacpan.org/pod/release/SRI/Mojolicious-7.94/lib/Mojo/IOLoop.pm#DESCRIPTION
1152,033c708751cc389f4661ae4f4a16474f3c8e33e2,/bashbrew/put-multiarch/Dockerfile,# epoll (Linux)
1153,feee857f79da8bb02e6a1220831c9de248e91604,/Dockerfile,"# add ""edge"" since Alpine 3.3 only has Go 1.5 and we need 1.6+"
1154,2ed75e04af57ae8444d0eb360e69130afe1d032c,/Dockerfile,"# FYI, this base image is built via test-pr.sh (from https://github.com/docker-library/bashbrew/tree/master/Dockerfile)"
1155,2ed75e04af57ae8444d0eb360e69130afe1d032c,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
1156,2ed75e04af57ae8444d0eb360e69130afe1d032c,/Dockerfile,# git for cloning source code
1157,e1c20e08e1693577ec7a9c85767e50765d39b01a,/Dockerfile,# ssl for downloading files
1158,e1c20e08e1693577ec7a9c85767e50765d39b01a,/Dockerfile,# git for cloning source code
1159,e1c20e08e1693577ec7a9c85767e50765d39b01a,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
1160,e1c20e08e1693577ec7a9c85767e50765d39b01a,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
1161,e1c20e08e1693577ec7a9c85767e50765d39b01a,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
1162,e7a0e9b866a114d4f6387587a97d95edad02f7f5,/bashbrew/put-multiarch/Dockerfile,# secure by default â™¥ (thanks to sri!)
1163,e7a0e9b866a114d4f6387587a97d95edad02f7f5,/bashbrew/put-multiarch/Dockerfile,"# TODO find a way to make --mirror-only / SSL work with backpan too :(
#RUN cpanm Digest::SHA Module::Signature
# TODO find a way to make --verify work with backpan as well :'(
#ENV PERL_CPANM_OPT $PERL_CPANM_OPT --verify"
1164,e7a0e9b866a114d4f6387587a97d95edad02f7f5,/bashbrew/put-multiarch/Dockerfile,"# reinstall cpanm itself, for good measure"
1165,e7a0e9b866a114d4f6387587a97d95edad02f7f5,/bashbrew/put-multiarch/Dockerfile,# the tests for IO::Socket::SSL like to hang... :(
1166,e7a0e9b866a114d4f6387587a97d95edad02f7f5,/bashbrew/put-multiarch/Dockerfile,# https://metacpan.org/pod/release/SRI/Mojolicious-7.94/lib/Mojo/IOLoop.pm#DESCRIPTION
1167,e7a0e9b866a114d4f6387587a97d95edad02f7f5,/bashbrew/put-multiarch/Dockerfile,# epoll (Linux)
1168,3f4cfb7805f2a2b3ba1d53b674a51b99dab8e1a9,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
1169,3f4cfb7805f2a2b3ba1d53b674a51b99dab8e1a9,/Dockerfile,# git for cloning source code
1170,3f4cfb7805f2a2b3ba1d53b674a51b99dab8e1a9,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
1171,3f4cfb7805f2a2b3ba1d53b674a51b99dab8e1a9,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
1172,3f4cfb7805f2a2b3ba1d53b674a51b99dab8e1a9,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
1173,aec7a9284397a03a553236bfcd4df900beb30c9a,/Dockerfile,# bash for running scripts
1174,aec7a9284397a03a553236bfcd4df900beb30c9a,/Dockerfile,# go for compiling bashbrew
1175,aec7a9284397a03a553236bfcd4df900beb30c9a,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
1176,aec7a9284397a03a553236bfcd4df900beb30c9a,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
1177,1fedec2869e560fdb21faf034fe85f0be103d8ef,/Dockerfile,# ssl for downloading files
1178,1fedec2869e560fdb21faf034fe85f0be103d8ef,/Dockerfile,# git for cloning source code
1179,1fedec2869e560fdb21faf034fe85f0be103d8ef,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
1180,1fedec2869e560fdb21faf034fe85f0be103d8ef,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
1181,1fedec2869e560fdb21faf034fe85f0be103d8ef,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
1182,7ced84155f4b3fe8ded372093598a0d27e8198f6,/Dockerfile,"# FYI, this base image is built via test-pr.sh (from https://github.com/docker-library/bashbrew/tree/master/Dockerfile)"
1183,7ced84155f4b3fe8ded372093598a0d27e8198f6,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
1184,7ced84155f4b3fe8ded372093598a0d27e8198f6,/Dockerfile,# git for cloning source code
1185,9ef864b99aaa51dae6f1eed2a323de08c65735a3,/Dockerfile,# bash for running scripts
1186,9ef864b99aaa51dae6f1eed2a323de08c65735a3,/Dockerfile,# go for compiling bashbrew
1187,9ef864b99aaa51dae6f1eed2a323de08c65735a3,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
1188,9ef864b99aaa51dae6f1eed2a323de08c65735a3,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
1189,62a1d1e802084dc7c46770cf553476e815254082,/Dockerfile,# bash for running scripts
1190,62a1d1e802084dc7c46770cf553476e815254082,/Dockerfile,# go for compiling bashbrew
1191,62a1d1e802084dc7c46770cf553476e815254082,/Dockerfile,# ssl for downloading files
1192,62a1d1e802084dc7c46770cf553476e815254082,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
1193,62a1d1e802084dc7c46770cf553476e815254082,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
1194,62a1d1e802084dc7c46770cf553476e815254082,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
1195,1c0a2dc7ea86fccfaf37717e62f0dc695c9c8f14,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
1196,1c0a2dc7ea86fccfaf37717e62f0dc695c9c8f14,/Dockerfile,# git for cloning source code
1197,1c0a2dc7ea86fccfaf37717e62f0dc695c9c8f14,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
1198,1c0a2dc7ea86fccfaf37717e62f0dc695c9c8f14,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
1199,1c0a2dc7ea86fccfaf37717e62f0dc695c9c8f14,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
1200,6863d6328d215e1144fb6a360c87437ddc5947b8,/Dockerfile,# bash for running scripts
1201,6863d6328d215e1144fb6a360c87437ddc5947b8,/Dockerfile,# go for compiling bashbrew
1202,6863d6328d215e1144fb6a360c87437ddc5947b8,/Dockerfile,# ssl for downloading files
1203,6863d6328d215e1144fb6a360c87437ddc5947b8,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
1204,6863d6328d215e1144fb6a360c87437ddc5947b8,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
1205,68105ffa6cebf1c58fc2d4c4a7bf2843c5d28819,/Dockerfile,# bash for running scripts
1206,68105ffa6cebf1c58fc2d4c4a7bf2843c5d28819,/Dockerfile,# go for compiling bashbrew
1207,68105ffa6cebf1c58fc2d4c4a7bf2843c5d28819,/Dockerfile,# ssl for downloading files
1208,68105ffa6cebf1c58fc2d4c4a7bf2843c5d28819,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
1209,68105ffa6cebf1c58fc2d4c4a7bf2843c5d28819,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
1210,68105ffa6cebf1c58fc2d4c4a7bf2843c5d28819,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
1211,abf4059523d47f815095837103554f6ab4cb67d8,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
1212,abf4059523d47f815095837103554f6ab4cb67d8,/Dockerfile,# git for cloning source code
1213,abf4059523d47f815095837103554f6ab4cb67d8,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
1214,abf4059523d47f815095837103554f6ab4cb67d8,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
1215,abf4059523d47f815095837103554f6ab4cb67d8,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
1216,7c35f1dfe1a425d39e78b2af80279d069853a544,/Dockerfile,# bash for running scripts
1217,7c35f1dfe1a425d39e78b2af80279d069853a544,/Dockerfile,# go for compiling bashbrew
1218,7c35f1dfe1a425d39e78b2af80279d069853a544,/Dockerfile,# ssl for downloading files
1219,7c35f1dfe1a425d39e78b2af80279d069853a544,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
1220,7c35f1dfe1a425d39e78b2af80279d069853a544,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
1221,19302f2c0aa485d6687cba3e838f638fbcdae944,/Dockerfile,# bash for running scripts
1222,19302f2c0aa485d6687cba3e838f638fbcdae944,/Dockerfile,# go for compiling bashbrew
1223,19302f2c0aa485d6687cba3e838f638fbcdae944,/Dockerfile,# ssl for downloading files
1224,19302f2c0aa485d6687cba3e838f638fbcdae944,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
1225,19302f2c0aa485d6687cba3e838f638fbcdae944,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
1226,19302f2c0aa485d6687cba3e838f638fbcdae944,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
1227,6fa8c3fc59ada19af3e2d6312aac61148444d99d,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
1228,6fa8c3fc59ada19af3e2d6312aac61148444d99d,/Dockerfile,# git for cloning source code
1229,6fa8c3fc59ada19af3e2d6312aac61148444d99d,/Dockerfile,# go for compiling bashbrew (backports to get new enough version and to make it work on s390x)
1230,6fa8c3fc59ada19af3e2d6312aac61148444d99d,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
1231,6fa8c3fc59ada19af3e2d6312aac61148444d99d,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
1232,5073f79b1357dcb1152f150aeb002db805f44fe3,/Dockerfile,# bash for running scripts
1233,5073f79b1357dcb1152f150aeb002db805f44fe3,/Dockerfile,# go for compiling bashbrew
1234,5073f79b1357dcb1152f150aeb002db805f44fe3,/Dockerfile,# ssl for downloading files
1235,5073f79b1357dcb1152f150aeb002db805f44fe3,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
1236,5073f79b1357dcb1152f150aeb002db805f44fe3,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
1237,5073f79b1357dcb1152f150aeb002db805f44fe3,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
1238,5b5029bdadd56ae9bf184a05032d16fd7ab14691,/Dockerfile,# bash for running scripts
1239,5b5029bdadd56ae9bf184a05032d16fd7ab14691,/Dockerfile,# go for compiling bashbrew
1240,5b5029bdadd56ae9bf184a05032d16fd7ab14691,/Dockerfile,# ssl for downloading files
1241,5b5029bdadd56ae9bf184a05032d16fd7ab14691,/Dockerfile,"# coreutils for real ""tac"" so it isn't busybox-buggy (where it seems to fail if the pipe is closed prematurely, which defeats the whole purpose of the ""tac|tac"" idiom)"
1242,5b5029bdadd56ae9bf184a05032d16fd7ab14691,/Dockerfile,# make sure our default cache dir exists and is writable by anyone (similar to /tmp)
1243,5b5029bdadd56ae9bf184a05032d16fd7ab14691,/Dockerfile,# (this allows us to decide at runtime the exact uid/gid we'd like to run as)
1244,17af4888ceffc8c59abba2d2d7e5f5238f9569f4,/Dockerfile,"# FYI, this base image is built via test-pr.sh (from https://github.com/docker-library/bashbrew/tree/master/Dockerfile)"
1245,17af4888ceffc8c59abba2d2d7e5f5238f9569f4,/Dockerfile,"# wget for downloading files (especially in tests, which run in this environment)"
1246,17af4888ceffc8c59abba2d2d7e5f5238f9569f4,/Dockerfile,# git for cloning source code
